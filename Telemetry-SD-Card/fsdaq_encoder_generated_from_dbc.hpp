#include "mbed.h"

#define COLS 222
#define ROWS 80

static const char *col_names[] = { "SME_THROTL_TorqueDemand", "SME_THROTL_MaxSpeed", "SME_THROTL_Forward", "SME_THROTL_Reverse", "SME_THROTL_UNUSED_BIT_1", "SME_THROTL_PowerReady", "SME_THROTL_UNUSED_BIT_2", "SME_THROTL_UNUSED_BIT_3", "SME_THROTL_UNUSED_BIT_4", "SME_THROTL_UNUSED_BIT_5", "SME_THROTL_MBB_Alive", "SME_THROTL_UNUSED_BIT_6", "SME_THROTL_UNUSED_BIT_7", "SME_THROTL_UNUSED_BIT_8", "SME_THROTL_UNUSED_BIT_9", "SME_THROTL_UNUSED_SHORT_1", "SME_CURRLIM_ChargeCurrentLim", "SME_CURRLIM_DischargeCurrentLim", "SME_CURRLIM_UNUSED_INT_1", "SME_TRQSPD_Speed", "SME_TRQSPD_Torque", "SME_TRQSPD_SOC_Low_Traction", "SME_TRQSPD_SOC_Low_Hydraulic", "SME_TRQSPD_Reverse", "SME_TRQSPD_Forward", "SME_TRQSPD_Park_Brake", "SME_TRQSPD_Pedal_Brake", "SME_TRQSPD_Controller_Overtermp", "SME_TRQSPD_Key_switch_overvolt", "SME_TRQSPD_Key_switch_undervolt", "SME_TRQSPD_Running", "SME_TRQSPD_Traction", "SME_TRQSPD_Hydraulic", "SME_TRQSPD_Powering_Enabled", "SME_TRQSPD_Powering_Ready", "SME_TRQSPD_Precharging", "SME_TRQSPD_contactor_closed", "SME_TRQSPD_MotorFlags", "SME_TEMP_MotorTemperature", "SME_TEMP_ControllerTemperature", "SME_TEMP_DC_Bus_V", "SME_TEMP_FaultCode", "SME_TEMP_FaultLevel", "SME_TEMP_BusCurrent", "ACC_STATUS_BMS_FAULT", "ACC_STATUS_IMD_FAULT", "ACC_STATUS_SHUTDOWN_STATE", "ACC_STATUS_PRECHARGE_DONE", "ACC_STATUS_PRECHARING", "ACC_STATUS_CELL_TOO_LOW", "ACC_STATUS_CELL_TOO_HIGH", "ACC_STATUS_TEMP_TOO_LOW", "ACC_STATUS_TEMP_TOO_HIGH", "ACC_POWER_PACK_VOLTAGE", "ACC_POWER_SOC", "ACC_POWER_CURRENT", "ACC_SEG0_VOLTS_CELL0", "ACC_SEG0_VOLTS_CELL1", "ACC_SEG0_VOLTS_CELL2", "ACC_SEG0_VOLTS_CELL3", "ACC_SEG0_VOLTS_CELL4", "ACC_SEG0_VOLTS_CELL5", "ACC_SEG0_TEMPS_CELL0", "ACC_SEG0_TEMPS_CELL1", "ACC_SEG0_TEMPS_CELL2", "ACC_SEG0_TEMPS_CELL3", "ACC_SEG0_TEMPS_CELL4", "ACC_SEG0_TEMPS_CELL5", "ACC_SEG1_VOLTS_CELL0", "ACC_SEG1_VOLTS_CELL1", "ACC_SEG1_VOLTS_CELL2", "ACC_SEG1_VOLTS_CELL3", "ACC_SEG1_VOLTS_CELL4", "ACC_SEG1_VOLTS_CELL5", "ACC_SEG1_TEMPS_CELL0", "ACC_SEG1_TEMPS_CELL1", "ACC_SEG1_TEMPS_CELL2", "ACC_SEG1_TEMPS_CELL3", "ACC_SEG1_TEMPS_CELL4", "ACC_SEG1_TEMPS_CELL5", "ACC_SEG2_VOLTS_CELL0", "ACC_SEG2_VOLTS_CELL1", "ACC_SEG2_VOLTS_CELL2", "ACC_SEG2_VOLTS_CELL3", "ACC_SEG2_VOLTS_CELL4", "ACC_SEG2_VOLTS_CELL5", "ACC_SEG2_TEMPS_CELL0", "ACC_SEG2_TEMPS_CELL1", "ACC_SEG2_TEMPS_CELL2", "ACC_SEG2_TEMPS_CELL3", "ACC_SEG2_TEMPS_CELL4", "ACC_SEG2_TEMPS_CELL5", "ACC_SEG3_VOLTS_CELL0", "ACC_SEG3_VOLTS_CELL1", "ACC_SEG3_VOLTS_CELL2", "ACC_SEG3_VOLTS_CELL3", "ACC_SEG3_VOLTS_CELL4", "ACC_SEG3_VOLTS_CELL5", "ACC_SEG3_TEMPS_CELL0", "ACC_SEG3_TEMPS_CELL1", "ACC_SEG3_TEMPS_CELL2", "ACC_SEG3_TEMPS_CELL3", "ACC_SEG3_TEMPS_CELL4", "ACC_SEG3_TEMPS_CELL5", "ACC_SEG4_VOLTS_CELL0", "ACC_SEG4_VOLTS_CELL1", "ACC_SEG4_VOLTS_CELL2", "ACC_SEG4_VOLTS_CELL3", "ACC_SEG4_VOLTS_CELL4", "ACC_SEG4_VOLTS_CELL5", "ACC_SEG4_TEMPS_CELL0", "ACC_SEG4_TEMPS_CELL1", "ACC_SEG4_TEMPS_CELL2", "ACC_SEG4_TEMPS_CELL3", "ACC_SEG4_TEMPS_CELL4", "ACC_SEG4_TEMPS_CELL5", "ACC_SEG5_VOLTS_CELL0", "ACC_SEG5_VOLTS_CELL1", "ACC_SEG5_VOLTS_CELL2", "ACC_SEG5_VOLTS_CELL3", "ACC_SEG5_VOLTS_CELL4", "ACC_SEG5_VOLTS_CELL5", "ACC_SEG5_TEMPS_CELL0", "ACC_SEG5_TEMPS_CELL1", "ACC_SEG5_TEMPS_CELL2", "ACC_SEG5_TEMPS_CELL3", "ACC_SEG5_TEMPS_CELL4", "ACC_SEG5_TEMPS_CELL5", "VDM_GPS_Latitude", "VDM_GPS_Longitude", "VDM_GPS_SPEED", "VDM_GPS_ALTITUDE", "VDM_GPS_TRUE_COURSE", "VDM_GPS_SATELLITES_IN_USE", "VDM_GPS_VALID1", "VDM_GPS_VALID2", "VDM_UTC_DATE_YEAR", "VDM_UTC_DATE_MONTH", "VDM_UTC_DATE_DAY", "VDM_UTC_TIME_HOURS", "VDM_UTC_TIME_MINUTES", "VDM_UTC_TIME_SECONDS", "VDM_X_AXIS_ACCELERATION", "VDM_Y_AXIS_ACCELERATION", "VDM_Z_AXIS_ACCELERATION", "VDM_X_AXIS_YAW_RATE", "VDM_Y_AXIS_YAW_RATE", "VDM_Z_AXIS_YAW_RATE", "ETC_STATUS_HE1", "ETC_STATUS_HE2", "ETC_STATUS_BRAKE_SENSE_VOLTAGE", "ETC_STATUS_PEDAL_TRAVEL", "ETC_STATUS_RTD_BUTTON", "ETC_STATUS_RTDS", "ETC_STATUS_REVERSE", "ETC_STATUS_BRAKELIGHT", "ETC_STATUS_RTD", "ETC_STATUS_IMPLAUSIBILITY", "ETC_STATUS_TS_ACTIVE", "PDB_POWER_A_GLV_VOLTAGE", "PDB_POWER_A_CURRENT_SHUTDOWN", "PDB_POWER_A_CURRENT_ACC", "PDB_POWER_A_CURRENT_ETC", "PDB_POWER_A_CURRENT_BPS", "PDB_POWER_A_CURRENT_TRACTIVE", "PDB_POWER_A_CURRENT_BSPD", "PDB_POWER_B_CURRENT_TELEMETRY", "PDB_POWER_B_CURRENT_PDB", "PDB_POWER_B_CURRENT_DASH", "PDB_POWER_B_CURRENT_RTML", "PDB_POWER_B_CURRENT_EXTRA_1", "PDB_POWER_B_CURRENT_EXTRA_2", "TMAIN_DATA_BRAKES_F", "TMAIN_DATA_BRAKES_R", "TPERIPH_FL_DATA_WHEELSPEED", "TPERIPH_FL_DATA_SUSTRAVEL", "TPERIPH_FL_DATA_STRAIN", "TPERIPH_FL_DATA_SIDE_TIRE_TEMP", "TPERIPH_FR_DATA_WHEELSPEED", "TPERIPH_FR_DATA_SUSTRAVEL", "TPERIPH_FR_DATA_STRAIN", "TPERIPH_FR_DATA_SIDE_TIRE_TEMP", "TPERIPH_BL_DATA_WHEELSPEED", "TPERIPH_BL_DATA_SUSTRAVEL", "TPERIPH_BL_DATA_STRAIN", "TPERIPH_BL_DATA_SIDE_TIRE_TEMP", "TPERIPH_BR_DATA_WHEELSPEED", "TPERIPH_BR_DATA_SUSTRAVEL", "TPERIPH_BR_DATA_STRAIN", "TPERIPH_BR_DATA_SIDE_TIRE_TEMP", "TPERIPH_FL_TIRETEMP_1", "TPERIPH_FL_TIRETEMP_2", "TPERIPH_FL_TIRETEMP_3", "TPERIPH_FL_TIRETEMP_4", "TPERIPH_FL_TIRETEMP_5", "TPERIPH_FL_TIRETEMP_6", "TPERIPH_FL_TIRETEMP_7", "TPERIPH_FL_TIRETEMP_8", "TPERIPH_FR_TIRETEMP_1", "TPERIPH_FR_TIRETEMP_2", "TPERIPH_FR_TIRETEMP_3", "TPERIPH_FR_TIRETEMP_4", "TPERIPH_FR_TIRETEMP_5", "TPERIPH_FR_TIRETEMP_6", "TPERIPH_FR_TIRETEMP_7", "TPERIPH_FR_TIRETEMP_8", "TPERIPH_BL_TIRETEMP_1", "TPERIPH_BL_TIRETEMP_2", "TPERIPH_BL_TIRETEMP_3", "TPERIPH_BL_TIRETEMP_4", "TPERIPH_BL_TIRETEMP_5", "TPERIPH_BL_TIRETEMP_6", "TPERIPH_BL_TIRETEMP_7", "TPERIPH_BL_TIRETEMP_8", "TPERIPH_BR_TIRETEMP_1", "TPERIPH_BR_TIRETEMP_2", "TPERIPH_BR_TIRETEMP_3", "TPERIPH_BR_TIRETEMP_4", "TPERIPH_BR_TIRETEMP_5", "TPERIPH_BR_TIRETEMP_6", "TPERIPH_BR_TIRETEMP_7", "TPERIPH_BR_TIRETEMP_8" };
static const uint8_t col_name_sizes[] = { 23, 19, 18, 18, 23, 21, 23, 23, 23, 23, 20, 23, 23, 23, 23, 25, 28, 31, 24, 16, 17, 27, 28, 18, 18, 21, 22, 31, 30, 31, 18, 19, 20, 27, 25, 22, 27, 21, 25, 30, 17, 18, 19, 19, 20, 20, 25, 25, 21, 23, 24, 23, 24, 22, 13, 17, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 17, 13, 16, 19, 25, 14, 14, 17, 18, 16, 18, 20, 20, 23, 23, 23, 19, 19, 19, 14, 14, 30, 23, 21, 15, 18, 21, 14, 25, 20, 23, 28, 23, 23, 23, 28, 24, 29, 23, 24, 24, 27, 27, 19, 19, 26, 25, 22, 30, 26, 25, 22, 30, 26, 25, 22, 30, 26, 25, 22, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21 };
static const char *col_name_types[] = { "i4", "i4", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "u3", "b0", "b0", "b0", "b0", "u4", "u4", "u4", "u5", "u4", "i4", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "u4", "u3", "u3", "f5", "u3", "u3", "f5", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "f5", "u3", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "i3", "i3", "i3", "i3", "i3", "i3", "f5", "f5", "f5", "f5", "f5", "f5", "i3", "i3", "i3", "i3", "i3", "i3", "f5", "f5", "f5", "f5", "f5", "f5", "i3", "i3", "i3", "i3", "i3", "i3", "f5", "f5", "f5", "f5", "f5", "f5", "i3", "i3", "i3", "i3", "i3", "i3", "f5", "f5", "f5", "f5", "f5", "f5", "i3", "i3", "i3", "i3", "i3", "i3", "f5", "f5", "f5", "f5", "f5", "f5", "i3", "i3", "i3", "i3", "i3", "i3", "i5", "i5", "f5", "i4", "f5", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "f5", "f5", "f5", "f5", "f5", "f5", "u4", "u4", "u4", "u3", "b0", "b0", "b0", "b0", "b0", "b0", "b0", "u4", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "f5", "u3", "f5", "f5", "f5", "u3", "f5", "f5", "f5", "u3", "f5", "f5", "f5", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3", "u3" };

#pragma pack(1)
struct Values {
    int16_t SME_THROTL_TorqueDemand[ROWS];
    int16_t SME_THROTL_MaxSpeed[ROWS];
    uint8_t SME_THROTL_Forward[ROWS/8];
    uint8_t SME_THROTL_Reverse[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_1[ROWS/8];
    uint8_t SME_THROTL_PowerReady[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_2[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_3[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_4[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_5[ROWS/8];
    uint8_t SME_THROTL_MBB_Alive[ROWS];
    uint8_t SME_THROTL_UNUSED_BIT_6[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_7[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_8[ROWS/8];
    uint8_t SME_THROTL_UNUSED_BIT_9[ROWS/8];
    uint16_t SME_THROTL_UNUSED_SHORT_1[ROWS];
    uint16_t SME_CURRLIM_ChargeCurrentLim[ROWS];
    uint16_t SME_CURRLIM_DischargeCurrentLim[ROWS];
    uint32_t SME_CURRLIM_UNUSED_INT_1[ROWS];
    uint16_t SME_TRQSPD_Speed[ROWS];
    int16_t SME_TRQSPD_Torque[ROWS];
    uint8_t SME_TRQSPD_SOC_Low_Traction[ROWS/8];
    uint8_t SME_TRQSPD_SOC_Low_Hydraulic[ROWS/8];
    uint8_t SME_TRQSPD_Reverse[ROWS/8];
    uint8_t SME_TRQSPD_Forward[ROWS/8];
    uint8_t SME_TRQSPD_Park_Brake[ROWS/8];
    uint8_t SME_TRQSPD_Pedal_Brake[ROWS/8];
    uint8_t SME_TRQSPD_Controller_Overtermp[ROWS/8];
    uint8_t SME_TRQSPD_Key_switch_overvolt[ROWS/8];
    uint8_t SME_TRQSPD_Key_switch_undervolt[ROWS/8];
    uint8_t SME_TRQSPD_Running[ROWS/8];
    uint8_t SME_TRQSPD_Traction[ROWS/8];
    uint8_t SME_TRQSPD_Hydraulic[ROWS/8];
    uint8_t SME_TRQSPD_Powering_Enabled[ROWS/8];
    uint8_t SME_TRQSPD_Powering_Ready[ROWS/8];
    uint8_t SME_TRQSPD_Precharging[ROWS/8];
    uint8_t SME_TRQSPD_contactor_closed[ROWS/8];
    uint16_t SME_TRQSPD_MotorFlags[ROWS];
    uint8_t SME_TEMP_MotorTemperature[ROWS];
    uint8_t SME_TEMP_ControllerTemperature[ROWS];
    float SME_TEMP_DC_Bus_V[ROWS];
    uint8_t SME_TEMP_FaultCode[ROWS];
    uint8_t SME_TEMP_FaultLevel[ROWS];
    float SME_TEMP_BusCurrent[ROWS];
    uint8_t ACC_STATUS_BMS_FAULT[ROWS/8];
    uint8_t ACC_STATUS_IMD_FAULT[ROWS/8];
    uint8_t ACC_STATUS_SHUTDOWN_STATE[ROWS/8];
    uint8_t ACC_STATUS_PRECHARGE_DONE[ROWS/8];
    uint8_t ACC_STATUS_PRECHARING[ROWS/8];
    uint8_t ACC_STATUS_CELL_TOO_LOW[ROWS/8];
    uint8_t ACC_STATUS_CELL_TOO_HIGH[ROWS/8];
    uint8_t ACC_STATUS_TEMP_TOO_LOW[ROWS/8];
    uint8_t ACC_STATUS_TEMP_TOO_HIGH[ROWS/8];
    float ACC_POWER_PACK_VOLTAGE[ROWS];
    uint8_t ACC_POWER_SOC[ROWS];
    float ACC_POWER_CURRENT[ROWS];
    float ACC_SEG0_VOLTS_CELL0[ROWS];
    float ACC_SEG0_VOLTS_CELL1[ROWS];
    float ACC_SEG0_VOLTS_CELL2[ROWS];
    float ACC_SEG0_VOLTS_CELL3[ROWS];
    float ACC_SEG0_VOLTS_CELL4[ROWS];
    float ACC_SEG0_VOLTS_CELL5[ROWS];
    int8_t ACC_SEG0_TEMPS_CELL0[ROWS];
    int8_t ACC_SEG0_TEMPS_CELL1[ROWS];
    int8_t ACC_SEG0_TEMPS_CELL2[ROWS];
    int8_t ACC_SEG0_TEMPS_CELL3[ROWS];
    int8_t ACC_SEG0_TEMPS_CELL4[ROWS];
    int8_t ACC_SEG0_TEMPS_CELL5[ROWS];
    float ACC_SEG1_VOLTS_CELL0[ROWS];
    float ACC_SEG1_VOLTS_CELL1[ROWS];
    float ACC_SEG1_VOLTS_CELL2[ROWS];
    float ACC_SEG1_VOLTS_CELL3[ROWS];
    float ACC_SEG1_VOLTS_CELL4[ROWS];
    float ACC_SEG1_VOLTS_CELL5[ROWS];
    int8_t ACC_SEG1_TEMPS_CELL0[ROWS];
    int8_t ACC_SEG1_TEMPS_CELL1[ROWS];
    int8_t ACC_SEG1_TEMPS_CELL2[ROWS];
    int8_t ACC_SEG1_TEMPS_CELL3[ROWS];
    int8_t ACC_SEG1_TEMPS_CELL4[ROWS];
    int8_t ACC_SEG1_TEMPS_CELL5[ROWS];
    float ACC_SEG2_VOLTS_CELL0[ROWS];
    float ACC_SEG2_VOLTS_CELL1[ROWS];
    float ACC_SEG2_VOLTS_CELL2[ROWS];
    float ACC_SEG2_VOLTS_CELL3[ROWS];
    float ACC_SEG2_VOLTS_CELL4[ROWS];
    float ACC_SEG2_VOLTS_CELL5[ROWS];
    int8_t ACC_SEG2_TEMPS_CELL0[ROWS];
    int8_t ACC_SEG2_TEMPS_CELL1[ROWS];
    int8_t ACC_SEG2_TEMPS_CELL2[ROWS];
    int8_t ACC_SEG2_TEMPS_CELL3[ROWS];
    int8_t ACC_SEG2_TEMPS_CELL4[ROWS];
    int8_t ACC_SEG2_TEMPS_CELL5[ROWS];
    float ACC_SEG3_VOLTS_CELL0[ROWS];
    float ACC_SEG3_VOLTS_CELL1[ROWS];
    float ACC_SEG3_VOLTS_CELL2[ROWS];
    float ACC_SEG3_VOLTS_CELL3[ROWS];
    float ACC_SEG3_VOLTS_CELL4[ROWS];
    float ACC_SEG3_VOLTS_CELL5[ROWS];
    int8_t ACC_SEG3_TEMPS_CELL0[ROWS];
    int8_t ACC_SEG3_TEMPS_CELL1[ROWS];
    int8_t ACC_SEG3_TEMPS_CELL2[ROWS];
    int8_t ACC_SEG3_TEMPS_CELL3[ROWS];
    int8_t ACC_SEG3_TEMPS_CELL4[ROWS];
    int8_t ACC_SEG3_TEMPS_CELL5[ROWS];
    float ACC_SEG4_VOLTS_CELL0[ROWS];
    float ACC_SEG4_VOLTS_CELL1[ROWS];
    float ACC_SEG4_VOLTS_CELL2[ROWS];
    float ACC_SEG4_VOLTS_CELL3[ROWS];
    float ACC_SEG4_VOLTS_CELL4[ROWS];
    float ACC_SEG4_VOLTS_CELL5[ROWS];
    int8_t ACC_SEG4_TEMPS_CELL0[ROWS];
    int8_t ACC_SEG4_TEMPS_CELL1[ROWS];
    int8_t ACC_SEG4_TEMPS_CELL2[ROWS];
    int8_t ACC_SEG4_TEMPS_CELL3[ROWS];
    int8_t ACC_SEG4_TEMPS_CELL4[ROWS];
    int8_t ACC_SEG4_TEMPS_CELL5[ROWS];
    float ACC_SEG5_VOLTS_CELL0[ROWS];
    float ACC_SEG5_VOLTS_CELL1[ROWS];
    float ACC_SEG5_VOLTS_CELL2[ROWS];
    float ACC_SEG5_VOLTS_CELL3[ROWS];
    float ACC_SEG5_VOLTS_CELL4[ROWS];
    float ACC_SEG5_VOLTS_CELL5[ROWS];
    int8_t ACC_SEG5_TEMPS_CELL0[ROWS];
    int8_t ACC_SEG5_TEMPS_CELL1[ROWS];
    int8_t ACC_SEG5_TEMPS_CELL2[ROWS];
    int8_t ACC_SEG5_TEMPS_CELL3[ROWS];
    int8_t ACC_SEG5_TEMPS_CELL4[ROWS];
    int8_t ACC_SEG5_TEMPS_CELL5[ROWS];
    int32_t VDM_GPS_Latitude[ROWS];
    int32_t VDM_GPS_Longitude[ROWS];
    float VDM_GPS_SPEED[ROWS];
    int16_t VDM_GPS_ALTITUDE[ROWS];
    float VDM_GPS_TRUE_COURSE[ROWS];
    uint8_t VDM_GPS_SATELLITES_IN_USE[ROWS];
    uint8_t VDM_GPS_VALID1[ROWS];
    uint8_t VDM_GPS_VALID2[ROWS];
    uint8_t VDM_UTC_DATE_YEAR[ROWS];
    uint8_t VDM_UTC_DATE_MONTH[ROWS];
    uint8_t VDM_UTC_DATE_DAY[ROWS];
    uint8_t VDM_UTC_TIME_HOURS[ROWS];
    uint8_t VDM_UTC_TIME_MINUTES[ROWS];
    uint8_t VDM_UTC_TIME_SECONDS[ROWS];
    float VDM_X_AXIS_ACCELERATION[ROWS];
    float VDM_Y_AXIS_ACCELERATION[ROWS];
    float VDM_Z_AXIS_ACCELERATION[ROWS];
    float VDM_X_AXIS_YAW_RATE[ROWS];
    float VDM_Y_AXIS_YAW_RATE[ROWS];
    float VDM_Z_AXIS_YAW_RATE[ROWS];
    uint16_t ETC_STATUS_HE1[ROWS];
    uint16_t ETC_STATUS_HE2[ROWS];
    uint16_t ETC_STATUS_BRAKE_SENSE_VOLTAGE[ROWS];
    uint8_t ETC_STATUS_PEDAL_TRAVEL[ROWS];
    uint8_t ETC_STATUS_RTD_BUTTON[ROWS/8];
    uint8_t ETC_STATUS_RTDS[ROWS/8];
    uint8_t ETC_STATUS_REVERSE[ROWS/8];
    uint8_t ETC_STATUS_BRAKELIGHT[ROWS/8];
    uint8_t ETC_STATUS_RTD[ROWS/8];
    uint8_t ETC_STATUS_IMPLAUSIBILITY[ROWS/8];
    uint8_t ETC_STATUS_TS_ACTIVE[ROWS/8];
    uint16_t PDB_POWER_A_GLV_VOLTAGE[ROWS];
    float PDB_POWER_A_CURRENT_SHUTDOWN[ROWS];
    float PDB_POWER_A_CURRENT_ACC[ROWS];
    float PDB_POWER_A_CURRENT_ETC[ROWS];
    float PDB_POWER_A_CURRENT_BPS[ROWS];
    float PDB_POWER_A_CURRENT_TRACTIVE[ROWS];
    float PDB_POWER_A_CURRENT_BSPD[ROWS];
    float PDB_POWER_B_CURRENT_TELEMETRY[ROWS];
    float PDB_POWER_B_CURRENT_PDB[ROWS];
    float PDB_POWER_B_CURRENT_DASH[ROWS];
    float PDB_POWER_B_CURRENT_RTML[ROWS];
    float PDB_POWER_B_CURRENT_EXTRA_1[ROWS];
    float PDB_POWER_B_CURRENT_EXTRA_2[ROWS];
    float TMAIN_DATA_BRAKES_F[ROWS];
    float TMAIN_DATA_BRAKES_R[ROWS];
    float TPERIPH_FL_DATA_WHEELSPEED[ROWS];
    float TPERIPH_FL_DATA_SUSTRAVEL[ROWS];
    float TPERIPH_FL_DATA_STRAIN[ROWS];
    uint8_t TPERIPH_FL_DATA_SIDE_TIRE_TEMP[ROWS];
    float TPERIPH_FR_DATA_WHEELSPEED[ROWS];
    float TPERIPH_FR_DATA_SUSTRAVEL[ROWS];
    float TPERIPH_FR_DATA_STRAIN[ROWS];
    uint8_t TPERIPH_FR_DATA_SIDE_TIRE_TEMP[ROWS];
    float TPERIPH_BL_DATA_WHEELSPEED[ROWS];
    float TPERIPH_BL_DATA_SUSTRAVEL[ROWS];
    float TPERIPH_BL_DATA_STRAIN[ROWS];
    uint8_t TPERIPH_BL_DATA_SIDE_TIRE_TEMP[ROWS];
    float TPERIPH_BR_DATA_WHEELSPEED[ROWS];
    float TPERIPH_BR_DATA_SUSTRAVEL[ROWS];
    float TPERIPH_BR_DATA_STRAIN[ROWS];
    uint8_t TPERIPH_BR_DATA_SIDE_TIRE_TEMP[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_1[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_2[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_3[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_4[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_5[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_6[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_7[ROWS];
    uint8_t TPERIPH_FL_TIRETEMP_8[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_1[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_2[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_3[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_4[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_5[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_6[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_7[ROWS];
    uint8_t TPERIPH_FR_TIRETEMP_8[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_1[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_2[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_3[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_4[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_5[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_6[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_7[ROWS];
    uint8_t TPERIPH_BL_TIRETEMP_8[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_1[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_2[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_3[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_4[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_5[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_6[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_7[ROWS];
    uint8_t TPERIPH_BR_TIRETEMP_8[ROWS];
};
#pragma pack()

inline void write_fsdaq_schema(FILE *file) {
    uint32_t m = COLS;
    uint32_t n = ROWS;
    fwrite(&m, sizeof(m), 1, file);
    fwrite(&n, sizeof(n), 1, file);

    for (int i=0; i<COLS; i++) {
        const uint8_t col_len = col_name_sizes[i];
        const char *col = col_names[i];

        fwrite(&col_len, sizeof(col_len), 1, file);
        fwrite(col, col_len, 1, file);
    }

    for (int i=0; i<COLS; i++) {
        const char *col_type = col_name_types[i];
        fwrite(col_type, 2, 1, file);
    }
}

inline void write_fsdaq_batch(Values *vals, FILE *file) {
    fwrite(vals, sizeof(*vals), 1, file);
}

