{
    "Target": {
        "core": null,
        "trustzone": false,
        "default_toolchain": "ARM",
        "supported_toolchains": null,
        "extra_labels": [],
        "supported_form_factors": [],
        "components": [],
        "is_disk_virtual": false,
        "macros": [],
        "device_has": [],
        "features": [],
        "detect_code": [],
        "public": false,
        "c_lib": "std",
        "bootloader_supported": false,
        "static_memory_defines": true,
        "printf_lib": "minimal-printf",
        "supported_c_libs": {
            "arm": [
                "std"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "supported_application_profiles": [
            "full"
        ],
        "config": {
            "console-uart": {
                "help": "Target has UART console on pins CONSOLE_TX, CONSOLE_RX. Value is only significant if target has SERIAL device. Mutually exclusive with target.console-usb.",
                "value": true
            },
            "console-usb": {
                "help": "Target has USB console on the default USB pins.  Mutually exclusive with target.console-uart.",
                "value": false
            },
            "console-uart-flow-control": {
                "help": "Console hardware flow control. Options: null, RTS, CTS, RTSCTS.",
                "value": null
            },
            "network-default-interface-type": {
                "help": "Default network interface type. Typical options: null, ETHERNET, WIFI, CELLULAR, MESH",
                "value": null
            },
            "deep-sleep-latency": {
                "help": "Time in ms required to go to and wake up from deep sleep (max 10)",
                "value": 0
            },
            "app_offset": {
                "help": "Application start offset in ROM",
                "value": null
            },
            "header_offset": {
                "help": "Application header offset in ROM",
                "value": null
            },
            "boot-stack-size": {
                "help": "Define the boot stack size in bytes. This value must be a multiple of 8",
                "value": "0x1000"
            },
            "mpu-rom-end": {
                "help": "Last address of ROM protected by the MPU",
                "value": "0x0fffffff"
            },
            "default-form-factor": {
                "help": "Default form factor of this board taken from supported_form_factors. This must be a lowercase string such as 'arduino'",
                "value": null
            },
            "tickless-from-us-ticker": {
                "help": "Run tickless from the microsecond ticker rather than the low power ticker. Running tickless off of the microsecond ticker improves interrupt latency on targets which use lpticker_delay_ticks",
                "value": false
            },
            "init-us-ticker-at-boot": {
                "help": "Initialize the microsecond ticker at boot rather than on first use, and leave it initialized. This speeds up wait_us in particular.",
                "value": false
            },
            "custom-tickers": {
                "help": "Support custom tickers in addition to USTICKER and LPTICKER. Turning this off can permit some space and speed optimisations, if characteristics of USTICKER and LPTICKER are known at compile time.",
                "value": true
            },
            "xip-enable": {
                "help": "Enable Execute In Place (XIP) on this target. Value is only significant if the board has executable external storage such as QSPIF. If this is enabled, customize the linker file to choose what text segments are placed on external storage",
                "value": false
            },
            "default-adc-vref": {
                "help": "Default reference voltage for ADC (float)",
                "value": "NAN"
            },
            "internal-flash-uniform-sectors": {
                "help": "Target's internal flash has uniform sector sizes",
                "value": true
            },
            "semihosting-enabled": {
                "help": "Enable ARM Semihosting protocol.  This uses a magic breakpoint instruction to enable the MCU to print data to and access files on a host machine.  However, it can interfere with debuggers that are not semihost aware.",
                "value": false
            },
            "application-profile": {
                "help": "Select application profile. Options: 'full', 'bare-metal'. 'full' mode enables the real-time \
OS and enables all features of Mbed to be used. \
'bare-metal' mode disables the real-time OS, preventing you from using threads and libraries that depend on them. 'bare-metal' \
mode is recommended for target MCUs with small amounts of flash and RAM.",
                "value": "full"
            }
        }
    },
    "PSA_Target": {
        "inherits": [
            "Target"
        ],
        "features": [
            "PSA"
        ],
        "public": false,
        "config": {}
    },
    "PSA_V7_M": {
        "inherits": [
            "PSA_Target"
        ],
        "extra_labels": [
            "MBED_PSA_SRV"
        ],
        "device_has": [
            "TRNG"
        ],
        "public": false
    },
    "PSA_DUAL_CORE": {
        "inherits": [
            "PSA_Target"
        ],
        "extra_labels": [
            "TFM",
            "TFM_DUALCPU"
        ],
        "device_has": [
            "TRNG"
        ],
        "macros_add": [
            "TFM_MULTI_CORE_MULTI_CLIENT_CALL=1"
        ],
        "tfm_target_name": "",
        "tfm_bootloader_supported": "",
        "tfm_default_toolchain": "ARMCLANG",
        "tfm_supported_toolchains": null,
        "tfm_delivery_dir": "",
        "public": false
    },
    "PSA_V8_M": {
        "inherits": [
            "PSA_Target"
        ],
        "extra_labels": [
            "TFM",
            "TFM_LATEST",
            "TFM_V8M"
        ],
        "device_has": [
            "TRNG"
        ],
        "tfm_target_name": "",
        "tfm_bootloader_supported": "",
        "tfm_default_toolchain": "ARMCLANG",
        "tfm_supported_toolchains": null,
        "tfm_delivery_dir": "",
        "public": false
    },
    "CM4_UARM": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4",
        "default_toolchain": "uARM",
        "public": false,
        "supported_toolchains": [
            "uARM"
        ],
        "default_lib": "small",
        "detect_code": [
            "9992"
        ]
    },
    "CM4_ARM": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4",
        "public": false,
        "supported_toolchains": [
            "ARM"
        ],
        "detect_code": [
            "9993"
        ]
    },
    "CM4F_UARM": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "default_toolchain": "uARM",
        "public": false,
        "supported_toolchains": [
            "uARM"
        ],
        "default_lib": "small",
        "detect_code": [
            "9990"
        ]
    },
    "CM4F_ARM": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "public": false,
        "supported_toolchains": [
            "ARM"
        ],
        "detect_code": [
            "9991"
        ]
    },

// Analog Devices targets ----------------------------------------------------------------------------------------------
    "EV_COG_AD4050LZ": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "macros": [
            "__ADUCM4050__",
            "EV_COG_AD4050LZ"
        ],
        "extra_labels": [
            "Analog_Devices",
            "ADUCM4X50",
            "ADUCM4050",
            "EV_COG_AD4050LZ",
            "FLASH_CMSIS_ALGO"
        ],
        "device_has": [
            "FLASH",
            "USTICKER",
            "RTC",
            "SERIAL",
            "TRNG",
            "SLEEP",
            "INTERRUPTIN",
            "SPI",
            "I2C",
            "ANALOGIN",
            "MPU"
        ],
        "device_name": "ADuCM4050",
        "detect_code": [
            "0603"
        ],
        "release_versions": [
            "5"
        ],
        "bootloader_supported": true,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "image_url": "https://www.analog.com/en/_/media/analog/en/evaluation-board-images/images/ev-cog-ad4050lzangle-web.gif?rev=40854bbeb052442f8c1e3af0ed0cc9aa&sc_lang=en&h=500&thn=1&hash=1CC040DB3294C38F0A712BD1A3D1951D"
    },
    "EV_COG_AD3029LZ": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M3",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "macros": [
            "__ADUCM3029__",
            "EV_COG_AD3029LZ"
        ],
        "extra_labels": [
            "Analog_Devices",
            "ADUCM302X",
            "ADUCM3029",
            "EV_COG_AD3029LZ",
            "FLASH_CMSIS_ALGO"
        ],
        "device_has": [
            "FLASH",
            "USTICKER",
            "RTC",
            "SERIAL",
            "TRNG",
            "SLEEP",
            "INTERRUPTIN",
            "SPI",
            "I2C",
            "ANALOGIN",
            "MPU"
        ],
        "device_name": "ADuCM3029",
        "detect_code": [
            "0602"
        ],
        "release_versions": [
            "5"
        ],
        "bootloader_supported": true,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "image_url": "https://www.analog.com/en/_/media/analog/en/evaluation-board-images/images/ev-cog-ad3029lzangle-web.gif?rev=dcc918a6e9b64a60a3ce0fc397a9a88d&sc_lang=en&h=500&thn=1&hash=ED3986B5366C771376C5F062488FE056"
    },

// NXP LPC1xxx Targets  ------------------------------------------------------------------------------------------------
    "LPCTarget": {
        "inherits": [
            "Target"
        ],
        "post_binary_hook": {
            "function": "LPCTargetCode.lpc_patch"
        },
        "public": false
    },
    "LPC1114": {
        "inherits": [
            "LPCTarget"
        ],
        "core": "Cortex-M0",
        "default_toolchain": "ARM",
        "extra_labels": [
            "NXP",
            "LPC11XX_11CXX",
            "LPC11XX"
        ],
        "macros": [
            "CMSIS_VECTAB_VIRTUAL",
            "CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\""
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "ANALOGIN",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "USTICKER"
        ],
        "overrides": {
            "tickless-from-us-ticker": true,
            "boot-stack-size": "0x300"
        },
        "supported_c_libs": {
            "arm": [
                "std", "small"
            ],
            "gcc_arm": [
                "std", "small"
            ],
            "iar": [
                "std"
            ]
        },
        "c_lib": "small",
        "supported_application_profiles": [
            "bare-metal"
        ],
        "device_name": "LPC1114FN28/102",
        "detect_code": [
            "1114"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/LPC1114_1_hXXAnmW.jpg.250x250_q85.jpg"
    },
    "MCU_LPC1768": {
        "inherits": [
            "LPCTarget"
        ],
        "public": false,
        "core": "Cortex-M3",
        "extra_labels": [
            "NXP",
            "LPC176X",
            "NXP_EMAC"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "macros": [
            "MBED_SPLIT_HEAP"
        ],
        "device_has": [
            "RTC",
            "USTICKER",
            "ANALOGIN",
            "ANALOGOUT",
            "CAN",
            "DEBUG_AWARENESS",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "FLASH",
            "MPU",
            "USBDEVICE",
            "WATCHDOG",
            "RESET_REASON"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "LPC1768",
        "bootloader_supported": true,
        "config": {
            "us-ticker-timer": {
                "help": "Chooses which timer (0-3) to use for us_ticker.c",
                "value": 3
            }
        },
        "overrides": {
            "network-default-interface-type": "ETHERNET",
        },
        "supported_c_libs": {
            "arm": [
                "std", "small"
            ],
            "gcc_arm": [
                "std", "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "LPC1768": {
        "inherits": [
            "MCU_LPC1768"
        ],
        "core": "Cortex-M3",
        "extra_labels_add": [
            "MBED_LPC1768",
        ],
        "detect_code": [
            "1010"
        ],
        "components_add": [
            "LOCALFILESYSTEM"
        ],
        "overrides": {
            "default-adc-vref": 3.3 // Per "mbed-005.1" schematic, Vref is 3.3V
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/LPC1768.jpg.250x250_q85.jpg"
    },
    "ARCH_PRO": {
        "supported_form_factors": [
            "ARDUINO"
        ],
        "extra_labels": [
            "NXP",
            "LPC176X",
            "NXP_EMAC"
        ],
        "macros": [
            "TARGET_LPC1768"
        ],
        "inherits": [
            "MCU_LPC1768"
        ],
        "detect_code": [
            "9004"
        ],
        "overrides": {
            "default-adc-vref": 3.3 // Per schematic, Vref is 3.3V
        },
        "image_url": "https://files.seeedstudio.com/wiki/Arch_Pro/img/Arch_pro.jpg"
    },

    // Freescale (now NXP) Kinetis Targets -----------------------------------------------------------------------------
    "KL25Z": {
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "core": "Cortex-M0+",
        "extra_labels": [
            "Freescale",
            "KLXX"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0200"
        ],
        "device_has": [
            "USTICKER",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MKL25Z128xxx4",
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://os.mbed.com/media/uploads/chris/frd_small.jpg"
    },
    "KL46Z": {
        "supported_form_factors": [
            "ARDUINO"
        ],
        "core": "Cortex-M0+",
        "extra_labels": [
            "Freescale",
            "KLXX",
            "FLASH_CMSIS_ALGO"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0220"
        ],
        "device_has": [
            "USTICKER",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "FLASH"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MKL46Z256VLL4",
        "bootloader_supported": true,
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/BOARD-FRDM-KL46Z-PRODUCT-SHOT.png"
    },
    "MCU_K22F512": {
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "Freescale",
            "MCUXpresso_MCUS",
            "KSDK2_MCUS",
            "MCU_K22F",
            "MCU_K22F512",
            "FRDM",
            "KPSDK_MCUS",
            "KPSDK_CODE"
        ],
        "is_disk_virtual": true,
        "public": false,
        "macros": [
            "CPU_MK22FN512VLH12",
            "FSL_RTOS_MBED",
            "MBED_TICKLESS"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0231"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "TRNG",
            "USBDEVICE",
            "FLASH"
        ],
        "device_name": "MK22FN512VLH12",
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ]
    },
    "K22F": {
        "supported_form_factors": [
            "ARDUINO"
        ],
        "inherits": [
            "MCU_K22F512"
        ],
        "release_versions": [
            "5"
        ],
        "extra_labels_add": [
            "FRDM"
        ],
        "detect_code": [
            "0231"
        ],
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/FRDM-K22F-ANGLE.jpg"
    },
    "KL43Z": {
        "supported_form_factors": [
            "ARDUINO"
        ],
        "core": "Cortex-M0+",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "Freescale",
            "MCUXpresso_MCUS",
            "KSDK2_MCUS",
            "FRDM"
        ],
        "macros": [
            "CPU_MKL43Z256VLH4",
            "FSL_RTOS_MBED"
        ],
        "is_disk_virtual": true,
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0262"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "USBDEVICE",
            "FLASH"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MKL43Z256VLH4",
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/FRDM-KL43Z-BLOCK-DIAGRAM.jpg"
    },
    "KW41Z": {
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "core": "Cortex-M0+",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "Freescale",
            "MCUXpresso_MCUS",
            "KSDK2_MCUS",
            "FRDM",
            "FRAMEWORK_5_3_3"
        ],
        "is_disk_virtual": true,
        "macros": [
            "CPU_MKW41Z512VHT4",
            "FSL_RTOS_MBED",
            "MBED_TICKLESS"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0201"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "TRNG",
            "FLASH",
            "802_15_4_PHY"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MKW41Z512xxx4",
        "bootloader_supported": true,
        "overrides": {
            "network-default-interface-type": "MESH"
        },
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/FRDM-KW41Z_OG.jpg"
    },
    "MCU_K64F": {
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels_add": [
            "Freescale",
            "MCUXpresso_MCUS",
            "KSDK2_MCUS",
            "KPSDK_MCUS",
            "KPSDK_CODE",
            "Freescale_EMAC"
        ],
        "macros_add": [
            "CPU_MK64FN1M0VMD12",
            "FSL_RTOS_MBED",
            "MBED_SPLIT_HEAP",
            "MBED_TICKLESS"
        ],
        "inherits": [
            "PSA_V7_M"
        ],
        "device_has_add": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "CRC",
            "ANALOGIN",
            "ANALOGOUT",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "SERIAL",
            "SERIAL_FC",
            "SERIAL_ASYNCH",
            "SLEEP",
            "SPI",
            "SPI_ASYNCH",
            "SPISLAVE",
            "TRNG",
            "FLASH",
            "USBDEVICE",
            "WATCHDOG"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MK64FN1M0xxx12",
        "bootloader_supported": true,
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true,
        "public": false
    },
    "K64F": { // AKA FRDM-K64F
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "components_add": [
            "SD",
        ],
        "extra_labels_add": [
            "FRDM"
        ],
        "is_disk_virtual": true,
        "inherits": [
            "MCU_K64F"
        ],
        "detect_code": [
            "0240"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/407/MFG_FRDM-K64F.JPG"
    },
    "SDT64B": {
        "inherits": [
            "MCU_K64F"
        ],
        "extra_labels_add": [
            "K64F"
        ],
        "supported_form_factors": [],
        "detect_code": [
            "3105"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/SDT64B_size.png.250x250_q85.png"
    },
    "HEXIWEAR": {
        "inherits": [
            "MCU_K64F"
        ],
        "detect_code": [
            "0214"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/Hexiwear_Platform_Image_19Ja2aX_pNSWsjb.png.250x250_q85.png",
    },
    "K66F": { // AKA FRDM-K66F
        "supported_form_factors": [
            "ARDUINO"
        ],
        "components_add": [
            "SD",
        ],
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels_add": [
            "Freescale",
            "MCUXpresso_MCUS",
            "KSDK2_MCUS",
            "FRDM",
            "Freescale_EMAC"
        ],
        "is_disk_virtual": true,
        "macros_add": [
            "CPU_MK66FN2M0VMD18",
            "FSL_RTOS_MBED",
            "MBED_SPLIT_HEAP",
            "MBED_TICKLESS"
        ],
        "inherits": [
            "PSA_V7_M"
        ],
        "detect_code": [
            "0311"
        ],
        "device_has_add": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SERIAL_ASYNCH",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "TRNG",
            "FLASH"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MK66FN2M0xxx18",
        "bootloader_supported": true,
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/FRDM-K66F-BD.jpg"
    },
    "K82F": { // AKA FRDM-K82F
        "supported_form_factors": [
            "ARDUINO"
        ],
        "components_add": [
            "SPIF",
        ],
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "Freescale",
            "MCUXpresso_MCUS",
            "KSDK2_MCUS",
            "FRDM"
        ],
        "is_disk_virtual": true,
        "macros": [
            "CPU_MK82FN256VDC15",
            "FSL_RTOS_MBED",
            "MBED_TICKLESS"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0217"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "TRNG",
            "FLASH",
            "USBDEVICE",
            "QSPI"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "MK82FN256xxx15",
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true,
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/117498-CS_FRDM-K82-Board-Top_Mbed.jpg"
    },

    // STM32 Top-Level Target ------------------------------------------------------------------------------------------
    "MCU_STM32": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "extra_labels": [
            "STM"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "supported_application_profiles": [
            "full",
            "bare-metal"
        ],
        "macros": [
            "USE_HAL_DRIVER",
            "USE_FULL_LL_DRIVER"
        ],
        "bootloader_supported": true,
        "config": {
            "lse_available": {
                "help": "Define if a Low Speed External xtal (LSE) is available on the board (0 = No, 1 = Yes). If Yes, the LSE will be used to clock the RTC, LPUART, ... otherwise the Low Speed Internal clock (LSI) will be used",
                "value": "1"
            },
            "lse_bypass": {
                "help": "Change to 1 to use a logic level oscillator (not a crystal) on 32k LSE",
                "value": "0"
            },
            "rtc_clock_source": {
                "help": "Define the RTC clock source. USE_RTC_CLK_LSE_OR_LSI, USE_RTC_CLK_LSI, USE_RTC_CLK_HSE. LPTICKER is not available for HSE and should be removed from the target configuration.",
                "value": "USE_RTC_CLK_LSE_OR_LSI"
            },
            "lpuart_clock_source": {
                "help": "Define the LPUART clock source. LSE clock source will only be used when baudrate is slow (<= LSE freq / 3).  Mask values: USE_LPUART_CLK_LSE, USE_LPUART_CLK_PCLK1, USE_LPUART_CLK_PCLK3, USE_LPUART_CLK_HSI, USE_LPUART_CLK_SYSCLK.",
                "value": "USE_LPUART_CLK_LSE|USE_LPUART_CLK_PCLK1|USE_LPUART_CLK_PCLK3|USE_LPUART_CLK_SYSCLK"
            },
            "stdio_uart_tx": {
                "help": "default TX STDIO pins is defined in PinNames.h file, but it can be overridden"
            },
            "stdio_uart_rx": {
                "help": "default RX STDIO pins is defined in PinNames.h file, but it can be overridden"
            },
            "lpticker_delay_ticks": {
                "help": "https://os.mbed.com/docs/latest/porting/low-power-ticker.html",
                "value": 1,
                "macro_name": "LPTICKER_DELAY_TICKS"
            },
            "lpticker_lptim_clock": {
                "help": "Default value for LPTIM clock (lpticker_lptim == 1). Value is the dividing factor. Choose 1, 2, 4, 8, 16, 32, 64 or 128",
                "value": 1,
                "constraint": "Disclaimers : values from 8 to 128 have impacts on mbed-os timer precision and therefore on scheduling. It's not supported by mbed-os. Use it if you know what you're doing such as long low power sleep."
            },
            "gpio_reset_at_init": {
                "help": "if value set, all GPIO are reset during init",
                "value": false
            }
        },
        "overrides": {
            "deep-sleep-latency": 4,
            "init-us-ticker-at-boot": true
        },
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "WATCHDOG",
            "RESET_REASON"
        ]
    },

    // STM32F0 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32F0": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "c_lib": "small",
        "core": "Cortex-M0",
        "extra_labels_add": [
            "STM32F0"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If set to true, I2C timing algorithm is enabled. Enabling may lead to performance issues. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "macros_add": [
            "CMSIS_VECTAB_VIRTUAL",
            "CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\""
        ],
        "device_has_add": [
            "CRC",
            "SERIAL_ASYNCH",
            "FLASH"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32F030x8": {
        "inherits": [
            "MCU_STM32F0"
        ],
        "public": false,
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32F030x8"
        ],
        "macros_add": [
            "STM32F030x8"
        ],
        "device_has_remove": [
            "LPTICKER"
        ]
    },
    "MCU_STM32F070xB": {
        "inherits": [
            "MCU_STM32F0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F070xB"
        ],
        "macros_add": [
            "STM32F070xB"
        ]
    },
    "NUCLEO_F070RB": {
        "inherits": [
            "MCU_STM32F070xB"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0755"
        ],
        "device_name": "STM32F070RBTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF261500.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F072xB": {
        "inherits": [
            "MCU_STM32F0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F072xB"
        ],
        "macros_add": [
            "STM32F072xB"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN"
        ]
    },
    "NUCLEO_F072RB": {
        "inherits": [
            "MCU_STM32F072xB"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0730"
        ],
        "device_name": "STM32F072RBTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF261500.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F091xC": {
        "inherits": [
            "MCU_STM32F0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F091xC"
        ],
        "macros_add": [
            "STM32F091xC"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN"
        ]
    },
    "NUCLEO_F091RC": {
        "inherits": [
            "MCU_STM32F091xC"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0750"
        ],
        "device_name": "STM32F091RCTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF261500.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },

    // STM32F1 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32F1": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "c_lib": "small",
        "core": "Cortex-M3",
        "extra_labels_add": [
            "STM32F1"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSE_XTAL|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            }
        },
        "device_has_add": [
            "CAN",
            "SERIAL_ASYNCH",
            "FLASH"
        ],
        "device_has_remove": [
            "LPTICKER"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32F103x8": {
        "inherits": [
            "MCU_STM32F1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F103x8"
        ],
        "macros_add": [
            "STM32F103xB"
        ]
    },
    "MCU_STM32F103xB": {
        "inherits": [
            "MCU_STM32F1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F103xB"
        ],
        "macros_add": [
            "STM32F103xB"
        ]
    },
    "NUCLEO_F103RB": {
        "inherits": [
            "MCU_STM32F103xB"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0700"
        ],
        "device_name": "STM32F103RB",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF259875.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F103xC": {
        "inherits": [
            "MCU_STM32F1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F103xC"
        ],
        "macros_add": [
            "STM32F103xE"
        ]
    },
    "MCU_STM32F103xD": {
        "inherits": [
            "MCU_STM32F1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F103xD"
        ],
        "macros_add": [
            "STM32F103xE"
        ]
    },
    "MCU_STM32F103xE": {
        "inherits": [
            "MCU_STM32F1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F103xE"
        ],
        "macros_add": [
            "STM32F103xE"
        ],
        "device_has_add": [
            "CAN",
            "SERIAL_ASYNCH",
            "FLASH",
            "CRC",
            "USBDEVICE",
            "ANALOGOUT",
            "PWMOUT"
        ]
    },
    "MCU_STM32F103xG": {
        "inherits": [
            "MCU_STM32F1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F103xG"
        ],
        "macros_add": [
            "STM32F103xG"
        ],
        "device_has_add": [
            "MPU"
        ]
    },
    // STM32F2 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32F2": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M3",
        "extra_labels_add": [
            "STM32F2"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            }
        },
        "overrides": {
            "internal-flash-uniform-sectors": false
        },
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "EMAC",
            "SERIAL_ASYNCH",
            "FLASH",
            "TRNG",
            "MPU"
        ],
        "device_has_remove": [
            "LPTICKER"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32F207xZ": {
        "inherits": [
            "MCU_STM32F2"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F207xG"
        ],
        "macros_add": [
            "STM32F207xx"
        ]
    },
    "NUCLEO_F207ZG": {
        "inherits": [
            "MCU_STM32F207xZ"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            }
        },
        "detect_code": [
            "0835"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F207ZGTx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },

    // STM32F3 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32F3": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "STM32F3"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "CRC"
        ],
        "device_has_remove": [
            "LPTICKER"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32F302x8": {
        "inherits": [
            "MCU_STM32F3"
        ],
        "public": false,
        "c_lib": "small",
        "extra_labels_add": [
            "STM32F302x8"
        ],
        "macros_add": [
            "STM32F302x8"
        ]
    },
    "MCU_STM32F303x8": {
        "inherits": [
            "MCU_STM32F3"
        ],
        "public": false,
        "c_lib": "small",
        "extra_labels_add": [
            "STM32F303x8"
        ],
        "macros_add": [
            "STM32F303x8"
        ]
    },
    "NUCLEO_F303K8": {
        "inherits": [
            "MCU_STM32F303x8"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSI",
            "lse_available": 0
        },
        "detect_code": [
            "0775"
        ],
        "device_name": "STM32F303K8Tx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262544.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F303xC": {
        "inherits": [
            "MCU_STM32F3"
        ],
        "public": false,
        "c_lib": "small",
        "extra_labels_add": [
            "STM32F303xC"
        ],
        "macros_add": [
            "STM32F303xC"
        ],
        "device_has_add": [
            "MPU"
        ]
    },
    "MCU_STM32F303xE": {
        "inherits": [
            "MCU_STM32F3"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F303xE"
        ],
        "macros_add": [
            "STM32F303xE"
        ],
        "device_has_add": [
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ]
    },
    "NUCLEO_F303RE": {
        "inherits": [
            "MCU_STM32F303xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0745"
        ],
        "device_name": "STM32F303RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_F303ZE": {
        "inherits": [
            "MCU_STM32F303xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0747"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F303ZETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F334x8": {
        "inherits": [
            "MCU_STM32F3"
        ],
        "public": false,
        "c_lib": "small",
        "extra_labels_add": [
            "STM32F334x8"
        ],
        "macros_add": [
            "STM32F334x8"
        ]
    },

    // STM32F4 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32F4": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "STM32F4"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            }
        },
        "overrides": {
            "internal-flash-uniform-sectors": false
        },
        "device_has_add": [
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32F401xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F401xE"
        ],
        "macros_add": [
            "STM32F401xE"
        ]
    },
    "NUCLEO_F401RE": {
        "inherits": [
            "MCU_STM32F401xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0720"
        ],
        "device_name": "STM32F401RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260000.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F407xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F407xE"
        ],
        "macros_add": [
            "STM32F407xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "ARCH_MAX": {
        "inherits": [
            "MCU_STM32F407xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "program_cycle_s": 2,
        "components_add": [
            "SD"
        ],
        "device_has_add": [
            "EMAC"
        ],
        "device_has_remove": [
            "CAN",
            "LPTICKER",
            "SERIAL_FC"
        ],
        "device_name": "STM32F407VETx",
        "overrides": {
            "clock_source": "USE_PLL_HSE_XTAL",
            "lse_available": 0,
            "network-default-interface-type": "ETHERNET"
        },
        "detect_code": [
            "9011"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/1881/MFG_102110014.jpg"
    },
    "MCU_STM32F411xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "macros_add": [
            "STM32F411xE"
        ],
        "extra_labels_add": [
            "STM32F411xE"
        ]
    },
    "NUCLEO_F411RE": {
        "inherits": [
            "MCU_STM32F411xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0740"
        ],
        "device_name": "STM32F411RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MTS_DRAGONFLY_F411RE": { // AKA MTQ-MNA1-B01/MTQ-MNA1-B02
        "inherits": [
            "MCU_STM32F411xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "overrides": {
            "lse_available": 0
        },
        "macros_add": [
            "HSE_VALUE=26000000"
        ],
        "device_has_remove": [
            "SERIAL_FC",
            "LPTICKER"
        ],
        "device_name": "STM32F411RETx",
        "detect_code": [
            "0454"
        ],
        "components_add": [
            "TELIT_HE910"
        ],
        "image_url": "https://static-data2.manualslib.com/product-images/de1/2702201/multitech-multiconnect-dragonfly-mtq-mna1-b02.jpg"
    },
    "MTS_MDOT_F411RE": {
        "inherits": [
            "MCU_STM32F411xE"
        ],
        "macros_add": [
            "HSE_VALUE=26000000"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSE_XTAL"
        },
        "device_has_remove": [
            "FLASH",
            "SERIAL_FC"
        ],
        "device_name": "STM32F411RETx",
        "detect_code": [
            "0320"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/1290/MTDOT-868-X1P-SMA-1.jpg"
    },
    "BLACKPILL_F411CE": {
        "inherits": [
            "MCU_STM32F411xE"
        ],
        "macros_add": [
            "HSE_VALUE=25000000U"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSI | USE_PLL_HSE_XTAL"
        },
        "device_has_add": [
            "USBDEVICE"
        ],
        "bootloader_supported": true,
        "detect_code": [
            "0740"
        ],
        "device_name": "STM32F411CEYx",
        "image_url": "https://user-images.githubusercontent.com/1301112/69389644-eb5fb080-0ccc-11ea-8002-67d3db851250.png"
    },
    "MCU_STM32F412xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F412xE"
        ],
        "macros_add": [
            "STM32F412Zx"
        ],
        "device_has_add": [
            "CAN",
            "TRNG"
        ]
    },
    "MCU_STM32F412xG": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F412xG"
        ],
        "macros_add": [
            "STM32F412Zx"
        ],
        "device_has_add": [
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F412ZG": {
        "inherits": [
            "MCU_STM32F412xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0826"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F412ZGTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    // Also known as MXChip EMW3166
    "WIO_EMW3166": {
        "inherits": [
            "MCU_STM32F412xG"
        ],
        "extra_labels_add": [
            "WICED",
            "CYW43362"
        ],
        "device_name": "STM32F412ZGTx",
        "overrides": {
            "clock_source": "USE_PLL_HSI",
            "network-default-interface-type": "WIFI"
        },
        "detect_code": [
            "0451"
        ],
        "image_url": "https://cdn.mxchip.com/mxchip_official_website/img/EMW3166-P-%E7%99%BD-%E6%AD%A3.jpg"
    },
    "MCU_STM32F413xH": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F413xH"
        ],
        "config": {
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 4
        },
        "macros_add": [
            "STM32F413xx",
            "MBED_TICKLESS"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "DISCO_F413ZH": {
        "inherits": [
            "MCU_STM32F413xH"
        ],
        "components_add": [
            "QSPIF"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "N25Q128A"
        ],
        "detect_code": [
            "0743"
        ],
        "device_has_add": [
            "QSPI",
            "USBDEVICE"
        ],
        "device_name": "STM32F413ZHTx",
        "image_url": "https://www.mouser.com/images/marketingid/2017/img/128173244_STMicroelectronics_32F413HDISCOVERYDiscoveryKit.png?v=070223.0256"
    },
    "NUCLEO_F413ZH": {
        "inherits": [
            "MCU_STM32F413xH"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0743"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F413ZHTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F429xI": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F429xI"
        ],
        "macros_add": [
            "STM32F429xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F429ZI": {
        "inherits": [
            "MCU_STM32F429xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "features_add": [
            "PSA"
        ],
        "extra_labels_add": [
            "MBED_PSA_SRV"
        ],
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "detect_code": [
            "0796"
        ],
        "device_name": "STM32F429ZITx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "DISCO_F429ZI": {
        "inherits": [
            "MCU_STM32F429xI"
        ],
        "config": {
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_HS_IN_FS"
            }
        },
        "overrides": {
            "lse_available": 0
        },
        "device_has_remove": [
            "LPTICKER"
        ],
        "device_name": "STM32F429ZITx",
        "detect_code": [
            "0795"
        ],
        "image_url": "https://m.media-amazon.com/images/I/71M-Bd6yaJL._AC_UF894,1000_QL80_.jpg"
    },
    "MCU_STM32F439xI": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F439xI"
        ],
        "macros_add": [
            "STM32F439xx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F439ZI": {
        "inherits": [
            "MCU_STM32F439xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "detect_code": [
            "0797"
        ],
        "device_name": "STM32F439ZITx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F446xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F446xE"
        ],
        "macros_add": [
            "STM32F446xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN"
        ]
    },
    "NUCLEO_F446RE": {
        "inherits": [
            "MCU_STM32F446xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0777"
        ],
        "device_name": "STM32F446RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_F446ZE": {
        "inherits": [
            "MCU_STM32F446xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "detect_code": [
            "0778"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F446ZETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32F469xI": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F469xI"
        ],
        "macros_add": [
            "STM32F469xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "DISCO_F469NI": {
        "inherits": [
            "MCU_STM32F469xI"
        ],
        "components_add": [
            "QSPIF"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "N25Q128A"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSE_XTAL|USE_PLL_HSI"
        },
        "detect_code": [
            "0788"
        ],
        "device_has_add": [
            "QSPI",
            "USBDEVICE"
        ],
        "device_name": "STM32F469NIHx",
        "image_url": "https://static5.arrow.com/pdfs/2015/11/30/5/10/19/531/st_/manual/stm32f469i-disco_fig.1_1.jpg"
    },
    "SDP_K1": {
        "inherits": [
            "MCU_STM32F469xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "clock_freq": {
                "help": "Clock frequency in Mhz",
                "value": "8",
                "macro_name": "CLOCK_FREQUENCY_MHZ"
            },
            "usb_speed":  {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_HS"
            }
        },
        "overrides": {
            "clock_source": "USE_PLL_HSE_XTAL|USE_PLL_HSI",
            "lse_available": 0
        },
        "device_has_add": [
            "QSPI",
            "USBDEVICE"
        ],
        "device_has_remove": [
            "LPTICKER"
        ],
        "device_name": "STM32F469NIHx",
        "detect_code": [
            "0604"
        ],
        "image_url": "https://www.analog.com/en/_/media/analog/en/evaluation-board-images/images/eval-sdp-ck1ztop-web.gif?rev=2b0d46c94afe490cb3543819752a0471&sc_lang=en&h=270&thn=1&hash=C1A2567A6E5A569665B40C5DCFE1B8C3"
    },

    // STM32F7 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32F7": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M7F",
        "extra_labels_add": [
            "STM32F7"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 0,
            "internal-flash-uniform-sectors": false
        },
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "CRC",
            "SERIAL_ASYNCH",
            "TRNG",
            "FLASH",
            "MPU"
        ],
        "is_mcu_family_target": true
    },
    "NUCLEO_F722ZE": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "STM32F722xE"
        ],
        "macros_add": [
            "STM32F722xx"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0812"
        ],
        "device_name": "STM32F722ZETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "DISCO_F746NG": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "N25Q128A",
            "STM32F746xG"
        ],
        "components_add": [
            "QSPIF"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "overrides": {
            "clock_source": "USE_PLL_HSE_XTAL|USE_PLL_HSI",
            "network-default-interface-type": "ETHERNET"
        },
        "detect_code": [
            "0815"
        ],
        "macros_add": [
            "STM32F746xx",
            "HSE_VALUE=25000000"
        ],
        "device_has_add": [
            "EMAC",
            "QSPI",
            "USBDEVICE"
        ],
        "device_name": "STM32F746NGHx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF261641.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_F746ZG": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "STM32F746xG",
            "STM32F746ZG"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            }
        },
        "macros_add": [
            "STM32F746xx"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0816"
        ],
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "device_name": "STM32F746ZGTx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_F756ZG": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "STM32F756xG",
            "STM32F756ZG"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            }
        },
        "macros_add": [
            "STM32F756xx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0819"
        ],
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "device_name": "STM32F756ZGTx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "UHURU_RAVEN": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "STM32F767xI"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSE_XTAL",
            "network-default-interface-type": "WIFI"
        },
        "components_add": [
            "SPIF"
        ],
        "macros_add": [
            "STM32F767xx"
        ],
        "detect_code": [
            "9020"
        ],
        "device_has_remove": [
            "SERIAL_FC"
        ],
        "device_name": "STM32F767VITx",
        "image_url": "https://uhuru.co.jp/wp-content/uploads/2019/02/20190222_pr_raven_02.jpg"
    },
    "NUCLEO_F767ZI": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "STM32F767xI",
            "STM32F767ZI"
        ],
        "config": {
            "flash_dual_bank": {
                "help": "Default board configuration is Single Bank Flash. If you enable Dual Bank with ST Link Utility, set value to 1",
                "value": "0"
            },
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            }
        },
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "macros_add": [
            "STM32F767xx"
        ],
        "detect_code": [
            "0818"
        ],
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "device_name": "STM32F767ZITx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "DISCO_F769NI": {
        "inherits": [
            "MCU_STM32F7"
        ],
        "extra_labels_add": [
            "MX25L51245G",
            "STM32F769xI"
        ],
        "components_add": [
            "QSPIF"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "flash_dual_bank": {
                "help": "Default board configuration is Single Bank Flash. If you enable Dual Bank with ST Link Utility, set value to 1",
                "value": "0"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_HS"
            }
        },
        "detect_code": [
            "0817"
        ],
        "macros_add": [
            "STM32F769xx",
            "HSE_VALUE=25000000"
        ],
        "device_has_add": [
            "EMAC",
            "USBDEVICE",
            "QSPI"
        ],
        "device_name": "STM32F769NIHx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://www.mouser.com/images/marketingid/2016/img/167234246_STMicro_32F769IDISCOVERYDiscoveryKit.png?v=070223.0222"
    },

    // STM32G0 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32G0": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M0+",
        "c_lib": "small",
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "extra_labels_add": [
            "STM32G0"
        ],
        "macros_add": [
            "EXTRA_IDLE_STACK_REQUIRED",
            "MBED_TICKLESS"
        ],
        "overrides": {
            "lpuart_clock_source": "USE_LPUART_CLK_HSI",
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32G030x8": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32G030x8"
        ],
        "macros_add": [
            "STM32G030xx"
        ],
        "overrides": {
            "lpticker_delay_ticks": 1,
            "lpticker_lptim": "0",
            "boot-stack-size": "0x400"
        }
    },
    "MCU_STM32G031x8": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32G031x8"
        ],
        "macros_add": [
            "STM32G031xx"
        ]
    },
    "NUCLEO_G031K8": {
        "inherits": [
            "MCU_STM32G031x8"
        ],
        "detect_code": [
            "0852"
        ],
        "device_name": "STM32G031K8Tx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267508.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32G041x8": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32G041x8"
        ],
        "macros_add": [
            "STM32G041xx"
        ]
    },
    "MCU_STM32G050x8": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32G050x8"
        ],
        "macros_add": [
            "STM32G050xx"
        ],
        "overrides": {
            "lpticker_delay_ticks": 1,
            "lpticker_lptim": "0",
            "boot-stack-size": "0x400"
        }
    },
    "MCU_STM32G051x8": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32G051x8"
        ],
        "macros_add": [
            "STM32G051xx"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ]
    },
    "MCU_STM32G061x8": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "supported_application_profiles": [
            "bare-metal"
        ],
        "extra_labels_add": [
            "STM32G061x8"
        ],
        "macros_add": [
            "STM32G061xx"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ]
    },
    "MCU_STM32G070xB": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G070xB"
        ],
        "macros_add": [
            "STM32G070xx"
        ],
        "macros_remove": [
            "EXTRA_IDLE_STACK_REQUIRED",
            "MBED_TICKLESS"
        ],
        "overrides": {
            "lpticker_delay_ticks": 1,
            "lpticker_lptim": "0"
        }
    },
    "MCU_STM32G071xB": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G071xB"
        ],
        "macros_add": [
            "STM32G071xx"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ]
    },
    "NUCLEO_G071RB": {
        "inherits": [
            "MCU_STM32G071xB"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0221"
        ],
        "device_name": "STM32G071RBTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF265386.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32G081xB": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G081xB"
        ],
        "macros_add": [
            "STM32G081xx"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ]
    },
    "MCU_STM32G0B0xE": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G0B0xE"
        ],
        "macros_add": [
            "STM32G0B0xx"
        ],
        "overrides": {
            "lpticker_delay_ticks": 1,
            "lpticker_lptim": "0"
        }
    },
    "MCU_STM32G0B1xE": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G0B1xE"
        ],
        "macros_add": [
            "STM32G0B1xx"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ]
    },
    "NUCLEO_G0B1RE": {
        "inherits": [
            "MCU_STM32G0B1xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0872"
        ],
        "device_name": "STM32G0B1RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF265386.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32G0C1xE": {
        "inherits": [
            "MCU_STM32G0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G0C1xE"
        ],
        "macros_add": [
            "STM32G0C1xx"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ]
    },

    // STM32G4 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32G4": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC",
                "macro_name": "CLOCK_SOURCE"
            },
            "hse_value": {
                "help": "HSE default value is 8MHz in stm32g4xx_hal_conf.h",
                "value": "8000000",
                "macro_name": "HSE_VALUE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "extra_labels_add": [
            "STM32G4"
        ],
        "macros_add": [
            "EXTRA_IDLE_STACK_REQUIRED",
            "MBED_TICKLESS"
        ],
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "ANALOGOUT",
            "FLASH",
            "MPU",
            "SERIAL_ASYNCH",
            "TRNG",
            "CAN",
            "CRC"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32G431xB": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G431xB"
        ],
        "macros_add": [
            "STM32G431xx"
        ]
    },
    "NUCLEO_G431RB": {
        "inherits": [
            "MCU_STM32G431xB"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0850"
        ],
        "overrides": {
            "hse_value": 24000000
        },
        "device_name": "STM32G431RBTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267029.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_G431KB": {
        "inherits": [
            "MCU_STM32G431xB"
        ],
      "overrides": {
        "clock_source": "USE_PLL_HSI",
        "lse_available":  0
      },
      "detect_code": [
        "0851"
      ],
      "device_name": "STM32G431KBTx",
      "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267030.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32G441xB": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G441xB"
        ],
        "macros_add": [
            "STM32G441xx"
        ]
    },
    "MCU_STM32G471xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G471xE"
        ],
        "macros_add": [
            "STM32G471xx"
        ]
    },
    "MCU_STM32G473xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G473xE"
        ],
        "macros_add": [
            "STM32G473xx"
        ]
    },
    "MCU_STM32G474xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G474xE"
        ],
        "macros_add": [
            "STM32G474xx"
        ]
    },
    "NUCLEO_G474RE": {
        "inherits": [
            "MCU_STM32G474xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "overrides": {
            "hse_value": 24000000
        },
        "detect_code": [
            "0841"
        ],
        "device_name": "STM32G474RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267029.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32G483xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G483xE"
        ],
        "macros_add": [
            "STM32G483xx"
        ]
    },
    "MCU_STM32G484xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G484xE"
        ],
        "macros_add": [
            "STM32G484xx"
        ]
    },
    "MCU_STM32G491xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G491xE"
        ],
        "macros_add": [
            "STM32G491xx"
        ]
    },
    "MCU_STM32G4A1xE": {
        "inherits": [
            "MCU_STM32G4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32G4A1xE"
        ],
        "macros_add": [
            "STM32G4A1xx"
        ]
    },
	
    // STM32H5 Targets -------------------------------------------------------------------------------------------------
	"MCU_STM32H5": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32H5"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI|USE_PLL_HSE_XTAL",
                "macro_name": "CLOCK_SOURCE"
            },
            "hse_value": {
                "help": "Frequency in MHz of external oscillator / crystal.  Will be used to compute PLL parameters.",
                "value": "8000000",
                "macro_name": "HSE_VALUE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "macros_add": [
            "EXTRA_IDLE_STACK_REQUIRED",
            "MBED_TICKLESS"
        ],
        "device_has_add": [
            "MPU",
            "ANALOGOUT",
            "SPI_32BIT_WORDS"
        ],
        "device_has_remove": [
            "FLASH",
            "LPTICKER",
            "CAN",
			"SERIAL_FC",
            "WATCHDOG"
        ],
        "is_mcu_family_target": true
    },
	"MCU_STM32H503xB": {
        "inherits": [
            "MCU_STM32H5"
        ],
        "public": false,
        "core": "Cortex-M33",
        "extra_labels_add": [
            "STM32H503xB"
        ],
        "macros_add": [
            "STM32H503xx"
        ]
    },
	"NUCLEO_H503RB": {
        "inherits": [
            "MCU_STM32H503xB"
        ],
        "overrides": {
            "hse_value": 24000000,
            "lse_available":  1,
            "clock_source": "USE_PLL_HSE_XTAL|USE_PLL_HSI",

            // ADC reference voltage is same as MCU VDD.
            // MCU VDD defaults to 3.3V though can be changed to 1.8V based on JP2 setting on nucleo board.
            "default-adc-vref": 3.3,
        },
        "device_has_remove": [
            "ANALOGOUT" // both DAC pins are in conflict with LED1 and STDIO_UART_TX
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0832"
        ],
        "device_name": "STM32H503RBTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF274336.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
	"MCU_STM32H563xI": {
        "inherits": [
            "MCU_STM32H5"
        ],
        "public": false,
        "core": "Cortex-M33",
        "extra_labels_add": [
            "STM32H563xI"
        ],
        "macros_add": [
            "STM32H563xx"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "device_has_add": [
            "EMAC"
        ]
    },
	"NUCLEO_H563ZI": {
        "inherits": [
            "MCU_STM32H563xI"
        ],
        "overrides": {
            "lse_available":  1,
            "clock_source": "USE_PLL_HSE_EXTC|USE_PLL_HSI",

            // ADC reference voltage is same as MCU VDD.
            // MCU VDD defaults to 3.3V though can be changed to 1.8V based on JP4 setting on nucleo board.
            "default-adc-vref": 3.3
        },
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0878"
        ],
        "device_name": "STM32H563ZITx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF274337.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
	
    // STM32H7 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32H7": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32H7"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC | USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "system_power_supply": {
                "expected_value1": "PWR_LDO_SUPPLY | PWR_DIRECT_SMPS_SUPPLY",
                "expected_value2": "PWR_SMPS_1V8_SUPPLIES_LDO | PWR_SMPS_2V5_SUPPLIES_LDO | PWR_SMPS_1V8_SUPPLIES_EXT_AND_LDO | PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO",
                "expected_value3": "PWR_SMPS_1V8_SUPPLIES_EXT | PWR_SMPS_2V5_SUPPLIES_EXT | PWR_EXTERNAL_SOURCE_SUPPLY",
                "value": "NC"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            },
            "enable-overdrive-mode": {
                "help": "Enable 'overdrive mode' (also known as VOS0) and raise core clock to the maximum value.  Only supported when the internal LDO is used for core voltage source.  Reduces the temperature range of the chip, see datasheet for details.",
                "value": 1
            },
            "hse_value": {
                "help": "Frequency in MHz of external oscillator / crystal.  Will be used to compute PLL parameters.",
                "value": "8000000",
                "macro_name": "HSE_VALUE"
            },
        },
        "macros_add": [
            "EXTRA_IDLE_STACK_REQUIRED",
            "MBED_TICKLESS",
            "DATA_IN_D2_SRAM" // Flag to HAL Layer to initialize clock for D2 SRAM on boot
        ],
        "overrides": {
            "lpticker_delay_ticks": 0,
            // Mbed's clock code does not initialize PLL2, so we have to disable USE_LPUART_CLK_PCLK1 here.
            "lpuart_clock_source": "USE_LPUART_CLK_LSE|USE_LPUART_CLK_HSI|USE_LPUART_CLK_SYSCLK"
        },
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "CRC",
            "TRNG",
            "FLASH",
            "MPU",
            "SPI_32BIT_WORDS"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32H723xG": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H723xG",
            "STM32H7_550MHZ"
        ],
        "macros_add": [
            "MBED_SPLIT_HEAP",
            "STM32H723xx",
        ],
        "overrides": {
            "system_power_supply": "PWR_LDO_SUPPLY"
        }
    },
    "MCU_STM32H725xE": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H725xE",
            "STM32H7_550MHZ"
        ],
        "macros_add": [
            "MBED_SPLIT_HEAP",
            "STM32H725xx"
        ],
        "overrides": {
            "system_power_supply": "PWR_LDO_SUPPLY"
        }
    },
    "WIO_H725AE": { // AKA "Seeed Wio Lite AI"
        "inherits": [
            "MCU_STM32H725xE"
        ],
        "config": {
            "usb_speed": {
                "help": "USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_HS_IN_FS"
            }
        },
        "device_has_add": [
            "USBDEVICE"
        ],
        "overrides": {
            "lse_available":  1,
            "system_power_supply": "PWR_DIRECT_SMPS_SUPPLY",
            "clock_source": "USE_PLL_HSI | USE_PLL_HSE_XTAL",
            "lse_drive_load_level": "RCC_LSEDRIVE_MEDIUMLOW",
            "enable-overdrive-mode": 0
        },
        "device_name": "STM32H725AEIx",
        "image_url": "https://www.mouser.com/images/seeedstudios/hd/102110607_SPL.jpg"
    },
    "MCU_STM32H735xG": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H735xG",
            "STM32H7_550MHZ"
        ],
        "macros_add": [
            "STM32H735xx",
            "MBED_SPLIT_HEAP"
        ],
        "overrides": {
            "system_power_supply": "PWR_LDO_SUPPLY"
        },
        "device_name": "STM32H735AGIx"
    },
    "MCU_STM32H743xI": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H743xI",
            "STM32H7_480MHZ"
        ],
        "macros_add": [
            "STM32H743xx",
            "MBED_SPLIT_HEAP"
        ],
        "overrides": {
            "system_power_supply": "PWR_LDO_SUPPLY"
        }
    },
    "NUCLEO_H743ZI2": {
        "inherits": [
            "MCU_STM32H743xI"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PB_5 for the default board configuration, PA_7 in case of solder bridge update (SB33 on/ SB35 off)",
                "value": "PB_5",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            }
        },
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0836"
        ],
        "device_name": "STM32H743ZITx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_H723ZG": {
        "inherits": [
            "MCU_STM32H723xG"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels_add": [
            "STM32H723ZG"
        ],
        "config": {

            "d11_configuration": {
                "help": "Value: PB_5 for the default board configuration, PA_7 in case of solder bridge update (SB33 on/ SB35 off)",
                "value": "PB_5",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_HS_IN_FS"
            }
        },
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSE_EXTC",
            "lse_available": 1,
            "network-default-interface-type": "ETHERNET"
        },
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0836"
        ],
        "device_name": "STM32H723ZGTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32H745xI": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32H745xI",
            "STM32H7_480MHZ"
        ],
        "macros_add": [
            "STM32H745xx"
        ],
        "device_name": "STM32H745ZITx"
    },
	
	// These targets contain the extra bits to add to the MCU_STM32H745xI target to set it for the
	// CM4 or CM7 core.
    "MCU_STM32H745xI_CM4": {
        "public": false,
        "extra_labels_add": [
            "STM32H745xI_CM4"
        ],
        "core": "Cortex-M4F",
        "memory_bank_config": {
            // Select flash bank 2
            "IROM1": {
                "start": 0x08100000,
                "size": 0x100000
            }
        },
        "macros_add": [
            "CORE_CM4"
        ]
    },
    "MCU_STM32H745xI_CM7": {
        "public": false,
        "extra_labels_add": [
            "STM32H745xI_CM7"
        ],
        "core": "Cortex-M7FD",
        "memory_bank_config": {
            // Select flash bank 1
            "IROM1": {
                "start": 0x08000000,
                "size": 0x100000
            }
        },
        "macros_add": [
            "CORE_CM7"
        ]
    },
    "NUCLEO_H745ZI_Q": {
		"inherits": ["MCU_STM32H745xI"],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "public": false,
        "config": {
            "d11_configuration": {
                "help": "Value: PB_5 for the default board configuration, PA_7 in case of solder bridge update (SB33 on/ SB35 off)",
                "value": "PB_5",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            },
        },
        "device_has_add": [
            "USBDEVICE"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET",
            "system_power_supply": "PWR_DIRECT_SMPS_SUPPLY",
            // Cannot enable overdrive mode because the default power supply is SMPS
            "enable-overdrive-mode": 0
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF262651.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_H745ZI_Q_CM7": {
        inherits: ["MCU_STM32H745xI_CM7", "NUCLEO_H745ZI_Q"]
    },
    "NUCLEO_H745ZI_Q_CM4": {
        inherits: ["MCU_STM32H745xI_CM4", "NUCLEO_H745ZI_Q"]
    },
    "MCU_STM32H747xI": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32H747xI",
            "STM32H7_480MHZ"
        ],
        "macros_add": [
            "STM32H747xx"
        ]
    },
	// These targets contain the extra bits to add to the MCU_STM32H747xI target to set it for the
	// CM4 or CM7 core.
    "MCU_STM32H747xI_CM7": {
        "public": false,
        "extra_labels_add": [
            "STM32H747xI_CM7"
        ],
        "core": "Cortex-M7FD",
        "memory_bank_config": {
            // Select flash bank 1
            "IROM1": {
                "start": 0x08000000,
                "size": 0x100000
            }
        },
        "macros_add": [
            "CORE_CM7"
        ]
    },
    "MCU_STM32H747xI_CM4": {
        "public": false,
        "extra_labels_add": [
            "STM32H747xI_CM4"
        ],
        "core": "Cortex-M4F",
        "memory_bank_config": {
            // Select flash bank 2
            "IROM1": {
                "start": 0x08100000,
                "size": 0x100000
            }
        },
        "macros_add": [
            "CORE_CM4",
            "MBED_MPU_CUSTOM"
        ],
        "device_has_remove": [
            "MPU"
        ],
        "OUTPUT_EXT": "hex"
    },
    "DISCO_H747I": {
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/310/MFG_STM32H747I-DISCO.jpg",
        "public": false,
		"inherits": ["MCU_STM32H747xI"],
        "overrides": {
            "system_power_supply": "PWR_DIRECT_SMPS_SUPPLY",
            // Cannot enable overdrive mode because the default power supply is SMPS
            "enable-overdrive-mode": 0
        }
    },
    "DISCO_H747I_CM7": {
		// NOTE: inherit from MCU_STM32H747xI_CM7 first so that target's attributes get priority over
		// DISCO_H747I's attributes.
        "inherits": [
		    "MCU_STM32H747xI_CM7",
		    "DISCO_H747I"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO",
            "STMOD",
            "PMOD"
        ],
        "extra_labels_add": [
            "DISCO_H747I",
            "MT25QL512"
        ],
        "components_add": [
            "QSPIF"
        ],
        "device_has_add": [
            "QSPI"
        ],
        "detect_code": [
            "0814"
        ],
        "device_name": "STM32H747XIHx"
    },
    "DISCO_H747I_CM4": {
        "inherits": [
			"MCU_STM32H747xI_CM4",
            "DISCO_H747I"
        ],
        "extra_labels_add": [
            "DISCO_H747I",
            "MT25QL512"
        ],
        "device_has_add": [
            "QSPI"
        ],
        "components_add": [
            "QSPIF"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO",
            "STMOD",
            "PMOD"
        ],
        "device_name": "STM32H747XIHx"
    },
    // Umbrella target for all Arduino boards that use an H747 chip
    "STM32H747_ARDUINO": {
        "public": false,
        "inherits": ["MCU_STM32H747xI"],
        "config": {
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_HS"
            }
        },
        "components_add": [
            "QSPIF",
            "WHD",
            "4343W_FS",
            "CYW43XXX"
        ],
        "macros_add": [
            "CM4_BOOT_BY_APPLICATION",
            "QSPI_NO_SAMPLE_SHIFT",
            "CYW43XXX_UNBUFFERED_UART"
        ],
        "extra_labels_add": [
            "CORDIO"
        ],
        "features": [
            "BLE"
        ],
        "device_has_add": [
            "USBDEVICE",
            "QSPI"
        ],
        "overrides": {
            "lse_available": 1,
            "lpticker_delay_ticks": 0,
            "i2c_timing_value_algo": true
        },
        "device_name": "STM32H747XIHx"
    },
    "ARDUINO_PORTENTA_H7": {
        "public": false,
        "detect_code": ["0813"],
        inherits: ["STM32H747_ARDUINO"],
        "device_has_add": [
            "EMAC"
        ],
        "overrides": {
            "system_power_supply": "PWR_SMPS_1V8_SUPPLIES_LDO",
            "clock_source": "USE_PLL_HSE_EXTC",
            "lse_bypass": 1,
            "network-default-interface-type": "ETHERNET",
            "hse_value": 25000000,
            // Can use overdrive because LDO is regulating core voltage (even though
            // the LDO power comes from the SMPS).
            "enable-overdrive-mode": 1
        },
        "device_name": "STM32H747XIHx",
        "image_url": "https://store.arduino.cc/cdn/shop/products/ABX00042_00.iso_1200x900.jpg?v=1675840144"
    },
    "ARDUINO_PORTENTA_H7_M7": {
        "inherits": ["MCU_STM32H747xI_CM7", "ARDUINO_PORTENTA_H7"]
    },
    "ARDUINO_PORTENTA_H7_M4": {
        "inherits": ["MCU_STM32H747xI_CM4", "ARDUINO_PORTENTA_H7"]
    },
    "MCU_STM32H750xB": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H750xB",
            "STM32H7_480MHZ"
        ],
        "macros_add": [
            "STM32H750xx",
            "MBED_SPLIT_HEAP"
        ],
        "overrides": {
            "system_power_supply": "PWR_LDO_SUPPLY"
        },
        "device_name": "STM32H750ZBTx"
    },
    "MCU_STM32H753xI": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H753xI",
            "STM32H7_480MHZ"
        ],
        "macros_add": [
            "STM32H753xx",
            "MBED_SPLIT_HEAP"
        ],
        "overrides": {
            "system_power_supply": "PWR_LDO_SUPPLY"
        }
    },
    "MCU_STM32H7A3xIQ": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H7A3xIQ",
            "STM32H7_280MHZ"
        ],
        "macros_add": [
            "STM32H7A3xxQ",
            "MBED_SPLIT_HEAP"
        ],
        "device_name": "STM32H7A3ZITxQ"
    },
    "NUCLEO_H7A3ZI_Q": {
        "inherits": [
            "MCU_STM32H7A3xIQ"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0860"
        ],
        "overrides": {
            "system_power_supply": "PWR_DIRECT_SMPS_SUPPLY",
            // Cannot enable overdrive mode because the default power supply is SMPS
            "enable-overdrive-mode": 0
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267690.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32H7B3xIQ": {
        "inherits": [
            "MCU_STM32H7"
        ],
        "public": false,
        "core": "Cortex-M7FD",
        "extra_labels_add": [
            "STM32H7B3xIQ",
            "STM32H7_280MHZ"
        ],
        "macros_add": [
            "STM32H7B3xxQ",
            "MBED_SPLIT_HEAP"
        ],
        "device_name": "STM32H7B3ZITxQ",
        "overrides": {
            "system_power_supply": "PWR_DIRECT_SMPS_SUPPLY",
            // Cannot enable overdrive mode because the default power supply is SMPS
            "enable-overdrive-mode": 0
        }
    },

    // STM32L0 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32L0": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M0+",
        "extra_labels_add": [
            "STM32L0"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC (need HW patch) | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "CRC",
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32L053x8": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L053x8"
        ],
        "macros_add": [
            "STM32L053xx"
        ],
        "c_lib": "small",
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "supported_application_profiles": [
            "bare-metal"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "TRNG"
        ]
    },
    "MCU_STM32L071xB": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L071xB"
        ],
        "macros_add": [
            "STM32L071xx"
        ]
    },
    "MCU_STM32L071xZ": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L071xZ"
        ],
        "macros_add": [
            "STM32L071xx"
        ]
    },
    "MCU_STM32L072xZ": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L072xZ"
        ],
        "macros_add": [
            "STM32L072xx"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSI",
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "ANALOGOUT",
            "TRNG"
        ]
    },
    "DISCO_L072CZ_LRWAN1": { // AKA B-L072Z-LRWAN1
        "inherits": [
            "MCU_STM32L072xZ"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO_PART"
        ],
        "components_add": [
            "SX1276"
        ],
        "detect_code": [
            "0833"
        ],
        "device_name": "STM32L072CZTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF264368.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32L073xZ": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L073xZ"
        ],
        "macros_add": [
            "STM32L073xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "TRNG"
        ]
    },
    "NUCLEO_L073RZ": {
        "inherits": [
            "MCU_STM32L073xZ"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0760"
        ],
        "device_name": "STM32L073RZTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32L082xZ": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L082xZ"
        ],
        "macros_add": [
            "STM32L082xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "TRNG"
        ]
    },

    // STM32L1 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32L1": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M3",
        "extra_labels_add": [
            "STM32L1"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            }
        },
        "overrides": {
            "gpio_reset_at_init": true
        },
        "device_has_add": [
            "ANALOGOUT",
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32L151xB": {
        "inherits": [
            "MCU_STM32L1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L151xB"
        ],
        "device_has_remove": [
            "LPTICKER"
        ],
        "macros_add": [
            "STM32L151xB"
        ]
    },
    "MCU_STM32L151xBA": {
        "inherits": [
            "MCU_STM32L1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L151xBA"
        ],
        "macros_add": [
            "STM32L151xBA"
        ]
    },
    "MCU_STM32L151xC": {
        "inherits": [
            "MCU_STM32L1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L151xC"
        ],
        "macros_add": [
            "STM32L151xC"
        ]
    },
    "XDOT_L151CC": {
        "inherits": [
            "MCU_STM32L151xC"
        ],
        "extra_labels_add": [
            "STM32L151CC"
        ],
        "config": {
            "hse_value": {
                "value": "24000000",
                "macro_name": "HSE_VALUE"
            }
        },
        "device_has_remove": [
            "SERIAL_FC"
        ],
        "device_name": "STM32L151CCTx",
        "detect_code": [
            "0350"
        ],
        "image_url": "https://multitech.com/wp-content/uploads/elementor/thumbs/MT_xDot_Kit_MTMDK-NX-XDOT_clear_hp1000px-qiietlpii6czroara761mb7hrzdtvfj6350luxui2o.png"
    },
    // As of 2024, L-Tek no longer sells the FF1705 as far as I can tell from their webshop.
    // It was delisted sometime after 2021.
    "FF1705_L151CC": { // AKA L-Tek FF1705
        "inherits": [
            "XDOT_L151CC"
        ],
        "detect_code": [
            "8080"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/LTEK-xdot.jpg.250x250_q85.jpg"
    },
    "MCU_STM32L152xC": {
        "inherits": [
            "MCU_STM32L1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L152xC"
        ],
        "macros_add": [
            "STM32L152xC"
        ]
    },
    "MOTE_L152RC": { // AKA SX1272LM1CEP or NAMote72 or Semtech LoRaMote
        "inherits": [
            "MCU_STM32L152xC"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "STM32L152RC"
        ],
        "detect_code": [
            "4100"
        ],
        "device_has_remove": [
            "SERIAL_FC"
        ],
        "device_name": "STM32L152RCTx",
        "image_url": "https://www.newark.com/productimages/large/en_US/14AC8252-40.jpg"
    },
    "MCU_STM32L152xE": {
        "inherits": [
            "MCU_STM32L1"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L152xE"
        ],
        "macros_add": [
            "STM32L152xE"
        ]
    },
    "NUCLEO_L152RE": {
        "inherits": [
            "MCU_STM32L152xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0710"
        ],
        "device_name": "STM32L152RETx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },

    // STM32L4 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32L4": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "STM32L4"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC (need HW patch) | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI | USE_PLL_MSI",
                "value": "USE_PLL_MSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "CRC",
            "FLASH",
            "MPU",
            "SERIAL_ASYNCH",
            "TRNG"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32L412xB": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "c_lib": "small",
        "extra_labels_add": [
            "STM32L412xB"
        ],
        "macros_add": [
            "STM32L412xx"
        ],
        "device_has_remove": [
            "ANALOGOUT",
            "CAN"
        ]
    },
    "MCU_STM32L432xC": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "c_lib": "small",
        "extra_labels_add": [
            "STM32L432xC"
        ],
        "macros_add": [
            "STM32L432xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "NUCLEO_L432KC": {
        "inherits": [
            "MCU_STM32L432xC"
        ],
        "detect_code": [
            "0770"
        ],
        "device_name": "STM32L432KCUx",
        "image_url": "https://eu.mouser.com/images/marketingid/2019/img/168228755.png?v=021424.0917"
    },
    "MCU_STM32L433xC": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L433xC"
        ],
        "macros_add": [
            "STM32L433xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "NUCLEO_L433RC_P": {
        "inherits": [
            "MCU_STM32L433xC"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0779"
        ],
        "device_name": "STM32L433RCTx",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2508/MFG_NUCLEO-L433RC-P.jpg"
    },
    "MCU_STM32L443xC": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L443xC"
        ],
        "macros_add": [
            "MBEDTLS_CONFIG_HW_SUPPORT",
            "MBED_SPLIT_HEAP",
            "STM32L443xx"
        ]
    },
    // Note: Advantech WISE-DK1510 required as external debugger
    "ADV_WISE_1510": {
        "inherits": [
            "MCU_STM32L443xC"
        ],
        "overrides": {
            "clock_source": "USE_PLL_HSI",
            "lse_available": 0
        },
        "device_has_remove": [
            "LPTICKER"
        ],
        "device_name": "STM32L443RCTx",
        "detect_code": [
            "0458"
        ],
        "image_url": "https://www.mouser.com/images/advantechcorporation/lrg/WISE-1510WMB-SDA1E_DSL.jpg"
    },
    "MCU_STM32L452xE": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L452xE"
        ],
        "macros_add": [
            "STM32L452xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "NUCLEO_L452RE_P": {
        "inherits": [
            "MCU_STM32L452xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0829"
        ],
        "overrides": {
            // ADC vref on this board is connected to 3.3V VDD
            "default-adc-vref": 3.3
        },
        "device_name": "STM32L452RETx",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2508/MFG_NUCLEO-L433RC-P.jpg"
    },
    "MCU_STM32L471xG": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L471xG"
        ],
        "macros_add": [
            "STM32L471xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "MTS_DRAGONFLY_L471QG": { // Also known as "Dragonfly Nano"
        "inherits": [
            "MCU_STM32L471xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0312"
        ],
        "components_add": [
            "MULTITECH_DRAGONFLY_NANO_CELLULAR",
        ],
        "device_name": "STM32L471QGIx",
        "image_url": "https://www.mouser.com/images/marketingid/2021/img/175572858.png?v=011524.1015"
    },
    "MCU_STM32L475xG": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L475xG"
        ],
        "overrides": {
            "lpuart_clock_source": "USE_LPUART_CLK_HSI|USE_LPUART_CLK_SYSCLK"
        },
        "macros_add": [
            "STM32L475xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "DISCO_L475VG_IOT01A": {
        "inherits": [
            "MCU_STM32L475xG"
        ],
        "components_add": [
            "BlueNRG_MS",
            "QSPIF"
        ],
        "extra_labels_add": [
            "CORDIO",
            "MX25R6435F",
            "M24SR"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0764"
        ],
        "device_has_add": [
            "QSPI",
            "USBDEVICE"
        ],
        "features": [
            "BLE"
        ],
        "device_name": "STM32L475VGTx",
        "image_url": "https://www.mouser.com/images/stmicroelectronics/lrg/B_L475E_IOT01A1_SPL.jpg"
    },
    "MCU_STM32L476xG": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L476xG"
        ],
        "overrides": {
            "lpuart_clock_source": "USE_LPUART_CLK_HSI|USE_LPUART_CLK_SYSCLK"
        },
        "macros_add": [
            "STM32L476xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "NUCLEO_L476RG": {
        "inherits": [
            "MCU_STM32L476xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0765"
        ],
        "device_name": "STM32L476RGTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "DISCO_L476VG": {
        "inherits": [
            "MCU_STM32L476xG"
        ],
        "components_add": [
            "QSPIF"
        ],
        "extra_labels_add": [
            "N25Q128A"
        ],
        "detect_code": [
            "0820"
        ],
        "device_has_add": [
            "QSPI",
            "USBDEVICE"
        ],
        "device_name": "STM32L476VGTx",
        "image_url": "https://static5.arrow.com/pdfs/2015/11/2/7/58/36/906/st_/manual/stm32l476g-disco_fig.1.jpg"
    },
    "MCU_STM32L486xG": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L486xG"
        ],
        "overrides": {
            "lpuart_clock_source": "USE_LPUART_CLK_HSI|USE_LPUART_CLK_SYSCLK"
        },
        "macros_add": [
            "STM32L486xx",
            "MBEDTLS_CONFIG_HW_SUPPORT",
            "MBED_SPLIT_HEAP"
        ]
    },
    "NUCLEO_L486RG": {
        "inherits": [
            "MCU_STM32L486xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0827"
        ],
        "device_name": "STM32L486RGTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF260945.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32L496xG": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L496xG"
        ],
        "overrides": {
            "lpuart_clock_source": "USE_LPUART_CLK_HSI|USE_LPUART_CLK_SYSCLK"
        },
        "macros_add": [
            "STM32L496xx",
            "MBED_SPLIT_HEAP"
        ]
    },
    "DISCO_L496AG": {
        "inherits": [
            "MCU_STM32L496xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO",
            "STMOD",
            "PMOD"
        ],
        "extra_labels_add": [
            "MX25R6435F"
        ],
        "components_add": [
            "QSPIF"
        ],
        "detect_code": [
            "0822"
        ],
        "device_has_add": [
            "USBDEVICE",
            "QSPI"
        ],
        "device_name": "STM32L496AGIx",
        "image_url": "https://www.mouser.com/images/marketingid/2017/img/121062128_STmicro_32L496GDISCOVERYDiscoveryBoard.png?v=070223.0249"
    },
    "NUCLEO_L496ZG": {
        "inherits": [
            "MCU_STM32L496xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0823"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32L496ZGTx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267690.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_L496ZG_P": {
        "inherits": [
            "NUCLEO_L496ZG"
        ],
        "detect_code": [
            "0828"
        ]
    },
    "MCU_STM32L4P5xG": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L4P5xG"
        ],
        "macros_add": [
            "STM32L4P5xx"
        ]
    },
    "MCU_STM32L4R5xI": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L4R5xI"
        ],
        "macros_add": [
            "STM32L4R5xx"
        ]
    },
    "NUCLEO_L4R5ZI": {
        "inherits": [
            "MCU_STM32L4R5xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "STM32L4R5ZI",
            "STM32L4R5xI"
        ],
        "detect_code": [
            "0776"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32L4R5ZITx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF267690.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "NUCLEO_L4R5ZI_P": {
        "inherits": [
            "NUCLEO_L4R5ZI"
        ],
        "detect_code": [
            "0781"
        ]
    },
    "MCU_STM32L4R9xI": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L4R9xI"
        ],
        "macros_add": [
            "STM32L4R9xx"
        ]
    },
    "DISCO_L4R9I": {
        "inherits": [
            "MCU_STM32L4R9xI"
        ],
        "device_name": "STM32L4R9AIIx",
        "supported_form_factors": [
            "ARDUINO_UNO",
            "STMOD",
            "PMOD"
        ],
        "extra_labels_add": [
            "MX25LM51245G"
        ],
        "components_add": [
            "OSPIF"
        ],
        "macros_add": [
            "HSE_VALUE=16000000"
        ],
        "detect_code": [
            "0774"
        ],
        "device_has_add": [
            "QSPI",
            "OSPI",
            "USBDEVICE"
        ],
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF264782.en.feature-description-include-personalized-no-cpn-large.jpg"
    },
    "MCU_STM32L4S5xI": {
        "inherits": [
            "MCU_STM32L4"
        ],
        "public": false,

        "extra_labels_add": [
            "STM32L4S5xI"
        ],
        "macros_add": [
            "STM32L4S5xx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ]
    },
    "B_L4S5I_IOT01A": {
        "inherits": [
            "MCU_STM32L4S5xI"
        ],
        "components_add": [
            "BlueNRG_MS",
            "QSPIF"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO",
            "PMOD"
        ],
        "extra_labels_add": [
            "CORDIO",
            "MX25R6435F"
        ],
        "macros_add": [
            "HSE_VALUE=8000000"
        ],
        "detect_code": [
            "0885"
        ],
        "device_has_add": [
            "USBDEVICE",
            "QSPI"
        ],
        "features": [
            "BLE"
        ],
        "device_name": "STM32L4S5VITx",
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF270120.en.feature-description-include-personalized-no-cpn-large.jpg"
    },

    // STM32L5 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32L5": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M33FE",
        "extra_labels_add": [
            "STM32L5"
        ],

        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC (need HW patch) | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI | USE_PLL_MSI",
                "value": "USE_PLL_MSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "CRC",
            "FLASH",
            "MPU",
            "SERIAL_ASYNCH",
            "TRNG",
            "USBDEVICE"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32L552xE": {
        "inherits": [
            "MCU_STM32L5"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L552xE"
        ],
        "macros_add": [
            "STM32L552xx"
        ]
    },
    "NUCLEO_L552ZE_Q": {
        "inherits": [
            "MCU_STM32L552xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "device_name": "STM32L552ZETxQ",
        "detect_code": [
            "0854"
        ],
        "image_url": "https://cdn11.bigcommerce.com/s-3fd3md1ghs/images/stencil/500x659/products/30236/11949/NUCLEO-L552ZE-Q__51179.1642762880.jpg?c=2"
    },
    "MCU_STM32L562xE": {
        "inherits": [
            "MCU_STM32L5"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L562xE"
        ],
        "macros_add": [
            "STM32L562xx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ]
    },
    "DISCO_L562QE": {
        "inherits": [
            "MCU_STM32L562xE"
        ],
        "extra_labels_add": [
            "CORDIO",
            "MX25LM51245G"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO",
            "STMOD",
            "PMOD"
        ],
        "components_add": [
            "OSPIF",
            "BlueNRG_MS"
        ],
        "device_has_add": [
            "QSPI",
            "OSPI"
        ],
        "features": [
            "BLE"
        ],
        "device_name": "STM32L562QEIxQ",
        "detect_code": [
            "0854"
        ],
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF268050.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    // STM32U0 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32U0": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M0+",
        "extra_labels_add": [
            "STM32U0"
        ],
        "macros_add": [
            "MBED_TICKLESS"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC (need HW patch) | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI | USE_PLL_MSI",
                "value": "USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_NO_OTG"
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "CRC",
            "FLASH",
            "MPU",
            "ANALOGOUT",
            "TRNG",
            //"USBDEVICE" // TODO
        ],
        "device_has_remove": [
            "I2C",      // Not tested just prepared
            "I2CSLAVE"  // Not tested just prepared
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32U083xC": {
        "inherits": [
            "MCU_STM32U0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32U083xC"
        ],
        "macros_add": [
            "STM32U083xx"
        ]
    },
    "NUCLEO_U083RC": {
        "inherits": [
            "MCU_STM32U083xC"
        ],
		 "overrides": {
            "clock_source": "USE_PLL_HSI", // Use HSI by default, other options require hardware changes
            "lse_available":  1,
            "default-adc-vref": 3.3
        },
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "device_name": "STM32U083RCTx",
        "detect_code": [
            "0888"
        ],
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF273876.en.feature-description-include-personalized-no-cpn-large.jpg"
    },
  
    // STM32U5 Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32U5": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M33FE",
        "extra_labels_add": [
            "STM32U5"
        ],
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC (need HW patch) | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI | USE_PLL_MSI",
                "value": "USE_PLL_MSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            },
            "qspi_ospim_ioport_high": {
                "help": "When using the OSPI peripheral in QSPI mode, set value 1 to use IO 7~4 for data, or 0 to use IO 3~0. Affects both OCTOSPI1 and OCTOSPI2 instances.",
                "value": 0,
                "macro_name": "QSPI_OSPIM_IOPORT_HIGH"
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 0,
            "lpuart_clock_source": "USE_LPUART_CLK_HSI|USE_LPUART_CLK_SYSCLK"
        },
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "CRC",
            "FLASH",
            "MPU",
            "TRNG",
            "SERIAL_ASYNCH",
            "SPI_32BIT_WORDS"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32U575xI": {
        "inherits": [
            "MCU_STM32U5"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32U575xI"
        ],
        "macros_add": [
            "STM32U575xx"
        ]
    },
    "NUCLEO_U575ZI_Q": {
        "inherits": [
            "MCU_STM32U575xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "device_name": "STM32U575ZITx",
        "detect_code": [
            "886"
        ],
        "overrides": {
            // As shipped, this nucleo board connects VREFP to VDD_MCU, and connects VDD_MCU to 3.3V.
            // Jumper JP4 can be used to switch VDD_MCU to 1.8V in which case you should override this setting to 1.8.
            "default-adc-vref": 3.3
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF271812.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32U575xG": {
        "inherits": [
            "MCU_STM32U5"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32U575xG"
        ],
        "macros_add": [
            "STM32U575xx"
        ]
    },
    "MCU_STM32U585xI": {
        "inherits": [
            "MCU_STM32U5"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32U585xI"
        ],
        "macros_add": [
            "STM32U585xx"
        ]
    },
    "B_U585I_IOT02A": {
        "inherits": [
            "MCU_STM32U585xI"
        ],
        "supported_form_factors": [
            "STMOD",
            "PMOD",
            "ARDUINO_UNO"
        ],
        "device_name": "STM32U585AIIx",
        "extra_labels_add": [
            "MX25LM51245G"
        ],
        "components_add": [
            "OSPIF",
            "EMW3080B"
        ],
        "device_has_add": [
            "QSPI",
            "OSPI"
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "detect_code": [
            "887"
        ],
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF271412.en.feature-description-include-personalized-no-cpn-large.jpg"
    },
    "MCU_STM32U545xE": {
        "inherits": [
            "MCU_STM32U5"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32U545xE"
        ],
        "macros_add": [
            "STM32U545xx"
        ],
        "device_name": "STM32U545RETx"
    },
    "NUCLEO_U545RE_Q": {
        "inherits": [
            "MCU_STM32U545xE"
        ],
        "public": true,
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],

        "overrides": {
            // As shipped, this nucleo board connects VREFP to VDD_MCU, and connects VDD_MCU to 3.3V.
            // Jumper JP5 can be used to switch VDD_MCU to 1.8V in which case you should override this setting to 1.8.
            "default-adc-vref": 3.3
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF273877.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },
    "MCU_STM32U5A5xJ": {
        "inherits": [
            "MCU_STM32U5"
        ],
        "public": false,
        "device_name": "STM32U5A5ZJTx",
        "extra_labels_add": [
            "STM32U5A5xJ"
        ],
        "macros_add": [
            "STM32U5A5xx"
        ]
    },
    "NUCLEO_U5A5ZJ_Q": {
        "inherits": [
            "MCU_STM32U5A5xJ"
        ],
        "public": true,
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "overrides": {
            // As shipped, this nucleo board connects VREFP to VDD_MCU, and connects VDD_MCU to 3.3V.
            // Jumper JP4 can be used to switch VDD_MCU to 1.8V in which case you should override this setting to 1.8.
            "default-adc-vref": 3.3
        },
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF271812.en.feature-description-include-personalized-no-cpn-medium.jpg"
    },

    // STM32WB Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32WB": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "STM32WB",
            "CORDIO"
        ],
        "config": {
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "CRC",
            "FLASH",
            "MPU",
            "SERIAL_ASYNCH",
            "TRNG"
        ],
        "features": [
            "BLE"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32WB15xC": {
        "inherits": [
            "MCU_STM32WB"
        ],
        "public": false,
        "supported_application_profiles": [
            "bare-metal"
        ],
        "c_lib": "small",
        "extra_labels_add": [
            "STM32WB15xC"
        ],
        "device_name": "STM32WB15CCUx",

        // Reduce used flash to make room for the M0 core firmware
        "memory_bank_config": {
            "IROM1": {
                "size": 0x32800 // 202kiB
            }
        },
        "overrides": {
            "boot-stack-size": "0x400"
        },
        "macros_add": [
            "STM32WB15xx"
        ]
    },
    "NUCLEO_WB15CC": {
        "inherits": [
            "MCU_STM32WB15xC"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0883"
        ],
        "image_url": "https://www.mouser.com/images/stmicroelectronics/hd/NUCLEO-WB15CC_SPL.jpg"
    },
    "MCU_STM32WB55xG": {
        "inherits": [
            "MCU_STM32WB"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32WB55xG"
        ],
        "device_name": "STM32WB55RGVx",

        // Reduce used flash to make room for the M0 core firmware
        "memory_bank_config": {
            "IROM1": {
                "size": 0xCA000 // 808kiB
            }
        },
        "macros_add": [
            "STM32WB55xx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ]
    },
    "NUCLEO_WB55RG": {
        "inherits": [
            "MCU_STM32WB55xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0839"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "image_url": "https://www.mouser.com/images/stmicroelectronics/hd/NUCLEO-WB15CC_SPL.jpg"
    },
    "MCU_STM32WB5MxG": {
        "inherits": [
            "MCU_STM32WB"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32WB5MxG"
        ],
        "device_name": "STM32WB55VGYx",

        // Reduce used flash to make room for the M0 core firmware
        "memory_bank_config": {
            "IROM1": {
                "size": 0xCA000 // 808kiB
            }
        },

        "macros_add": [
            "STM32WB5Mxx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ]
    },
    "DISCO_WB5MMG": { // AKA STM32WB5MM-DK
        "inherits": [
            "MCU_STM32WB5MxG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0884"
        ],
        "image_url": "https://www.st.com/bin/ecommerce/api/image.PF271050.en.feature-description-include-personalized-no-cpn-large.jpg"
    },

    // STM32WL Targets -------------------------------------------------------------------------------------------------
    "MCU_STM32WL": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4",
        "extra_labels_add": [
            "STM32WL"
        ],
        "config": {
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "MPU",
            "CRC",
            "FLASH",
            "SERIAL_ASYNCH",
            "ANALOGOUT",
            "ANALOGIN",
            "TRNG"
        ],
        "is_mcu_family_target": true
    },
    "MCU_STM32WL55xC": {
        "inherits": [
            "MCU_STM32WL"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32WL55xC"
        ],
        "macros_add": [
            "STM32WL55xx"
        ],
        "device_name": "STM32WL55JCIx"
    },
    "NUCLEO_WL55JC": {
        "inherits": [
            "MCU_STM32WL55xC"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0866"
        ],
        "image_url": "https://www.mouser.com/images/marketingid/2020/img/114771861.png?v=012324.0355"
    },
    "MCU_STM32WLE5xC": {
        "inherits": [
            "MCU_STM32WL"
        ],
        "public": false,
        "macros_add": [
            "STM32WLE5xx"
        ],
        "extra_labels_add": [
            "STM32WLE5xC"
        ],
        "device_name": "STM32WLE5JCIx"
    },
    // NXP i.MX RT Targets ---------------------------------------------------------------------------------------------

    // Note: "MIMXRT105X" target is for the MIMXRT1051, MIMXRT1052, MIMXRT1061, and MIMXRT1062
    // See here for details: https://github.com/mbed-ce/mbed-os/wiki/MCU-Info-Page:-MIMXRT105x-and-106x
    "MIMXRT105X": {
        "core": "Cortex-M7FD",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "supported_application_profiles": [
            "full",
            "bare-metal"
        ],
        "public": false,
        "extra_labels": [
            "NXP",
            "MCUXpresso_MCUS",
            "IMX",
            "NXP_EMAC",
            "USB",
            "MIMXRT105X"
        ],
        "macros": [
            "CPU_MIMXRT1052DVL6B",
            "FSL_RTOS_MBED",
            "XIP_BOOT_HEADER_ENABLE=1",
            "XIP_EXTERNAL_FLASH=1",
            "FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1",
            "SKIP_SYSCLK_INIT",
            "__STARTUP_INITIALIZE_RAMFUNCTION",
            "__STARTUP_INITIALIZE_NONCACHEDATA",
            "MBED_MPU_CUSTOM",
            "MBED_TICKLESS",
            "DATA_SECTION_IS_CACHEABLE=1",
            "MBED_SPLIT_HEAP"
        ],
        "inherits": [
            "Target"
        ],
        "device_has": [
            "RTC",
            "SLEEP",
            "USTICKER",
            "ANALOGIN",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TRNG",
            "WATCHDOG",
            "USBDEVICE"
        ],
        "overrides": {
            "deep-sleep-latency": 10
        },
         "config": {
             "enable-overdrive-mode": {
                 "help": "Enable 'overdrive mode' and raise core clock from 528MHz to 600MHz.  Only allowed on MIMXRT10xxD parts, not MIMXRT10xxC",
                 "value": 1
             }
         },
         "is_mcu_family_target": true
     },
    "MIMXRT1050_EVK": {
        "inherits": [
            "MIMXRT105X"
        ],
        "extra_labels_add": [
            "EVK",
            "1050_EVK",
            "MIMXRT1050"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "macros_add": [
            "HYPERFLASH_BOOT",
            "XIP_BOOT_HEADER_DCD_ENABLE=1",
            "FSL_FEATURE_PHYKSZ8081_USE_RMII50M_MODE"
        ],
        "device_has_add": [
            "FLASH"
        ],
        "detect_code": [
            "0227"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "memory_banks": {
            "SDRAM": {
                "access": {
                    "execute": false,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": true
                },
                "default": false,
                "size": 0x10000000, // 256MiB
                "start": 0x80000000,
                "startup": false
            },
            // MIMXRT1050 EVK uses hyperflash by default
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x4000000, // 64MiB
                "start": 0x60000000,
                "startup": true
            }
        },
        "bootloader_supported": true,
        "device_name": "MIMXRT1052DVL6A",
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/IMX_RT1050-EVKB_TOP-LR.jpg"
    },
    "MIMXRT1060_EVK": {
        "inherits": [
            "MIMXRT105X"
        ],
        "extra_labels_add": [
            "EVK",
            "1060_EVK",
            "MIMXRT1060"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "macros_add": [
            "XIP_BOOT_HEADER_DCD_ENABLE=1",
            "FSL_FEATURE_PHYKSZ8081_USE_RMII50M_MODE"
        ],
        "device_has_add": [
            "FLASH"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "memory_banks": {
            "SDRAM": {
                "access": {
                    "execute": false,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": true
                },
                "default": false,
                "size": 0x10000000, // 256MiB
                "start": 0x80000000,
                "startup": false
            },
            // MIMXRT1050 EVK uses QSPI flash by default
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x800000, // 8MiB
                "start": 0x60000000,
                "startup": true
            }
        },
        "device_name": "MIMXRT1062DVL6B",
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/X-MIMXRT1060-EVK-BOARD-BOTTOM.jpg"
    },
    "TEENSY_40": {
        "inherits": [
            "MIMXRT105X"
        ],
        "extra_labels_add": [
            "TEENSY_4X",
            "TEENSY_40",
            "MIMXRT1060"
        ],
        "overrides": {
            "console-usb": true,
            "console-uart": false
        },

        // 2MB QSPI flash
        "memory_banks": {
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x200000,
                "start": 0x60000000,
                "startup": true
            }
        },

        // The end of flash is used by the Teensy bootloader
        "memory_bank_config": {
            "EXT_FLASH": {
                "size": 0x1F0000, // 1984k
            }
        },
        "device_has_remove": [
            "EMAC"
        ],
        "device_name": "MIMXRT1062DVL6B",
        "image_url": "https://www.pjrc.com/store/teensy40_front.jpg"
    },
    "TEENSY_41": {
        "inherits": [
            "MIMXRT105X"
        ],
        "extra_labels_add": [
            "TEENSY_4X",
            "TEENSY_41",
            "MIMXRT1060"
        ],
        "overrides": {
            "console-usb": true,
            "console-uart": false,
            "network-default-interface-type": "ETHERNET"
        },

        // 8MB QSPI flash
        "memory_banks": {
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x800000,
                "start": 0x60000000,
                "startup": true
            }
        },

        // The end of flash is used by the Teensy bootloader
        "memory_bank_config": {
            "EXT_FLASH": {
                "size": 0x7C0000, // 7936k
            }
        },

        "device_name": "MIMXRT1062DVL6B",
        "image_url": "https://www.pjrc.com/store/teensy41_4.jpg"
    },
    "MIMXRT1170_EVK": {
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "core": "Cortex-M7FD",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "NXP",
            "MCUXpresso_MCUS",
            "EVK",
            "MIMXRT1170",
            "IMX"
        ],
        "is_disk_virtual": true,
        "macros": [
            "CPU_MIMXRT1176DVMAA_cm7",
            "FSL_RTOS_MBED",
            "XIP_BOOT_HEADER_ENABLE=1",
            "XIP_EXTERNAL_FLASH=1",
            "XIP_BOOT_HEADER_DCD_ENABLE=1",
            "SKIP_SYSCLK_INIT",
            "MBED_MPU_CUSTOM",
            "FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1",
            "__STARTUP_INITIALIZE_RAMFUNCTION",
            "__STARTUP_INITIALIZE_NONCACHEDATA",
            "MBED_TICKLESS",
            "DATA_SECTION_IS_CACHEABLE=1"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "0228"
        ],
        "device_has": [
            "ANALOGIN",
            "FLASH",
            "INTERRUPTIN",
            "I2C",
            "I2CSLAVE",
            "PWMOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "LPTICKER",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "device_name": "MIMXRT1176DVMAA",
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/MIMXRT1170-EVKB-TOP-IMG.jpg"
    },

    // NXP LPC5xxxx Targets --------------------------------------------------------------------------------------------
    "LPC54114": { // AKA LPCXpresso54114
        "supported_form_factors": [
            "ARDUINO"
        ],
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "NXP",
            "MCUXpresso_MCUS",
            "LPC54114_M4",
            "LPCXpresso",
            "LPC"
        ],
        "is_disk_virtual": true,
        "macros": [
            "CPU_LPC54114J256BD64_cm4",
            "FSL_RTOS_MBED",
            "MBED_TICKLESS"
        ],
        "inherits": [
            "Target"
        ],
        "detect_code": [
            "1054"
        ],
        "device_has": [
            "USTICKER",
            "RTC",
            "ANALOGIN",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "FLASH",
            "MPU"
        ],
        "overrides": {
            "tickless-from-us-ticker": true,
            "init-us-ticker-at-boot": true
        },
        "release_versions": [
            "5"
        ],
        "post_binary_hook": {
            "function": "LPCTargetCode.lpc_patch"
        },
        "device_name": "LPC54114J256BD64",
        "supported_c_libs": {
            "arm": [
                "std", "small"
            ],
            "gcc_arm": [
                "std", "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/691/OM13089UL.JPG"
    },
    "MCU_LPC546XX": {
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "NXP",
            "MCUXpresso_MCUS",
            "LPC",
            "NXP_EMAC"
        ],
        "is_disk_virtual": true,
        "public": false,
        "macros": [
            "CPU_LPC54628J512ET180",
            "FSL_RTOS_MBED",
            "MBED_TICKLESS",
            "MBED_SPLIT_HEAP",
            "MBED_MPU_CUSTOM"
        ],
        "inherits": [
            "Target"
        ],
        "device_has": [
            "USTICKER",
            "RTC",
            "ANALOGIN",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "FLASH",
            "TRNG",
            "QSPI",
            "MPU"
        ],
        "overrides": {
            "tickless-from-us-ticker": true,
            "init-us-ticker-at-boot": true,
            "network-default-interface-type": "ETHERNET"
        },
        "post_binary_hook": {
            "function": "LPCTargetCode.lpc_patch"
        },
        "supported_c_libs": {
            "arm": [
                "std", "small"
            ],
            "gcc_arm": [
                "std", "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "LPC546XX": { // AKA LPCXpresso54608
        "supported_form_factors": [
            "ARDUINO"
        ],
        "inherits": [
            "MCU_LPC546XX"
        ],
        "extra_labels_add": [
            "LPCXpresso"
        ],
        "detect_code": [
            "1056"
        ],
        "release_versions": [
            "5"
        ],
        "components_add": [
            "QSPIF"
        ],
        "device_name": "LPC54628J512ET180",
        "image_url": "https://www.nxp.com/assets/images/en/dev-board-image/LPCXpresso54608_back.png"
    },
    "FF_LPC546XX": {
        "inherits": [
            "MCU_LPC546XX"
        ],
        "detect_code": [
            "8081"
        ],
        "device_has_remove": [
            "QSPI"
        ],
        "release_versions": [
            "5"
        ],
        // Note: this target has a DataFlash flash on the board, BUT they actually pinned it out wrong:
        // SCLK is connected to SPI3, while MOSI and MISO are connected to SPI5. So, the flash is
        // impossible to use, at least without bodge wires!
        "device_name": "LPC54606J512BD100",
        "image_url": "https://os.mbed.com/media/cache/platforms/t17_VBxJMp4.png.250x250_q85.png"
    },

    // ARM MPS2 FPGA prototyping targets -------------------------------------------------------------------------------
    "ARM_MPS2_Target": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "EMAC",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "TSC"
        ],
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "is_mcu_family_target": true
    },
    "ARM_MPS2_M0": {
        "inherits": [
            "ARM_MPS2_Target"
        ],
        "core": "Cortex-M0",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "ARM_SSG",
            "MPS2",
            "MPS2_M0"
        ],
        "macros": [
            "CMSDK_CM0",
            "CMSIS_VECTAB_VIRTUAL",
            "CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\""
        ],
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TSC",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "copy_method": "mps2",
        "reset_method": "reboot.txt",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2161/MFG_V2M-MPS2-0318C.jpg"
    },
    "ARM_MPS2_M0P": {
        "inherits": [
            "ARM_MPS2_Target"
        ],
        "core": "Cortex-M0+",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "ARM_SSG",
            "MPS2",
            "MPS2_M0P"
        ],
        "macros": [
            "CMSDK_CM0plus"
        ],
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TSC",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "copy_method": "mps2",
        "reset_method": "reboot.txt",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2161/MFG_V2M-MPS2-0318C.jpg"
    },
    "ARM_MPS2_M3": {
        "inherits": [
            "ARM_MPS2_Target"
        ],
        "core": "Cortex-M3",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "ARM_SSG",
            "MPS2",
            "MPS2_M3"
        ],
        "macros": [
            "CMSDK_CM3"
        ],
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TSC",
            "MPU",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "copy_method": "mps2",
        "reset_method": "reboot.txt",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2161/MFG_V2M-MPS2-0318C.jpg"
    },
    "ARM_MPS2_M4": {
        "inherits": [
            "ARM_MPS2_Target"
        ],
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "ARM_SSG",
            "MPS2",
            "MPS2_M4"
        ],
        "macros": [
            "CMSDK_CM4"
        ],
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TSC",
            "MPU",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "copy_method": "mps2",
        "reset_method": "reboot.txt",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2161/MFG_V2M-MPS2-0318C.jpg"
    },
    "ARM_MPS2_M7": {
        "inherits": [
            "ARM_MPS2_Target"
        ],
        "core": "Cortex-M7FD",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "ARM_SSG",
            "MPS2",
            "MPS2_M7"
        ],
        "macros": [
            "CMSDK_CM7"
        ],
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TSC",
            "MPU",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "copy_method": "mps2",
        "reset_method": "reboot.txt",
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2161/MFG_V2M-MPS2-0318C.jpg"
    },
    "ARM_IOTSS_Target": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "I2C",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SPI",
            "SPISLAVE",
            "TSC",
            "MPU"
        ]
    },
    "ARM_CM3DS_MPS2": { // AKA Cortex-M3 Design Start (CM3DS) on MPS2 Board
        "inherits": [
            "ARM_IOTSS_Target"
        ],
        "core": "Cortex-M3",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "components_add": [
            "SMSC9220"
        ],
        "extra_labels": [
            "ARM_SSG",
            "CM3DS_MPS2"
        ],
        "OUTPUT_EXT": "elf",
        "macros": [
            "CMSDK_CM3DS"
        ],
        "device_has": [
            "ANALOGIN",
            "EMAC",
            "FLASH",
            "I2C",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "RTC",
            "SERIAL",
            "SLEEP",
            "SPI",
            "TRNG",
            "USTICKER",
            "MPU"
        ],
        "release_versions": [
            "5"
        ],
        "copy_method": "mps2",
        "reset_method": "reboot.txt",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "detect_code": [
            "5004"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2161/MFG_V2M-MPS2-0318C.jpg"
    },
    "ARM_MUSCA_B1": {
        "inherits": [
            "PSA_V8_M"
        ],
        "default_toolchain": "ARMC6",
        "features_add": [
            "EXPERIMENTAL_API"
        ],
        "forced_reset_timeout": 20,
        "release_versions": [
            "5"
        ],
        "core": "Cortex-M33-NS",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has_add": [
            "INTERRUPTIN",
            "I2C",
            "I2CSLAVE",
            "LPTICKER",
            "SERIAL",
            "SLEEP",
            "USTICKER"
        ],
        "macros_add": [
            "__STARTUP_CLEAR_BSS",
            "MBED_FAULT_HANDLER_DISABLED",
            "CMSIS_NVIC_VIRTUAL",
            "LPTICKER_DELAY_TICKS=3",
            "MBED_MPU_CUSTOM",
            "BL2",
            "MCUBOOT_IMAGE_NUMBER=2"
        ],
        "extra_labels_add": [
            "ARM_SSG",
            "MUSCA_B1"
        ],
        "post_binary_hook": {
            "function": "ArmMuscaB1Code.binary_hook"
        },
        "secure_image_filename": "tfm_s.bin",
        "tfm_target_name": "arm/musca_b1/sse_200",
        "tfm_bootloader_supported": true,
        "tfm_default_toolchain": "ARMCLANG",
        "tfm_supported_toolchains": [
            "ARMCLANG",
            "GNUARM"
        ],
        "tfm_delivery_dir": "TARGET_ARM_SSG/TARGET_MUSCA_B1",
        "detect_code": [
            "5007"
        ],
        "OUTPUT_EXT": "bin",
        "image_url": "https://www.psacertified.org/app/uploads/2019/01/musca-b1-600x0-c-default.jpg"
    },
    "ARM_MUSCA_S1": {
        "inherits": [
            "PSA_V8_M"
        ],
        "default_toolchain": "ARMC6",
        "features_add": [
            "EXPERIMENTAL_API"
        ],
        "forced_reset_timeout": 20,
        "release_versions": [
            "5"
        ],
        "core": "Cortex-M33-NS",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has_add": [
            "INTERRUPTIN",
            "I2C",
            "I2CSLAVE",
            "LPTICKER",
            "SERIAL",
            "SLEEP",
            "USTICKER"
        ],
        "device_has_remove": [
            "TRNG"
        ],
        "macros_add": [
            "__STARTUP_CLEAR_BSS",
            "MBED_FAULT_HANDLER_DISABLED",
            "CMSIS_NVIC_VIRTUAL",
            "LPTICKER_DELAY_TICKS=3",
            "MBED_MPU_CUSTOM",
            "BL2",
            "MCUBOOT_IMAGE_NUMBER=2"
        ],
        "extra_labels_add": [
            "ARM_SSG",
            "MUSCA_S1"
        ],
        "post_binary_hook": {
            "function": "ArmMuscaS1Code.binary_hook"
        },
        "secure_image_filename": "tfm_s.bin",
        "tfm_target_name": "arm/musca_s1",
        "tfm_bootloader_supported": true,
        "tfm_default_toolchain": "ARMCLANG",
        "tfm_supported_toolchains": [
            "ARMCLANG",
            "GNUARM"
        ],
        "tfm_delivery_dir": "TARGET_ARM_SSG/TARGET_MUSCA_S1",
        "detect_code": [
            "5009"
        ],
        "OUTPUT_EXT": "bin",
        "image_url": "https://os.mbed.com/media/cache/platforms/Musca-S1_Rev_B_Board-1_transpant.png.250x250_q85.png"
    },

    // Renesas RZ Targets ----------------------------------------------------------------------------------------------
    "RZ_A1XX": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "core": "Cortex-A9",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "extra_labels": [
            "RENESAS",
            "RZ_A1XX"
        ],
        "device_has": [
            "SLEEP",
            "USTICKER",
            "RTC",
            "ANALOGIN",
            "CAN",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH"
        ],
        "program_cycle_s": 2,
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "is_mcu_family_target": true
    },
    "RZ_A1H": { // AKA GR-PEACH
        "inherits": [
            "RZ_A1XX"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "RZA1H",
            "MBRZA1H",
            "RENESAS_EMAC"
        ],
        "components_add": [
            "SD",
        ],
        "device_has_add": [
            "USBDEVICE",
            "EMAC",
            "FLASH",
            "LPTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "R7S72100",
        "bootloader_supported": true,
        // 8MB serial flash on the board
        "memory_banks": {
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x800000, // 8MiB
                "start": 0x18000000,
                "startup": true
            }
        },
        "sectors": [
            [
                402653184,
                4096
            ]
        ],
        "detect_code": [
            "5500"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/GR-PEACH_C_trans.png.250x250_q85.png"
    },
    "GR_LYCHEE": {
        "inherits": [
            "RZ_A1XX"
        ],
        "supported_form_factors": [
            "ARDUINO"
        ],
        "extra_labels_add": [
            "RZA1UL",
            "MBRZA1LU"
        ],
        "components_add": [
            "SD",
        ],
        "device_has_add": [
            "USBDEVICE",
            "TRNG",
            "FLASH",
            "LPTICKER"
        ],
        "device_has_remove": [
            "EMAC"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "R7S72103",
        "bootloader_supported": true,
        "memory_banks": {
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x800000, // 8MiB
                "start": 0x18000000,
                "startup": true
            }
        },
        "sectors": [
            [
                402653184,
                4096
            ]
        ],
        "overrides": {
            "network-default-interface-type": null
        },
        "detect_code": [
            "5501"
        ],
        "image_url": "https://www.cnx-software.com/wp-content/uploads/2017/06/GR-LYCHEE.jpg"
    },
    "RZ_A2XX": {
        "inherits": ["Target"],
        "public": false,
        "core": "Cortex-A9",
        "supported_toolchains": ["GCC_ARM"],
        "extra_labels": ["RENESAS", "RZ_A2XX"],
        "device_has": [
            "SLEEP",
            "USTICKER",
            "RTC",
            "ANALOGIN",
            "CAN",
            "EMAC",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "USBDEVICE"
        ],
        "program_cycle_s": 2,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "is_mcu_family_target": true
    },
    "GR_MANGO": {
        "inherits": ["RZ_A2XX"],
        "extra_labels_add": ["RZA2M", "MBRZA2M", "RENESAS_EMAC"],
        "device_has_add": ["EMAC","FLASH"],
        "release_versions": ["5"],
        "device_name": "R7S921053",
        "bootloader_supported": true,

        // 16MiB OSPI flash on PCB
        "memory_banks": {
            "EXT_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "size": 0x1000000, // 16MiB
                "start": 0x50000000,
                "startup": true
            }
        },
        "sectors": [[1342177280,4096]],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "detect_code": [
            "5502"
        ],
        "image_url": "https://www.renesas.com/sites/default/files/media/images/gr-mango-top.png"
    },

    // Maxim (now Analog Devices) Targets ------------------------------------------------------------------------------
    "MCU_MAX32620": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "macros": [
            "__SYSTEM_HFX=96000000",
            "TARGET=MAX32620",
            "TARGET_REV=0x4332",
            "OPEN_DRAIN_LEDS"
        ],
        "extra_labels": [
            "Maxim",
            "MAX32620C"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "ANALOGIN",
            "FLASH",
            "I2C",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "USTICKER"
        ],
        "device_name": "MAX32620",
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "public": false,
        "is_mcu_family_target": true
    },
    "MAX32620FTHR": {
        "inherits": [
            "MCU_MAX32620"
        ],
        "detect_code": [
            "0418"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/895/MFG_MAX32620FTHR.jpg"
    },
    "SDT32620B": {
        "inherits": [
            "MCU_MAX32620"
        ],
        "detect_code": [
            "3101"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/SDT32620B_size.png.250x250_q85.png"
    },
    "MAX32625_BASE": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "macros": [
            "TARGET=MAX32625",
            "TARGET_REV=0x4132",
            "OPEN_DRAIN_LEDS"
        ],
        "extra_labels": [
            "Maxim",
            "MAX32625"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "ANALOGIN",
            "I2C",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RTC",
            "SERIAL",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "USTICKER"
        ],
        "device_name": "MAX32625",
        "public": false,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "is_mcu_family_target": true
    },
    "MAX32625MBED": {
        "inherits": [
            "MAX32625_BASE"
        ],
        "detect_code": [
            "0415"
        ],
        "image_url": "https://www.analog.com/en/_/media/analog/en/evaluation-board-maxim-images/max32625mbed.png?rev=cce27b18ca564ddbb28163b4612b7592&h=500&hash=5F057314B14CBC46F7A8EEC655632DCE"
    },
    "SDT32625B": {
        "inherits": [
            "MAX32625_BASE"
        ],
        "detect_code": [
            "3102"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/SDT32625B_size_ZxsNDPt.png.250x250_q85.png"
    },
    "MAX32625PICO": {
        "inherits": [
            "MAX32625_BASE"
        ],
        "bootloader_supported": true,

        // Reserve the first 64k of flash for the bootloader
        "memory_bank_config": {
            "IROM1": {
                "start": 0x00010000,
                "size": 0x00070000
            }
        },

        "detect_code": [
            "0444"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2592/MAX32625PICO%23.jpg"
    },
    "MAX32630FTHR": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "macros": [
            "__SYSTEM_HFX=96000000",
            "TARGET=MAX32630",
            "TARGET_REV=0x4132",
            "BLE_HCI_UART",
            "OPEN_DRAIN_LEDS",
            "MBED_TICKLESS"
        ],
        "extra_labels": [
            "Maxim",
            "MAX32630"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "components_add": [
            "SD"
        ],
        "device_has": [
            "ANALOGIN",
            "I2C",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "USTICKER",
            "MPU",
            "SLEEP",
            "USBDEVICE"
        ],
        "detect_code": [
            "0409"
        ],
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "image_url": "https://www.analog.com/en/_/media/analog/en/evaluation-board-maxim-images/max32630fthr.png?rev=38a579856b25448c9369e8f1931bef09&h=270&hash=55F09D9FF86FDDA9FDAE27520485245E"
    },
    "MAX32660": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "macros": [
            "__SYSTEM_HFX=96000000",
            "TARGET=MAX32660",
            "TARGET_REV=0x4131",
            "MBED_MPU_CUSTOM"
        ],
        "extra_labels": [
            "Maxim",
            "MAX32660"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "SERIAL",
            "SERIAL_FC",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "USTICKER",
            "LPTICKER",
            "INTERRUPTIN",
            "SPI",
            "I2C",
            "RTC",
            "SLEEP",
            "WATCHDOG",
            "FLASH"
        ],
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        }
    },
    "MAX32660EVSYS": {
        "inherits": [
            "MAX32660"
        ],
        "macros_add": [
            "OPEN_DRAIN_LEDS"
        ],
        "device_has_remove": [
            "LPTICKER"
        ],
        "extra_labels_add": [
            "MAX32660EVSYS"
        ],
        "config": {
            "stdio_uart": {
                "help": "default STDIO port is defined in PeripheralNames.h file, but it can be overridden, default UART_1",
                "value": null
            },
            "stdio_uart_tx": {
                "help": "default TX STDIO pins is defined in PinNames.h file, but it can be overridden, default P0_10",
                "value": null
            },
            "stdio_uart_rx": {
                "help": "default RX STDIO pins is defined in PinNames.h file, but it can be overridden, default P0_11",
                "value": null
            }
        },
        "detect_code": [
            "0421"
        ],
        "image_url": "https://www.analog.com/en/_/media/analog/en/evaluation-board-maxim-images/max32660evsys.png?rev=1b007b133cb349f692e1695e7e55de01&h=270&hash=81B37460C25087CDD9A37B6B87FCB0A5"
    },
    "MAX32670": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "macros": [
            "TARGET=MAX32670",
            "TARGET_REV=0x4131",
            "MBED_MPU_CUSTOM"
        ],
        "extra_labels": [
            "Maxim",
            "MAX32670"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "SERIAL",
            "SERIAL_FC",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "USTICKER",
            "LPTICKER",
            "INTERRUPTIN",
            "SPI",
            "I2C",
            "RTC",
            "SLEEP",
            "WATCHDOG",
            "FLASH"
        ],
        "config": {
            "stdio_uart": {
                "help": "default STDIO port is defined in PeripheralNames.h file, but it can be overridden, default UART_0",
                "value": null
            },
            "stdio_uart_tx": {
                "help": "default TX STDIO pins is defined in PinNames.h file, but it can be overridden, default P0_9",
                "value": null
            },
            "stdio_uart_rx": {
                "help": "default RX STDIO pins is defined in PinNames.h file, but it can be overridden, default P0_8",
                "value": null
            },
            "us_ticker_timer": {
                "help": "Select which timer (0-3) to use for us_ticker.c",
                "value": 1
            },
            "lp_ticker_timer": {
                "help": "Select which low power timer (0-1) to use for lp_ticker.c",
                "value": 1
            }
        },
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "device_name": "MAX32670"
    },
    "MAX32670EVKIT": {
        "inherits": [
            "MAX32670"
        ],
        "macros_add": [
            "OPEN_DRAIN_LEDS"
        ],
        "extra_labels_add": [
            "MAX32670EVKIT"
        ],
        "detect_code": [
            "0424"
        ],
        "image_url": "https://os.mbed.com/media/uploads/sadik_maxim/max32670evkit_daplink_fw_update.png"
    },
    "XDOT_MAX32670": {
        "inherits": [
            "MAX32670"
        ],
        "bootloader_supported": true,
        "detect_code": [
            "0351"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/xDot_Developer_Kit_with_xdot.png.250x250_q85.png"
    },

    // SiLabs EFM32 Targets---------------------------------------------------------------------------------------------
    "EFM32": {
        "inherits": [
            "Target"
        ],
        "extra_labels": [
            "Silicon_Labs",
            "EFM32"
        ],
        "macros": [
            "MBEDTLS_CONFIG_HW_SUPPORT",
            "MBED_TICKLESS",
            "EM_MSC_RUN_FROM_FLASH"
        ],
        "public": false
    },
    "MCU_EFM32_GECKO": { // Family target for EFM32 Gecko MCUs
        "inherits": [
            "EFM32"
        ],
        "device_has": [
            "ANALOGIN",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "RTC",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "USTICKER",
            "TRNG",
            "FLASH",
            "MPU",
            "WATCHDOG"
        ],
        "config": {
            "hf_clock_src": {
                "help": "Value: HFXO for external crystal, HFRCO for internal RC oscillator",
                "value": "HFXO",
                "macro_name": "CORE_CLOCK_SOURCE"
            },
            "hfxo_clock_freq": {
                "help": "Value: External crystal frequency in hertz",
                "value": "48000000",
                "macro_name": "HFXO_FREQUENCY"
            },
            "lf_clock_src": {
                "help": "Value: LFXO for external crystal, LFRCO for internal RC oscillator, ULFRCO for internal 1KHz RC oscillator",
                "value": "LFXO",
                "macro_name": "LOW_ENERGY_CLOCK_SOURCE"
            },
            "lfxo_clock_freq": {
                "help": "Value: External crystal frequency in hertz",
                "value": "32768",
                "macro_name": "LFXO_FREQUENCY"
            },
            "hfrco_clock_freq": {
                "help": "Value: Frequency in hertz, must correspond to setting of hfrco_band_select",
                "value": "32000000",
                "macro_name": "HFRCO_FREQUENCY"
            }
        },
        "bootloader_supported": true,
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "public": false,
        "is_mcu_family_target": true
    },
    "EFM32GG990F1024": {
        "inherits": [
            "MCU_EFM32_GECKO"
        ],
        "extra_labels_add": [
            "EFM32GG",
            "1024K",
            "SL_AES"
        ],
        "device_has_add": [
            "ANALOGOUT"
        ],
        "config": {
            "hfrco_band_select": {
                "help": "Value: One of _CMU_HFRCOCTRL_BAND_28MHZ, _CMU_HFRCOCTRL_BAND_21MHZ, _CMU_HFRCOCTRL_BAND_14MHZ, _CMU_HFRCOCTRL_BAND_11MHZ, _CMU_HFRCOCTRL_BAND_7MHZ, _CMU_HFRCOCTRL_BAND_1MHZ. Be sure to set hfrco_clock_freq accordingly!",
                "value": "_CMU_HFRCOCTRL_BAND_21MHZ",
                "macro_name": "HFRCO_FREQUENCY_ENUM"
            }
        },
        "core": "Cortex-M3",
        "macros_add": [
            "EFM32GG990F1024"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "EFM32GG990F1024",
        "public": false,
        "supported_application_profiles": [
            "full", "bare-metal"
        ]
    },
    "EFM32GG_STK3700": { // AKA EFM32 Giant Gecko
        "inherits": [
            "EFM32GG990F1024"
        ],
        "progen": {
            "target": "efm32gg-stk"
        },
        "forced_reset_timeout": 2,
        "config": {
            "board_controller_enable": {
                "help": "Pin to pull high for enabling the USB serial port",
                "value": "PF7",
                "macro_name": "EFM_BC_EN"
            }
        },
        "detect_code": [
            "2015"
        ],
        "overrides": {
            "hfrco_clock_freq": "21000000"
        },
        "image_url": "https://www.silabs.com/content/dam/siliconlabs/images/products/microcontrollers/32-bit_mcus/giant_gecko/giant-gecko-starter-kit.jpg"
    },
    "EFR32MG12P332F1024GL125": {
        "inherits": [
            "MCU_EFM32_GECKO"
        ],
        "extra_labels_add": [
            "EFR32MG12",
            "EFR32_12",
            "1024K",
            "SL_RAIL",
            "SL_CRYPTO"
        ],
        "device_has_add": [
            "802_15_4_PHY",
            "CRC"
        ],
        "config": {
            "hfrco_band_select": {
                "help": "Value: One of cmuHFRCOFreq_1M0Hz, cmuHFRCOFreq_2M0Hz, cmuHFRCOFreq_4M0Hz, cmuHFRCOFreq_7M0Hz, cmuHFRCOFreq_13M0Hz, cmuHFRCOFreq_16M0Hz, cmuHFRCOFreq_19M0Hz, cmuHFRCOFreq_26M0Hz, cmuHFRCOFreq_32M0Hz, cmuHFRCOFreq_38M0Hz. Be sure to set hfrco_clock_freq accordingly!",
                "value": "cmuHFRCOFreq_32M0Hz",
                "macro_name": "HFRCO_FREQUENCY_ENUM"
            }
        },
        "core": "Cortex-M4F",
        "macros_add": [
            "EFR32MG12P332F1024GL125"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "EFR32MG12P332F1024GL125",
        "public": false,
        "supported_application_profiles": [
            "full", "bare-metal"
        ]
    },
    "TB_SENSE_12": { // AKA Thunderboard Sense 2
        "inherits": [
            "EFR32MG12P332F1024GL125"
        ],
        "forced_reset_timeout": 5,
        "overrides": {
            "network-default-interface-type": "MESH",
            "hfxo_clock_freq": "38400000",
        },
        "detect_code": [
            "2041"
        ],
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/2145/MFG_SLTB004A.jpg"
    },
    "EFM32GG11B820F2048GL192": {
        "inherits": [
            "MCU_EFM32_GECKO"
        ],
        "extra_labels_add": [
            "EFM32GG11",
            "2048K",
            "SL_CRYPTO"
        ],
        "device_has_add": [
            "CAN",
            "CRC",
            "EMAC",
            "ITM"
        ],
        "config": {
            "hfrco_band_select": {
                "help": "Value: One of cmuHFRCOFreq_1M0Hz, cmuHFRCOFreq_2M0Hz, cmuHFRCOFreq_4M0Hz, cmuHFRCOFreq_7M0Hz, cmuHFRCOFreq_13M0Hz, cmuHFRCOFreq_16M0Hz, cmuHFRCOFreq_19M0Hz, cmuHFRCOFreq_26M0Hz, cmuHFRCOFreq_32M0Hz, cmuHFRCOFreq_38M0Hz. Be sure to set hfrco_clock_freq accordingly!",
                "value": "cmuHFRCOFreq_32M0Hz",
                "macro_name": "HFRCO_FREQUENCY_ENUM"
            }
        },
        "core": "Cortex-M4F",
        "macros_add": [
            "EFM32GG11B820F2048GL192"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "EFM32GG11B820F2048GL192",
        "public": false,
        "supported_application_profiles": [
            "full", "bare-metal"
        ]
    },
    "EFM32GG11_STK3701": {
        "inherits": [
            "EFM32GG11B820F2048GL192"
        ],
        "forced_reset_timeout": 5,
        "config": {
            "board_controller_enable": {
                "help": "Pin to pull high for enabling the USB serial port",
                "value": "PE1",
                "macro_name": "EFM_BC_EN"
            },
            "qspi_flash_enable": {
                "help": "Pin to pull high for enabling the on-board QSPI flash",
                "value": "PG13",
                "macro_name": "QSPI_FLASH_EN"
            }
        },
        "overrides": {
            "network-default-interface-type": "ETHERNET",
            "hfxo_clock_freq": "50000000"
        },
        "detect_code": [
            "2042"
        ],
        "image_url": "https://www.silabs.com/content/dam/siliconlabs/images/products/microcontrollers/32-bit_mcus/giant-gecko-gg11/efr32gg11-starter-kit.jpg"
    },

    // Nordic NRF52832 Targets------------------------------------------------------------------------------------------
    "MCU_NRF52832": {
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "macros": [
            "BOARD_PCA10040",
            "NRF52",
            "TARGET_NRF52832",
            "CMSIS_VECTAB_VIRTUAL",
            "CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"",
            "MBED_TICKLESS",
            "MBED_MPU_CUSTOM",
            "SWI_DISABLE0",
            "SYSTICK_CLK_OFF_DURING_SLEEP" // see mbed_sleep() in mbed_power_mgmt.h
        ],
        "features": [
            "BLE"
        ],
        "device_has": [
            "ANALOGIN",
            "FLASH",
            "I2C",
            "I2C_ASYNCH",
            "I2CSLAVE",
            "INTERRUPTIN",
            "ITM",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPI_ASYNCH",
            "TRNG",
            "USTICKER"
        ],
        "extra_labels": [
            "NORDIC",
            "NRF5x",
            "NRF52",
            "SDK_15_0",
            "CORDIO",
            "CORDIO_LL",
            "SOFTDEVICE_NONE",
            "NORDIC_CORDIO"
        ],
        "config": {
            "lf_clock_src": {
                "macro_name": "MBED_CONF_NORDIC_NRF_LF_CLOCK_SRC",
                "help": "Select Low Frequency clock source. Options: NRF_LF_SRC_XTAL, NRF_LF_SRC_SYNTH, and NRF_LF_SRC_RC",
                "value": "NRF_LF_SRC_XTAL"
            },
            "lf_clock_rc_calib_timer_interval": {
                "macro_name": "MBED_CONF_NORDIC_NRF_LF_CLOCK_CALIB_TIMER_INTERVAL",
                "value": 16
            },
            "lf_clock_rc_calib_mode_config": {
                "macro_name": "MBED_CONF_NORDIC_NRF_LF_CLOCK_CALIB_MODE_CONFIG",
                "value": 0
            },
            "uart_0_fifo_size": {
                "help": "UART0 FIFO buffer. FIFO buffer is filled from DMA buffer.",
                "value": 32
            },
            "uart_1_fifo_size": {
                "help": "UART1 FIFO buffer. FIFO buffer is filled from DMA buffer.",
                "value": 32
            }
        },
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "public": false,
        "detect_code": [
            "1101"
        ],
        "program_cycle_s": 6,
        "bootloader_supported": true,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "is_mcu_family_target": true
    },
    "NRF52_DK": {
        "supported_form_factors": [
            "ARDUINO"
        ],
        "inherits": [
            "MCU_NRF52832"
        ],
        "release_versions": [
            "5"
        ],
        "device_name": "nRF52832_xxAA",
        "device_has_remove": [
            "ITM"
        ],
        "macros_add": [
            "WSF_MAX_HANDLERS=10",
            "CONFIG_GPIO_AS_PINRESET",
            "NRF52_PAN_12",
            "NRF52_PAN_15",
            "NRF52_PAN_20",
            "NRF52_PAN_30",
            "NRF52_PAN_31",
            "NRF52_PAN_36",
            "NRF52_PAN_51",
            "NRF52_PAN_53",
            "NRF52_PAN_54",
            "NRF52_PAN_55",
            "NRF52_PAN_58",
            "NRF52_PAN_62",
            "NRF52_PAN_63",
            "NRF52_PAN_64"
        ],
        "detect_code": [
            "1101"
        ],
        "image_url": "https://www.nordicsemi.com/-/media/Images/Products/DevKits/nRF52-Series/nRF52-DK/nRF52-DK-render_prod-page.png?h=551&iar=0&mw=350&w=350&hash=DB87685680509C17DF15906A7DC9A289"
    },
    "SDT52832B": {
        "inherits": [
            "MCU_NRF52832"
        ],
        "release_versions": [
            "5"
        ],
        "detect_code": [
            "3104"
        ],
        "device_name": "nRF52832_xxAA",
        "image_url": "https://os.mbed.com/media/cache/platforms/SDT52832B_size.png.250x250_q85.png"
    },
    "ARDUINO_NICLA_SENSE_ME": {
        "inherits": ["MCU_NRF52832"],
        "components_add": [
            "SPIF"
        ],
        "device_name": "nRF52832_xxAA",
        "macros_add": [
            "CONFIG_GPIO_AS_PINRESET",
            "CONFIG_NFCT_PINS_AS_GPIOS",
            "NRF52_PAN_12",
            "NRF52_PAN_15",
            "NRF52_PAN_20",
            "NRF52_PAN_30",
            "NRF52_PAN_31",
            "NRF52_PAN_36",
            "NRF52_PAN_51",
            "NRF52_PAN_53",
            "NRF52_PAN_54",
            "NRF52_PAN_55",
            "NRF52_PAN_58",
            "NRF52_PAN_62",
            "NRF52_PAN_63",
            "NRF52_PAN_64"
        ],
        "image_url": "https://store-usa.arduino.cc/cdn/shop/products/ABX00050_03.front_1000x750.jpg?v=1631089821"
    },

    // Nordic NRF52840 Targets------------------------------------------------------------------------------------------
    "MCU_NRF52840": {
        "inherits": [
            "Target"
        ],
        "components_add": [
            "QSPIF",
        ],
        "core": "Cortex-M4F",
        "macros": [
            "BOARD_PCA10056",
            "NRF52840_XXAA",
            "TARGET_NRF52840",
            "CMSIS_VECTAB_VIRTUAL",
            "CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"",
            "MBED_TICKLESS",
            "MBEDTLS_CONFIG_HW_SUPPORT",
            "WSF_MAX_HANDLERS=10",
            "MBED_MPU_CUSTOM",
            "SWI_DISABLE0",
            "NRF52_PAN_20",
            "SYSTICK_CLK_OFF_DURING_SLEEP" // see mbed_sleep() in mbed_power_mgmt.h
        ],
        "features": [
            "CRYPTOCELL310",
            "BLE"
        ],
        "device_has": [
            "ANALOGIN",
            "FLASH",
            "I2C",
            "I2C_ASYNCH",
            "I2CSLAVE",
            "INTERRUPTIN",
            "ITM",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPI_ASYNCH",
            "TRNG",
            "USTICKER",
            "QSPI",
            "USBDEVICE"
        ],
        "extra_labels": [
            "NORDIC",
            "NRF5x",
            "NRF52",
            "SDK_15_0",
            "CORDIO",
            "CORDIO_LL",
            "SOFTDEVICE_NONE",
            "NORDIC_CORDIO"
        ],
        "config": {
            "lf_clock_src": {
                "macro_name": "MBED_CONF_NORDIC_NRF_LF_CLOCK_SRC",
                "help": "Select Low Frequency clock source. Options: NRF_LF_SRC_XTAL, NRF_LF_SRC_SYNTH, and NRF_LF_SRC_RC",
                "value": "NRF_LF_SRC_XTAL"
            },
            "lf_clock_rc_calib_timer_interval": {
                "macro_name": "MBED_CONF_NORDIC_NRF_LF_CLOCK_CALIB_TIMER_INTERVAL",
                "value": 16
            },
            "lf_clock_rc_calib_mode_config": {
                "macro_name": "MBED_CONF_NORDIC_NRF_LF_CLOCK_CALIB_MODE_CONFIG",
                "value": 0
            },
            "uart_0_fifo_size": {
                "help": "UART0 FIFO buffer. FIFO buffer is filled from DMA buffer.",
                "value": 32
            },
            "uart_1_fifo_size": {
                "help": "UART1 FIFO buffer. FIFO buffer is filled from DMA buffer.",
                "value": 32
            },
            "qspif_sfdp_data_len": {
                "help": "length of Flash SFDP DATA",
                "value": 128,
                "macro_name": "QSPIF_SFDP_DATA_LEN"
            }
        },
        "overrides": {
            "mpu-rom-end": "0x1fffffff"
        },
        "release_versions": [
            "5"
        ],
        "device_name": "nRF52840_xxAA",
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "public": false,
        "detect_code": [
            "1101"
        ],
        "program_cycle_s": 6,
        "bootloader_supported": true,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },

        // This is the target for all boards using NRF52840 chips
        "is_mcu_family_target": true
    },
    "NRF52840_DK": {
        "supported_form_factors": [
            "ARDUINO"
        ],
        "inherits": [
            "MCU_NRF52840"
        ],
        "detect_code": [
            "1102"
        ],
        "macros_add": [
            "CONFIG_GPIO_AS_PINRESET"
        ],
        "config": {
            "enable-objects-extensions": {
                "help": "Enable inclusion of objects_extensions.h",
                "value": false
            }
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://www.nordicsemi.com/-/media/Images/Products/DevKits/nRF52-Series/nRF52840-DK/nRF52840-DK/nRF52840-DK-prod-page.png?h=750&iar=0&mw=350&w=350&hash=3DB140F6AE70CAE159FD911D8E6E9109"
    },
    "ARDUINO_NANO33BLE": {
        "inherits": [
            "MCU_NRF52840"
        ],
        "components_remove": [
            "QSPIF"
        ],
        "device_has_remove": [
            "QSPI",
            "ITM"
        ],
        "macros_add": [
            "CONFIG_GPIO_AS_PINRESET",

            // Make room for the bootloader
            "MBED_APP_START=0x10000",
            "MBED_APP_SIZE=0xf0000"
        ],
        "overrides": {
            "console-usb": true,
            "console-uart": false
        },
        "OUTPUT_EXT": "bin",
        "image_url": "https://m.media-amazon.com/images/I/61bGcUKwSzL.jpg"
    },
    "ARDUINO_NANO33BLE_SWD": {
        "inherits": [
            "ARDUINO_NANO33BLE"
        ],

        // for SWD we default to UART console
        "overrides": {
            "console-usb": false,
            "console-uart": true
        },

        // For SWD we don't want to leave space for the bootloader
        "macros_remove": [
            "MBED_APP_START=0x10000",
            "MBED_APP_SIZE=0xf0000"
        ]
    },
    "EP_AGORA": { // AKA Embedded Planet Agora (w/ dev kit for flashing and debugging) https://www.embeddedplanet.com/agora/
        "inherits": [
            "MCU_NRF52840"
        ],
        "supported_form_factors": [],
        "macros_add": [
            "CONFIG_GPIO_AS_PINRESET"
        ],
        "detect_code": [
            "2600"
        ],
        "config": {
            "enable-objects-extensions": {
                "help": "Enable inclusion of objects_extensions.h",
                "value": false
            }
        },
        "components_add": [
            "TELIT_ME910"
        ],
        "image_url": "https://www.embeddedplanet.com/wp-content/uploads/2019/02/EPM2M-AG-CELL-page.jpg"
    },
    "EP_ATLAS": { // AKA Embedded Planet Atlas board. https://www.embeddedplanet.com/chronos/#atlas
        "inherits": ["MCU_NRF52840"],
        "device_name": "nRF52840_xxAA",
        "supported_form_factors": [],
        "config": {
            "modem_is_on_board": {
                "help": "Value: Tells the build system that the modem is on-board as oppose to a plug-in shield/module.",
                "value": 1,
                "macro_name": "MODEM_ON_BOARD"
            },
            "modem_data_connection_type": {
                "help": "Value: Defines how an on-board modem is wired up to the MCU, e.g., data connection can be a UART or USB and so forth.",
                "value": 1,
                "macro_name": "MODEM_ON_BOARD_UART"
            }
        },
        "components_add": ["SPIF", "TELIT_ME310"],
        "components_remove": ["QSPIF"],
        "release_versions": ["5"],
        "macros_add": [
            "CONFIG_GPIO_AS_PINRESET"
        ],
        "image_url": "https://www.embeddedplanet.com/wp-content/uploads/2021/04/Atlas_4-768x719.png"
    },

    // Nuvoton Targets -------------------------------------------------------------------------------------------------
    "NUMAKER_PFM_NUC472": {
        "core": "Cortex-M4F",
        "default_toolchain": "ARM",
        "extra_labels": [
            "NUVOTON",
            "NUC472",
            "FLASH_CMSIS_ALGO",
            "NUVOTON_EMAC"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_IRC10K",
                "value": "GPIO_DBCTL_DBCLKSRC_IRC10K"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            },
            "ebi-enable": {
                "help": "Enable EBI for EBI RAM",
                "options": [false, true]
            },
        },
        "inherits": [
            "Target"
        ],
        "macros_add": [
            "MBEDTLS_CONFIG_HW_SUPPORT",
            "LPTICKER_DELAY_TICKS=4"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "CAN",
            "FLASH",
            "EMAC",
            "MPU",
            "WATCHDOG",
            "USBDEVICE"
        ],
        "release_versions": [
            "5"
        ],
        "sectors": [
            [
                0,
                2048
            ]
        ],
        "device_name": "NUC472HI8AE",
        "bootloader_supported": true,
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "network-default-interface-type": "ETHERNET",
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true,
            "ebi-enable": true
        },
        "memory_banks": {
            "EBIRAM1": {
                "access": {
                    "execute": false,
                    "non_secure": false,
                    "non_secure_callable": false,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": true
                },
                "default": true,
                "size": 0x100000,
                "start": 0x60000000,
                "startup": false
            }
        },
        "detect_code": [
            "1302"
        ],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "image_url": "https://os.mbed.com/media/uploads/MACRUM/img_9240.jpg"
    },
    "NUMAKER_PFM_M453": {
        "core": "Cortex-M4F",
        "default_toolchain": "ARM",
        "extra_labels": [
            "NUVOTON",
            "M451",
            "M45xG_M45xE",
            "NUMAKER_PFM_M453",
            "FLASH_CMSIS_ALGO"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_LIRC",
                "value": "GPIO_DBCTL_DBCLKSRC_LIRC"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            }
        },
        "inherits": [
            "Target"
        ],
        "macros_add": [
            "LPTICKER_DELAY_TICKS=4"
        ],
        "progen": {
            "target": "numaker-pfm-m453"
        },
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "CAN",
            "FLASH",
            "MPU",
            "WATCHDOG",
            "RESET_REASON",
            "USBDEVICE"
        ],
        "release_versions": [
            "5"
        ],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "c_lib": "small",
        "supported_application_profiles": [
            "bare-metal"
        ],
        "sectors": [
            [
                0,
                2048
            ]
        ],
        "device_name": "M453VG6AE",
        "bootloader_supported": true,
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true
        },
        "detect_code": [
            "1303"
        ],
        "image_url": "https://os.mbed.com/media/cache/platforms/Nu-mbed_M453_board_square.jpg.250x250_q85.jpg"
    },
    "NUMAKER_PFM_NANO130": {
        "core": "Cortex-M0",
        "default_toolchain": "ARM",
        "extra_labels": [
            "NUVOTON",
            "NANO100",
            "NANO130KE3BN"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCLKSRC_HCLK or GPIO_DBCLKSRC_IRC10K",
                "value": "GPIO_DBCLKSRC_IRC10K"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCLKSEL_1, GPIO_DBCLKSEL_2, GPIO_DBCLKSEL_4, ..., or GPIO_DBCLKSEL_32768",
                "value": "GPIO_DBCLKSEL_16"
            },
            "adc-smplcnt-list": {
                "help": "For ADC, comma separated {pin, value} list to extend sampling time in ADC clocks on per-pin basis. Value must be in the range [0, 15]."
            },
            "clock-pll": {
                "help": "Choose clock source to clock PLL: NU_HXT_PLL or NU_HIRC_PLL",
                "macro_name": "NU_CLOCK_PLL",
                "value": "NU_HIRC_PLL"
            }
        },
        "inherits": [
            "Target"
        ],
        "macros": [
            "CMSIS_VECTAB_VIRTUAL",
            "CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"",
            "MBED_FAULT_HANDLER_DISABLED",
            "LPTICKER_DELAY_TICKS=4"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "WATCHDOG",
            "RESET_REASON",
            "USBDEVICE"
        ],
        "release_versions": [
            "5"
        ],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "c_lib": "small",
        "supported_application_profiles": [
            "bare-metal"
        ],
        "device_name": "NANO130KE3BN",
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true
        },
        "detect_code": [
            "1306"
        ],
        "image_url": "https://www.nuvoton.com/export/sites/nuvoton/images/Microcontrollers/NuMaker-PFM-M487KM.png_576589920.png"
    },
    "MCU_M460": {
        "core": "Cortex-M4F",
        "default_toolchain": "ARM",
        "public": false,
        "extra_labels": [
            "NUVOTON",
            "M460",
            "FLASH_CMSIS_ALGO",
        "NUVOTON_EMAC"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "usb-uart": {
                "help": "Configure USB_UART. USB_UART and USB_UART_TX/USB_UART_RX must be consistent.",
                "value": null
            },
            "usb-uart-tx": {
                "help": "Configure CONSOLE_TX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "usb-uart-rx": {
                "help": "Configure CONSOLE_RX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "stdio-uart": {
                "help": "Configure STDIO_UART. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART defaults to USB_UART.",
                "value": null
            },
            "stdio-uart-tx": {
                "help": "Configure STDIO_UART_TX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_TX defaults to CONSOLE_TX.",
                "value": null
            },
            "stdio-uart-rx": {
                "help": "Configure STDIO_UART_RX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_RX defaults to CONSOLE_RX.",
                "value": null
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_LIRC",
                "value": "GPIO_DBCTL_DBCLKSRC_LIRC"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            },
            "exclude-uno-spi-from-fpga-ci-test-shield-test": {
                "help": "Exclude UNO SPI pins (D8/D9/D10/D11/D12/D13) from FPGA CI Test Shield test for wiring to on-board SPI flash",
                "options": [false, true],
                "value": false
            },
            "hbi-enable": {
                "help": "Enable HBI for HyperRAM",
                "options": [false, true]
            },
            "hbi-mfp-reg-list": {
                "help": "Comma separated multi-function pin register list to enable HBI for HyperRAM"
            },
            "hbi-mfp-reg-msk-list": {
                "help": "Comma separated multi-function pin register mask list to enable HBI for HyperRAM"
            },
            "hbi-mfp-reg-val-list": {
                "help": "Comma separated multi-function pin register value list to enable HBI for HyperRAM"
            },
            "usb-device-hsusbd": {
                "help": "Select high-speed USB device or not",
                "value": 0
            }
        },
        "inherits": [
            "Target"
        ],
        "macros_add": [
            "LPTICKER_DELAY_TICKS=4"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "TRNG",
            "FLASH",
            "MPU",
            "WATCHDOG",
            "RESET_REASON",
            "CAN",
            "EMAC",
            "USBDEVICE"
        ],
        "release_versions": [
            "5"
        ],
        "sectors": [
            [
                0,
                4096
            ]
        ],
        "bootloader_supported": true,
        "overrides": {
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true
        },
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ],
            "iar": [
                "std"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "NUMAKER_IOT_M467": {
        "inherits": [
            "MCU_M460"
        ],
        "macros_add": [
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "1313"
        ],
        "device_name": "M467HJHAE",
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "usb-uart": "UART_0",
            "usb-uart-tx": "PB_13",
            "usb-uart-rx": "PB_12",
            "network-default-interface-type": "ETHERNET",
            "exclude-uno-spi-from-fpga-ci-test-shield-test": true,
            "hbi-enable": false,
            "hbi-mfp-reg-list": "0x40000534, 0x4000057C, 0x40000590, 0x40000594",
            "hbi-mfp-reg-msk-list": "0xFFFFFF00, 0xFFFFFFFF, 0xFFFF0000, 0xFFFFFFFF",
            "hbi-mfp-reg-val-list": "0x10101000, 0x10101010, 0x10100000, 0x10101010"
        },
        "memory_banks": {
            "HYPERRAM1": {
                "access": {
                    "execute": false,
                    "non_secure": false,
                    "non_secure_callable": false,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": true
                },
                "default": true,
                "size": 0x800000,
                "start": 0x80000000,
                "startup": false
            }
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/NuMaker-IoT-M467_V1.1_F.png.250x250_q85.png"
    },
    "MCU_M480": {
        "core": "Cortex-M4F",
        "default_toolchain": "ARM",
        "public": false,
        "extra_labels": [
            "NUVOTON",
            "M480",
            "FLASH_CMSIS_ALGO",
            "NUVOTON_EMAC"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "spim-ccm-enable": {
                "help": "Enable SPIM CCM mode to spare 32KiB SRAM for normal use",
                "value": 0
            },
            "usb-uart": {
                "help": "Configure USB_UART. USB_UART and USB_UART_TX/USB_UART_RX must be consistent.",
                "value": null
            },
            "usb-uart-tx": {
                "help": "Configure CONSOLE_TX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "usb-uart-rx": {
                "help": "Configure CONSOLE_RX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "stdio-uart": {
                "help": "Configure STDIO_UART. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART defaults to USB_UART.",
                "value": null
            },
            "stdio-uart-tx": {
                "help": "Configure STDIO_UART_TX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_TX defaults to CONSOLE_TX.",
                "value": null
            },
            "stdio-uart-rx": {
                "help": "Configure STDIO_UART_RX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_RX defaults to CONSOLE_RX.",
                "value": null
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_LIRC",
                "value": "GPIO_DBCTL_DBCLKSRC_LIRC"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            },
            "usb-device-hsusbd": {
                "help": "Select high-speed USB device or not",
                "value": 0
            }
        },
        "inherits": [
            "Target"
        ],
        "macros_add": [
            "LPTICKER_DELAY_TICKS=4"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "FLASH",
            "CAN",
            "EMAC",
            "MPU",
            "WATCHDOG",
            "RESET_REASON",
            "USBDEVICE"
        ],
        "release_versions": [
            "5"
        ],
        "sectors": [
            [
                0,
                4096
            ]
        ],
        "bootloader_supported": true,
        "overrides": {
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true
        },
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "NUMAKER_PFM_M487": {
        "inherits": [
            "MCU_M480"
        ],
        "macros_add": [
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ],
        "device_name": "M487JIDAE",
        "detect_code": [
            "1304"
        ],
        "components_add": [
            "SPIF" // 4MiB SPI flash.

            // Note that this board also has a MicroSD slot, but it is not hooked up to the right pins for SPI
            // operation, so Mbed currently cannot use it.
        ],
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "usb-uart": "UART_0",
            "usb-uart-tx": "PB_13",
            "usb-uart-rx": "PB_12",
            "spim-ccm-enable": 1,
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/NuMaker-PFM-M487.png.250x250_q85.png"
    },
    "NUMAKER_IOT_M487": {
        "inherits": [
            "MCU_M480"
        ],
        "macros_add": [
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ],
        "device_name": "M487JIDAE",
        "detect_code": [
            "1308"
        ],
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "usb-uart": "UART_0",
            "usb-uart-tx": "PB_13",
            "usb-uart-rx": "PB_12",
            "spim-ccm-enable": 1,
            "network-default-interface-type": "WIFI"
        },
        "image_url": "https://direct.nuvoton.com/989/numaker-iot-m487.jpg"
    },
    "MCU_M2354": {
        "inherits": [
            "PSA_V8_M"
        ],
        "public": false,
        "core": "Cortex-M23-NS",
        "default_toolchain": "ARMC6",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "features_add": [
            "EXPERIMENTAL_API"
        ],
        "extra_labels_add": [
            "NUVOTON",
            "M2354"
        ],
        "macros": [
            "CMSIS_NVIC_VIRTUAL",
            "LPTICKER_DELAY_TICKS=4"
        ],
        "is_disk_virtual": true,
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "usb-uart": {
                "help": "Configure USB_UART. USB_UART and USBTX/USBRX must be consistent.",
                "value": null
            },
            "usb-uart-tx": {
                "help": "Configure USBTX. USB_UART and USBTX/USBRX must be consistent.",
                "value": null
            },
            "usb-uart-rx": {
                "help": "Configure USBRX. USB_UART and USBTX/USBRX must be consistent.",
                "value": null
            },
            "stdio-uart": {
                "help": "Configure STDIO_UART. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART defaults to USB_UART.",
                "value": null
            },
            "stdio-uart-tx": {
                "help": "Configure STDIO_UART_TX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_TX defaults to USBTX.",
                "value": null
            },
            "stdio-uart-rx": {
                "help": "Configure STDIO_UART_RX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_RX defaults to USBRX.",
                "value": null
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_LIRC",
                "value": "GPIO_DBCTL_DBCLKSRC_LIRC"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            }
        },
        "overrides": {
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true,
            "mpu-rom-end": "0x1fffffff"
        },
        "device_has_add": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "MPU",
            "USBDEVICE"
        ],
        "release_versions": [
            "5"
        ],
        "sectors": [
            [
                0,
                2048
            ]
        ],
        "bootloader_supported": true,
        "forced_reset_timeout": 5,
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "NU_M2354": { // AKA NUMAKER-M2354
        "inherits": [
            "MCU_M2354"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "1312"
        ],
        "device_name": "M2354KJFAE",
        "overrides": {
            "hxt-present": false,
            "usb-uart": "UART_0",
            "usb-uart-tx": "PA_7",
            "usb-uart-rx": "PA_6"
        },
        "memory_banks": {
            "NS_CODE": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": false,
                "size": 0x8D000,
                "start": 0x10071000,
                "startup": false
            },
            "NS_DATA": {
                "access": {
                    "execute": false,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": true
                },
                "default": false,
                "size": 0x28000,
                "start": 0x30018000,
                "startup": false
            }
        },
        "OUTPUT_EXT": "bin",
        "components_add": [
            "TFM_S_FW"
        ],
        "post_binary_hook": {
            "function": "NuM2354Code.merge_secure"
        },
        "secure_image_filename": "tfm_s.bin",
        "tfm_target_name": "nuvoton/m2354",
        "tfm_bootloader_supported": true,
        "tfm_default_toolchain": "GNUARM",
        "tfm_supported_toolchains": [
            "ARMCLANG",
            "GNUARM"
        ],
        "tfm_delivery_dir": "TARGET_NUVOTON/TARGET_M2354/TARGET_TFM/TARGET_NU_M2354/COMPONENT_TFM_S_FW",
        "image_url": "https://direct.nuvoton.com/1085-large_default/numaker-m2354.jpg"
    },
    "MCU_M251": {
        "core": "Cortex-M23",
        "public": false,
        "trustzone": false,
        "is_disk_virtual": true,
        "default_toolchain": "ARMC6",
        "extra_labels": [
            "NUVOTON",
            "M251",
            "FLASH_CMSIS_ALGO"
        ],
        "macros_add": [
            "LPTICKER_DELAY_TICKS=4"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "usb-uart": {
                "help": "Configure USB_UART. USB_UART and USB_UART_TX/USB_UART_RX must be consistent.",
                "value": null
            },
            "usb-uart-tx": {
                "help": "Configure CONSOLE_TX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "usb-uart-rx": {
                "help": "Configure CONSOLE_RX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "stdio-uart": {
                "help": "Configure STDIO_UART. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART defaults to USB_UART.",
                "value": null
            },
            "stdio-uart-tx": {
                "help": "Configure STDIO_UART_TX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_TX defaults to CONSOLE_TX.",
                "value": null
            },
            "stdio-uart-rx": {
                "help": "Configure STDIO_UART_RX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_RX defaults to CONSOLE_RX.",
                "value": null
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_LIRC",
                "value": "GPIO_DBCTL_DBCLKSRC_LIRC"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            },
            "hxt-enable": {
                "help": "Enable external high-speed crystal (HXT)",
                "value": 0,
                "macro_name": "NU_HXT_ENABLE"
            }
        },
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "mpu-rom-end": "0x1fffffff",
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true
        },
        "inherits": [
            "Target"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "FLASH",
            "MPU",
            "WATCHDOG"
        ],
        "sectors": [
            [
                0,
                512
            ]
        ],
        "bootloader_supported": true,
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "NUMAKER_IOT_M252": { // AKA NuMaker-LoRaD-M252
        "inherits": [
            "MCU_M251"
        ],
        "detect_code": [
            "1309"
        ],
        "release_versions": [
            "2",
            "5"
        ],
        "device_name": "M252KG6AE",
        "overrides": {
            "usb-uart": "UART_0",
            "usb-uart-tx": "PB_13",
            "usb-uart-rx": "PB_12"
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/NuMaker-LoRaD-M252_V1.0_dAwfIUu.jpg.250x250_q85.jpg"
    },
    "MCU_M261": {
        "core": "Cortex-M23",
        "default_toolchain": "ARMC6",
        "public": false,
        "extra_labels": [
            "NUVOTON",
            "M261",
            "FLASH_CMSIS_ALGO"
        ],
        "macros": [
            "LPTICKER_DELAY_TICKS=4"
        ],
        "is_disk_virtual": true,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "config": {
            "hxt-present": {
                "help": "High-speed external crystal oscillator HXT is present",
                "options": [false, true],
                "value": false
            },
            "lxt-present": {
                "help": "Low-speed external crystal oscillator LXT is present",
                "options": [false, true],
                "value": true
            },
            "usb-uart": {
                "help": "Configure USB_UART. USB_UART and USB_UART_TX/USB_UART_RX must be consistent.",
                "value": null
            },
            "usb-uart-tx": {
                "help": "Configure CONSOLE_TX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "usb-uart-rx": {
                "help": "Configure CONSOLE_RX. USB_UART and CONSOLE_TX/CONSOLE_RX must be consistent.",
                "value": null
            },
            "stdio-uart": {
                "help": "Configure STDIO_UART. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART defaults to USB_UART.",
                "value": null
            },
            "stdio-uart-tx": {
                "help": "Configure STDIO_UART_TX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_TX defaults to CONSOLE_TX.",
                "value": null
            },
            "stdio-uart-rx": {
                "help": "Configure STDIO_UART_RX. STDIO_UART and STDIO_UART_TX/STDIO_UART_RX must be consistent. STDIO_UART_RX defaults to CONSOLE_RX.",
                "value": null
            },
            "gpio-irq-debounce-enable": {
                "help": "Enable GPIO IRQ debounce",
                "value": 0
            },
            "gpio-irq-debounce-enable-list": {
                "help": "Comma separated pin list to enable GPIO IRQ debounce",
                "value": "NC"
            },
            "gpio-irq-debounce-clock-source": {
                "help": "Select GPIO IRQ debounce clock source: GPIO_DBCTL_DBCLKSRC_HCLK or GPIO_DBCTL_DBCLKSRC_LIRC",
                "value": "GPIO_DBCTL_DBCLKSRC_LIRC"
            },
            "gpio-irq-debounce-sample-rate": {
                "help": "Select GPIO IRQ debounce sample rate: GPIO_DBCTL_DBCLKSEL_1, GPIO_DBCTL_DBCLKSEL_2, GPIO_DBCTL_DBCLKSEL_4, ..., or GPIO_DBCTL_DBCLKSEL_32768",
                "value": "GPIO_DBCTL_DBCLKSEL_16"
            },
            "eadc-extsmpt-list": {
                "help": "For EADC, comma separated {pin, value} list to extend sampling time in EADC clocks on per-pin basis. Value must be in the range [0, 255]."
            }
        },
        "inherits": [
            "Target"
        ],
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "ANALOGOUT",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "TRNG",
            "FLASH",
            "MPU",
            "WATCHDOG",
            "USBDEVICE",
            "CAN"
        ],
        "release_versions": [
            "5"
        ],
        "sectors": [
            [
                0,
                2048
            ]
        ],
        "bootloader_supported": true,
        "overrides": {
            "hxt-present": false,
            "lxt-present": true,
            "deep-sleep-latency": 1,
            "tickless-from-us-ticker": true
        },
        "forced_reset_timeout": 3,
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "is_mcu_family_target": true
    },
    "NUMAKER_IOT_M263A": {
        "inherits": [
            "MCU_M261"
        ],
        "device_name": "M263KIAAE",
        "detect_code": [
            "1310"
        ],
        "overrides": {
            "usb-uart": "UART_0",
            "usb-uart-tx": "PB_13",
            "usb-uart-rx": "PB_12"
        },
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/3720/MFG_NuMaker-IoT-M263A_V2%28F%29.jpg"
    },

    // ARM Fast Model (FM) Fixed Virtual Platforms (FVPs) --------------------------------------------------------------
    // Unlike the MPS2 targets, which are real targets that can be run on an FPGA, Fast Models are entirely
    // software based.  They simulate an ARM core, the associated peripherals, and hardware connected to the MCU.

    "ARM_FM": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "extra_labels": [
            "ARM_FM"
        ],
        "is_mcu_target_family": true
    },
    "FVP_MPS2": {
        "inherits": [
            "ARM_FM"
        ],
        "features_add": [
            "PSA"
        ],
        "extra_labels_add": [
            "MBED_PSA_SRV"
        ],
        "public": false,
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "OUTPUT_EXT": "elf",
        "device_has": [
            "AACI",
            "ANALOGIN",
            "CLCD",
            "EMAC",
            "FLASH",
            "I2C",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "TSC",
            "TRNG",
            "USTICKER"
        ],
        "release_versions": [
            "5"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "is_mcu_family_target": true
    },
    "FVP_MPS2_M0": {
        "inherits": [
            "FVP_MPS2"
        ],
        "core": "Cortex-M0",
        "macros_add": [
            "CMSDK_CM0"
        ]
    },
    "FVP_MPS2_M0P": {
        "inherits": [
            "FVP_MPS2"
        ],
        "core": "Cortex-M0+",
        "macros_add": [
            "CMSDK_CM0plus"
        ]
    },
    "FVP_MPS2_M3": {
        "inherits": [
            "FVP_MPS2"
        ],
        "core": "Cortex-M3",
        "macros_add": [
            "CMSDK_CM3"
        ],
        "device_has_add": [
            "MPU"
        ]
    },
    "FVP_MPS2_M4": {
        "inherits": [
            "FVP_MPS2"
        ],
        "core": "Cortex-M4F",
        "macros_add": [
            "CMSDK_CM4"
        ],
        "device_has_add": [
            "MPU"
        ]
    },
    "FVP_MPS2_M7": {
        "inherits": [
            "FVP_MPS2"
        ],
        "core": "Cortex-M7FD",
        "macros_add": [
            "CMSDK_CM7"
        ],
        "device_has_add": [
            "MPU"
        ]
    },

    // Cypress (now Infineon) PSOC6 Targets ----------------------------------------------------------------------------
    "MCU_PSOC6": {
        "inherits": [
            "Target"
        ],
        "macros": [
            "MBED_MPU_CUSTOM",
            "MBEDTLS_CONFIG_HW_SUPPORT",
            "LPTICKER_DELAY_TICKS=3",
            "CYBT_WAKE_ACTIVE_LOW=0",
            "CYBT_WAKE_ACTIVE_HIGH=1",

            // These are named like Mbed components, but actually seem to be a definitions
            // used by the Cypress IDE-generated BSP.  We just want to define them all the time.
            "COMPONENT_PSOC6=1",
            "COMPONENT_PSOC6HAL=1",
            "COMPONENT_SOFTFP=1",
            "COMPONENT_RTX=1",
            "COMPONENT_CAT1=1",
            "COMPONENT_CAT1A=1",
        ],
        "default_toolchain": "GCC_ARM",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "core": "Cortex-M4F",
        "OUTPUT_EXT": "hex",
        "device_has_add": [
            "ANALOGIN",
            "ANALOGOUT",
            "CRC",
            "FLASH",
            "I2C",
            "I2C_ASYNCH",
            "I2CSLAVE",
            "INTERRUPTIN",
            "LPTICKER",
            "PORTIN",
            "PORTOUT",
            "PORTINOUT",
            "PWMOUT",
            "QSPI",
            "RESET_REASON",
            "RTC",
            "SERIAL",
            "SERIAL_FC",
            "SERIAL_ASYNCH",
            "SLEEP",
            "SPI",
            "SPI_ASYNCH",
            "SPISLAVE",
            "TRNG",
            "USBDEVICE",
            "USTICKER",
            "WATCHDOG"
        ],
        "release_versions": [
            "5"
        ],
        "extra_labels_add": [
            "Cypress",
            "PSOC6",
            "MXCRYPTO"
        ],
        "public": false,
        "forced_reset_timeout": 5,
        "overrides": {
            "deep-sleep-latency": "CY_CFG_PWR_DEEPSLEEP_LATENCY"
        },
        "is_mcu_family_target": true
    },
    "MCU_PSOC6_M4": {
        "inherits": [
            "MCU_PSOC6"
        ],
        "components_add": [
            "QSPIF",
            "CM0P_SLEEP"
        ],
        "macros_add": [
            "MCU_PSOC6_M4",
            "CY_USING_HAL",
            "MBED_TICKLESS",

            // These are named like Mbed components, but actually seem to be a definitions
            // used by the Cypress IDE-generated BSP.  We just want to define them all the time.
            "COMPONENT_BSP_DESIGN_MODUS=1",
            "COMPONENT_CM4=1",
        ],
        "public": false,
        "supported_application_profiles": [
            "full", "bare-metal"
        ]
    },
    "CY_EXTERNAL_WIFI_FW": {
        "public": false,
        "macros_add": [
            "CY_ENABLE_XIP_PROGRAM",
            "CY_STORAGE_WIFI_DATA=\".cy_xip\"",
            "CY_STORAGE_WIFI_DATA_OUTPUT=cy_xip",
            "CY_EXT_WIFI_FW_STORAGE=QSPIF"
        ]
    },
    "CY8CPROTO_062_4343W": {
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "features": [
            "BLE"
        ],
        "components_add": [
            "WHD",
            "4343W",
            "CYW43XXX"
        ],
        "device_has_remove": [
            "ANALOGOUT"
        ],
        "extra_labels_add": [
            "PSOC6_02",
            "MXCRYPTO_02",
            "CORDIO"
        ],
        "macros_add": [
            "CY8C624ABZI_D44",
            "CYBSP_WIFI_CAPABLE"
        ],
        "device_name": "CY8C624ABZI-D44",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x000FD800
            }
        },

        "detect_code": [
            "1901"
        ],
        "bootloader_supported": false,
        "sectors": [
            [
                268435456,
                512
            ]
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "image_url": "https://www.mouser.com/images/cypresssemiconductor/lrg/CY8CPROTO-062-4343W_t.jpg"
    },
    "CY8CKIT_062S2_43012": {
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "features": [
            "BLE"
        ],
        "components_add": [
            "WHD",
            "43012",
            "CYW43XXX"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "device_has_remove": [
            "ANALOGOUT"
        ],
        "extra_labels_add": [
            "PSOC6_02",
            "MXCRYPTO_02",
            "CORDIO"
        ],
        "macros_add": [
            "CY8C624ABZI_D44",
            "CYBSP_WIFI_CAPABLE"
        ],
        "device_name": "CY8C624ABZI-D44",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x000FD800
            }
        },

        "detect_code": [
            "190B"
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "image_url": "https://iotexpert.com/wp-content/uploads/2021/02/Screen-Shot-2021-02-24-at-6.55.57-AM-1024x713.jpg"
    },
    "CY8CPROTO_062S3_4343W": {
        "inherits": [
            "MCU_PSOC6_M4",
            "CY_EXTERNAL_WIFI_FW"
        ],
        "features": [
            "BLE"
        ],
        "components_add": [
            "WHD",
            "4343W",
            "CYW43XXX"
        ],
        "device_has_remove": [
            "ANALOGOUT"
        ],
        "extra_labels_add": [
            "PSOC6_03",
            "MXCRYPTO_02",
            "CORDIO"
        ],
        "macros_add": [
            "CY8C6245LQI_S3D72",
            "CYBSP_WIFI_CAPABLE"
        ],
        "device_name": "CY8C6245LQI-S3D72",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x0003D800
            }
        },

        "detect_code": [
            "190E"
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/4218/MFG_CY8CPROTO-062S3-4343W.jpg"
    },
    "CY8CKIT_062_WIFI_BT": { // AKA PSoC 6 WiFi-BT Pioneer Kit
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "features": [
            "BLE"
        ],
        "components_add": [
            "WHD",
            "4343W",
            "CYW43XXX",
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "PSOC6_01",
            "MXCRYPTO_01",
            "CORDIO"
        ],
        "macros_add": [
            "CY8C6247BZI_D54",
            "CYHAL_UDB_SDIO",
            "COMPONENT_UDB_SDIO_P2=1",
            "CYBSP_WIFI_CAPABLE"
        ],
        "device_name": "CY8C6247BZI-D54",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x00045800
            }
        },

        "detect_code": [
            "1900"
        ],
        "bootloader_supported": false,
        "sectors": [
            [
                268435456,
                512
            ]
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "program_cycle_s": 10,
        "image_url": "https://os.mbed.com/media/cache/platforms/P6_WiFi_Pionner_Kit.PNG.250x250_q85.png"
    },
    "CY8CKIT_062_BLE": { // AKA PSoC 6 BLE Pioneer Kit
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "device_has_remove": [
            "USBDEVICE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "extra_labels_add": [
            "PSOC6_01",
            "MXCRYPTO_01"
        ],
        "macros_add": [
            "CY8C6347BZI_BLD53"
        ],
        "device_name": "CY8C6347BZI-BLD53",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x00045800
            }
        },

        "detect_code": [
            "1902"
        ],
        "sectors": [
            [
                268443648,
                512
            ]
        ],
        "bootloader_supported": false,
        "image_url": "https://os.mbed.com/media/cache/platforms/SS2_3797_with_out_USB_cable.jpg.250x250_q85.jpg"
    },
    "CYW9P62S1_43438EVB_01": { // AKA CYW9P62S1-43438EVB-01 PSoC 62S1 Wi-Fi BT Pioneer Kit
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "features": [
            "BLE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "components_add": [
            "WHD",
            "43438",
            "CYW43XXX",
        ],
        "extra_labels_add": [
            "PSOC6_01",
            "MXCRYPTO_01",
            "CORDIO"
        ],
        "macros_add": [
            "CY8C6247BZI_D54",
            "CYHAL_UDB_SDIO",
            "COMPONENT_UDB_SDIO_P2=1",
            "CYBSP_WIFI_CAPABLE"
        ],
        "device_name": "CY8C6247BZI-D54",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x00045800
            }
        },

        "detect_code": [
            "1900"
        ],
        "bootloader_supported": false,
        "sectors": [
            [
                268435456,
                512
            ]
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "program_cycle_s": 10,

        // This is not a great picture but it's the best I could find...
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/424/MFG_CY8CKIT-062S2-43012.jpg"
    },
    "CYW9P62S1_43012EVB_01": { // AKA CYW9P62S1-43012EVB-01 PSoC 62S1 Wi-Fi BT Pioneer Kit
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "features": [
            "BLE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "components_add": [
            "WHD",
            "43012",
            "CYW43XXX",
        ],
        "device_has_remove": [
            "ANALOGOUT"
        ],
        "extra_labels_add": [
            "PSOC6_01",
            "MXCRYPTO_01",
            "CORDIO"
        ],
        "macros_add": [
            "CY8C6247FDI_D52",
            "CYHAL_UDB_SDIO",
            "COMPONENT_UDB_SDIO_P12=1",
            "CYBSP_WIFI_CAPABLE"
        ],
        "device_name": "CY8C6247FDI-D52",

        // Leave 0x2000 bytes at the start of RAM for the CM0+ application
        "memory_bank_config": {
            "IRAM1": {
                "start": 0x08002000,
                "size": 0x00045800
            }
        },

        "detect_code": [
            "1903"
        ],
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "image_url": "https://mm.digikey.com/Volume0/opasdata/d220001/medias/images/4905/CYW9P62S1-43012EVB-01.jpg"
    },
    "CY8CKIT064B0S2_4343W": { // AKA CY8CKIT-064B0S2-4343W PSoC 64 Secure Boot Wi-Fi BT Pioneer Kit
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "features": [
            "BLE"
        ],
        "components_add": [
            "WHD",
            "4343W",
            "CYW43XXX",
            "CM0P_SECURE"
        ],
        "components_remove": [
            "QSPIF",
            "CM0P_SLEEP"
        ],
        "device_has_remove": [
            "ANALOGOUT",
            "QSPI"
        ],
        "extra_labels_add": [
            "PSOC6_02",
            "MXCRYPTO_02",
            "CORDIO",
            "CY8CKIT_064B0S2_4343W"
        ],
        "macros_add": [
            "CYB0644ABZI_S2D44",
            "CY_IPC_DEFAULT_CFG_DISABLE",
            "CYBSP_WIFI_CAPABLE"
        ],
        "detect_code": [
            "1910"
        ],
        "forced_reset_timeout": 5,
        "hex_filename": "psoc6_02_cm0p_secure.hex",
        "cm0_img_id": 1,
        "cm4_img_id": 16,
        "boot_scheme": "single_image",
        "policy_file": "policy_single_CM0_CM4.json",
        "post_binary_hook": {
            "function": "PSOC6Code.sign_image"
        },
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "program_cycle_s": 10,
        "device_name": "CYB0644ABZI-S2D44",
        "image_url": "https://os.mbed.com/media/cache/platforms/SSP_8683_Ywwh0ix.jpg.250x250_q85.jpg"
    },
    "CYTFM_064B0S2_4343W": { // Same as
        "inherits": [
            "MCU_PSOC6_M4"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "features_add": [
            "BLE",
            "EXPERIMENTAL_API",
            "PSA"
        ],
        "components_add": [
            "WHD",
            "4343W",
            "CYW43XXX",
            "TFM_S_FW"
        ],
        "components_remove": [
            "QSPIF",
            "CM0P_SLEEP"
        ],
        "device_has_remove": [
            "ANALOGOUT",
            "QSPI",
            "TRNG",
            "CRC"
        ],
        "extra_labels_add": [
            "PSOC6_02",
            "CORDIO",
            "TFM",
            "TFM_V1_0",
            "TFM_DUALCPU"
        ],
        "macros_add": [
            "CYB0644ABZI_S2D44",
            "CY_IPC_DEFAULT_CFG_DISABLE",
            "CYBSP_WIFI_CAPABLE",
            "MXCRYPTO_DISABLED",
            "TFM_MULTI_CORE_MULTI_CLIENT_CALL=1"
        ],
        "detect_code": [
            "1910"
        ],
        "forced_reset_timeout": 5,
        "hex_filename": "tfm_s.hex",
        "cm0_img_id": 1,
        "cm4_img_id": 16,
        "boot_scheme": "multi_image",
        "policy_file": "policy_multi_CM0_CM4_tfm.json",
        "post_binary_hook": {
            "function": "PSOC6Code.sign_image"
        },
        "overrides": {
            "network-default-interface-type": "WIFI"
        },
        "program_cycle_s": 10,
        "tfm_target_name": "psoc64",
        "tfm_bootloader_supported": false,
        "tfm_default_toolchain": "GNUARM",
        "tfm_supported_toolchains": [
            "GNUARM"
        ],
        "tfm_delivery_dir": "TARGET_Cypress/TARGET_PSOC6/TARGET_CYTFM_064B0S2_4343W/COMPONENT_TFM_S_FW",
        "TFM_OUTPUT_EXT": "hex",
        "device_name": "CYB0644ABZI-S2D44",
        "image_url": "https://os.mbed.com/media/cache/platforms/SSP_8683_Ywwh0ix.jpg.250x250_q85.jpg"
    },

    // GigaDevices Targets ---------------------------------------------------------------------------------------------
    "GD32_Target": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "extra_labels_add": [
            "GigaDevice"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has_add": [
            "USTICKER",
            "ANALOGIN",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL"
        ],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ]
    },

    // As of Jun 2024, I cannot find the GD32 boards for sale anywhere.  Even people on the forums are wondering:
    // https://os.mbed.com/questions/87215/GigaDevice-Board-GD32-F307VG-any-idea-wh/
    // https://os.mbed.com/questions/86201/Purchase-this-board/
    // But apparently it may still be available in Chinese language only shops.
    "GD32_F307VG": {
        "inherits": [
            "GD32_Target"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "GD32F30X",
            "GD32F307VG",
            "GD_EMAC"
        ],
        "device_has_add": [
            "RTC",
            "I2C",
            "CAN",
            "I2CSLAVE",
            "ANALOGOUT",
            "SPI",
            "SPISLAVE",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "EMAC",
            "FLASH",
            "SLEEP",
            "MPU"
        ],
        "detect_code": [
            "1701"
        ],
        "macros_add": [
            "GD32F30X_CL"
        ],
        "release_versions": [
            "5"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "device_name": "GD32F307VG",
        "image_url": "https://os.mbed.com/media/uploads/Ray_Chen/307-1.png"
    },
    "GD32_F450ZI": {
        "inherits": [
            "GD32_Target"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "GD32F4XX",
            "GD32F450ZI",
            "GD_EMAC",
            "MBED_PSA_SRV"
        ],
        "features_add": [
            "PSA"
        ],
        "device_has_add": [
            "RTC",
            "I2C",
            "CAN",
            "I2CSLAVE",
            "ANALOGOUT",
            "SPI",
            "SPISLAVE",
            "SERIAL_ASYNCH",
            "SERIAL_FC",
            "EMAC",
            "FLASH",
            "SLEEP",
            "MPU",
            "TRNG"
        ],
        "device_name": "GD32F450ZI",
        "detect_code": [
            "1702"
        ],
        "macros_add": [
            "GD32F450"
        ],
        "bootloader_supported": true,
        "release_versions": [
            "5"
        ],
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/2-1_W6zHQ3F.jpg.250x250_q85.jpg"
    },

    // Samsung Targets -------------------------------------------------------------------------------------------------

    "S1SBP6A": { // AKA Samsung Bio-Processor S1SBP6A
        "inherits": ["Target"],
        "core": "Cortex-M4F",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "default_toolchain": "GCC_ARM",
        "extra_labels": [
            "Samsung",
            "SIDK_S1SBP6A"
        ],
        "device_has": [
            "USTICKER",
            "INTERRUPTIN",
            "SERIAL",
            "MPU",
            "SPI",
            "I2C",
            "RTC",
            "FLASH",
            "SLEEP",
            "WATCHDOG"
        ],
        "release_versions": ["5"],
        "detect_code": ["3703"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "device_name": "S1SBP6A",
        "image_url": "https://os.mbed.com/media/uploads/heuisam/pinout2.jpg"
    },

    // Ambiq Micro Targets ---------------------------------------------------------------------------------------------
    "FAMILY_Apollo3": {
        "inherits": ["Target"],
        "core": "Cortex-M4F",
        "features": ["BLE"],
        "default_toolchain": "GCC_ARM",
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "public": false,
        "extra_labels": [
            "Ambiq_Micro",
            "Apollo3",
            "CORDIO"
        ],
        "device_has": [
            "MPU",
            "USTICKER",
            "SERIAL",
            "INTERRUPTIN",
            "LPTICKER",
            "FLASH",
            "SPI",
            "I2C",
            "SLEEP",
            "ITM"
        ],
        "macros": [
            "CORDIO_ZERO_COPY_HCI",
            "USE_AMBIQ_DRIVER",
            "MBED_TICKLESS"
        ],
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        }
    },
    "AMA3B1KK": {
        "public": false,
        "inherits": ["FAMILY_Apollo3"],
        "macros_add": ["AM_PACKAGE_BGA", "MBED_TICKLESS"],
        "device_name": "AMA3B1KK-KBR",
        "is_mcu_family_target": true
    },
    "SFE_ARTEMIS": { // AKA SparkFun RedBoard Artemis
        "inherits": ["AMA3B1KK"],
        "image_url": "https://cdn.sparkfun.com/r/455-455/assets/parts/1/4/0/1/9/15444-SparkFun_RedBoard_Artemis-01.jpg"
    },
    "SFE_ARTEMIS_ATP": { // AKA SparkFun RedBoard Artemis ATP
        "inherits": ["AMA3B1KK"],
        "image_url": "https://cdn.sparkfun.com/r/455-455/assets/parts/1/4/0/1/7/15442-SparkFun_RedBoard_Artemis_ATP-05.jpg"
    },
    "SFE_ARTEMIS_DK": { // AKA SparkFun Artemis Development Kit
        "inherits": ["AMA3B1KK"],
        "components_add": ["lis2dh12", "hm01b0"],
        "image_url": "https://cdn.sparkfun.com/assets/parts/1/5/7/4/6/16828-SparkFun_Artemis_Development_Kit-01.jpg"
    },
    "SFE_ARTEMIS_MODULE": {
        "inherits": ["AMA3B1KK"],
        "image_url": "https://cdn.sparkfun.com/r/455-455/assets/parts/1/4/0/7/4/15484-SparkFun_Artemis_Module_-_Low_Power_Machine_Learning_BLE_Cortex-M4F-01b.jpg"
    },
    "SFE_ARTEMIS_NANO": { // AKA SparkFun RedBoard Artemis Nano
        "inherits": ["AMA3B1KK"],
        "image_url": "https://cdn.sparkfun.com/r/455-455/assets/parts/1/4/0/1/8/15443-SparkFun_RedBoard_Artemis_Nano-05.jpg"
    },
    "SFE_ARTEMIS_THING_PLUS": { // AKA SparkFun Thing Plus - Artemis
        "inherits": ["AMA3B1KK"]
    },
    // Toshiba Targets -------------------------------------------------------------------------------------------------
    "TMPM46B": { // AKA AdBun-M46B
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "is_disk_virtual": true,
        "extra_labels": [
            "TOSHIBA"
        ],
        "macros": [
            "__TMPM46B__"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "USTICKER",
            "ANALOGIN",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "RTC",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "TRNG",
            "FLASH",
            "SLEEP"
        ],
        "device_name": "TMPM46BF10FG",
        "detect_code": [
            "7013"
        ],
        "release_versions": [
            "5"
        ],
        "bootloader_supported": true,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "image_url": "https://www.chip1stop.com/img/product/SSST/0109140533_5a544d9d16351.JPG"
    },
    "TMPM4G9": { // AKA AdBun-M4G9
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "is_disk_virtual": true,
        "extra_labels": [
            "TOSHIBA"
        ],
        "macros": [
            "__TMPM4G9__"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "ANALOGIN",
            "ANALOGOUT",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "RTC",
            "FLASH",
            "SLEEP",
            "USTICKER",
            "MPU"
        ],
        "device_name": "TMPM4G9F15FG",
        "detect_code": [
            "7015"
        ],
        "release_versions": [
            "5"
        ],
        "bootloader_supported": true,
        "supported_application_profiles" : ["full", "bare-metal"],
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/AdBun-TMPM4G9_Wm9FG1c.png.250x250_q85.jpg"
    },
    // As of Jun 2024, this board can still apparently be purchased by sending an email (!!)
    // to these guys: https://www.esp.jp/tose/sub1.html
    // Manual (Japanese): https://www.esp.jp/tose/SBK-M4KN-KIT.pdf
    // I managed to find the schematics for this one on the Japanese version of the
    // manufacturer's site:
    // https://www.esp.jp/tos/sch/SBK-M4KN.pdf
    // https://www.esp.jp/tos/sch/KES-P2.pdf
    "TMPM4KN": { // AKA TMPM-M4KN-SBK from ESP Co.
        "inherits": ["Target"],
        "core": "Cortex-M4F",
        "is_disk_virtual": true,
        "extra_labels": ["TOSHIBA"],
        "macros": ["__TMPM4KN__"],
        "supported_toolchains": ["GCC_ARM"],
        "device_has": [
            "ANALOGIN",
            "INTERRUPTIN",
            "CRC",
            "I2C",
            "I2CSLAVE",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "SERIAL",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "USTICKER",
            "MPU",
            "FLASH"
        ],
        "device_name": "TMPM4KNFYAFG",
        "detect_code": ["7020"],
        "release_versions": ["5"],
        "bootloader_supported": true,
        "supported_application_profiles" : ["full"],
        "supported_c_libs": {
            "arm": [
                "std"
            ],
            "gcc_arm": [
                "std"
            ]
        },
        "image_url": "https://os.mbed.com/media/cache/platforms/M4KN_mbed_tw2kBoh.png.250x250_q85.png"
    },
    "TMPM4NR": { // AKA AdBun-M4NR
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "is_disk_virtual": true,
        "extra_labels": [
            "TOSHIBA"
        ],
        "macros": [
            "TMPM4NR"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "ANALOGIN",
            "ANALOGOUT",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "RTC",
            "FLASH",
            "SLEEP",
            "USTICKER",
            "MPU"
        ],
        "device_name": "TMPM4NRF20FG",
        "detect_code": [
            "7022"
        ],
        "release_versions": [
            "5"
        ],
        "bootloader_supported": true,
        "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "image_url": "https://wiki.segger.com/images/thumb/8/8a/tmpm4nr.jpg/300px-tmpm4nr.jpg"
    },
    "TMPM4GR": { // AKA AdBun-M4GR
        "inherits": [
            "Target"
        ],
        "core": "Cortex-M4F",
        "is_disk_virtual": true,
        "extra_labels": [
            "TOSHIBA"
        ],
        "macros": [
            "__TMPM4GR__"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "device_has": [
            "ANALOGIN",
            "ANALOGOUT",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "RESET_REASON",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "RTC",
            "FLASH",
            "SLEEP",
            "USTICKER",
            "MPU"
        ],
        "device_name": "TMPM4GRF20FG",
        "detect_code": [
            "7021"
        ],
        "release_versions": [
            "5"
        ],
        "bootloader_supported": true,
         "supported_c_libs": {
            "arm": [
                "std",
                "small"
            ],
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "image_url": "https://wiki.segger.com/images/thumb/6/68/tmpm4gr.jpg/402px-tmpm4gr.jpg"
    },
    "RP2040": {
        "public": false,
        "inherits": ["Target"],
        "core": "Cortex-M0+",
        "supported_toolchains": ["GCC_ARM"],
        "supported_application_profiles": [
            "full", "bare-metal"
        ],
        "extra_labels": [
            "RASPBERRYPI",
            "memmap_default"
        ],
        "overrides": {
            "xip-enable": true
        },
        "device_has": [
            "ANALOGIN",
            "FLASH",
            "I2C",
            "I2CSLAVE",
            "INTERRUPTIN",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SPI",
            "USTICKER",
            "WATCHDOG",
            "USBDEVICE",
            "RESET_REASON",
            "RTC"
        ],
        "device_name": "RP2040",
        "is_mcu_family_target": true
    },
    "RASPBERRY_PI_PICO": {
        "inherits": ["RP2040"],
        "macros_add": [
            "PICO_RP2040_USB_DEVICE_ENUMERATION_FIX=1",
            "MBED_MPU_CUSTOM",
            "PICO_TIME_DEFAULT_ALARM_POOL_DISABLED",
            "PICO_ON_DEVICE=1",
            "PICO_UART_ENABLE_CRLF_SUPPORT=0"
        ],
        "overrides": {
            "console-usb": true,
            "console-uart": false,

            // ADC_VDD sets the ADC reference voltage on this chip.
            // Most RP2040 boards set this pin to 3.3V.
            // Note that if the I/O voltage is set to less than the ADC reference voltage,
            // voltages higher than the I/O voltage are illegal for the analog pins
            // (so the ADC can never read 100%).
            "default-adc-vref": 3.3
        },
        "memory_banks": {
            "QSPI_FLASH": {
                "access": {
                    "execute": true,
                    "peripheral": false,
                    "read": true,
                    "secure": false,
                    "write": false
                },
                "default": true,
                "startup": true,
                "size": 0x200000, // 2MiB
                "start": 0x10000000
            }
        },
        "image_url": "https://cdn11.bigcommerce.com/s-2fbyfnm8ev/images/stencil/1280x1280/products/1212/4275/Pico3__75642.1611086462.jpg?c=2"
    },
    "RASPBERRY_PI_PICO_SWD": {
        "inherits": ["RASPBERRY_PI_PICO"],
        "overrides": {
            "console-usb": false,
            "console-uart": true
        }
    }
}
